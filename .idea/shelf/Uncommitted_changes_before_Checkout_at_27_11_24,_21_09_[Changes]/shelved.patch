Index: .idea/shelf/Uncommitted_changes_before_rebase_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]/shelved.patch	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ /dev/null	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
@@ -1,190 +0,0 @@
-Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/ChatModuleHandle.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package io.github.toberocat.improvedfactions.modules.chat.handles\n\nimport io.github.toberocat.improvedfactions.modules.chat.ChatMode\nimport java.util.UUID\n\ninterface ChatModuleHandle {\n    fun setChatMode(playerId: UUID, chatMode: ChatMode)\n    fun getChatMode(playerId: UUID): ChatMode\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/ChatModuleHandle.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/ChatModuleHandle.kt
---- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/ChatModuleHandle.kt	(revision 0d405585d8da2307c3dfb7e57c191dc046ee69a8)
-+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/ChatModuleHandle.kt	(date 1725811975739)
-@@ -6,4 +6,8 @@
- interface ChatModuleHandle {
-     fun setChatMode(playerId: UUID, chatMode: ChatMode)
-     fun getChatMode(playerId: UUID): ChatMode
-+    fun spy(playerId: UUID)
-+    fun unspy(playerId: UUID)
-+    fun isSpying(playerId: UUID): Boolean
-+    fun getSpyingPlayers(): Set<UUID>
- }
-\ No newline at end of file
-Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/DummyHandles.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package io.github.toberocat.improvedfactions.modules.chat.handles\n\nimport io.github.toberocat.improvedfactions.modules.chat.ChatMode\nimport java.util.*\n\nclass DummyChatModuleHandle: ChatModuleHandle {\n    override fun setChatMode(playerId: UUID, chatMode: ChatMode) = Unit\n\n    override fun getChatMode(playerId: UUID) = ChatMode.GLOBAL\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/DummyHandles.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/DummyHandles.kt
---- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/DummyHandles.kt	(revision 0d405585d8da2307c3dfb7e57c191dc046ee69a8)
-+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/DummyHandles.kt	(date 1725811984877)
-@@ -7,4 +7,10 @@
-     override fun setChatMode(playerId: UUID, chatMode: ChatMode) = Unit
- 
-     override fun getChatMode(playerId: UUID) = ChatMode.GLOBAL
-+    override fun spy(playerId: UUID) = Unit
-+
-+    override fun unspy(playerId: UUID) = Unit
-+
-+    override fun isSpying(playerId: UUID) = false
-+    override fun getSpyingPlayers(): Set<UUID> = emptySet()
- }
-\ No newline at end of file
-Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/impl/ChatModuleHandleImpl.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package io.github.toberocat.improvedfactions.modules.chat.impl\n\nimport io.github.toberocat.improvedfactions.modules.chat.ChatMode\nimport io.github.toberocat.improvedfactions.modules.chat.handles.ChatModuleHandle\nimport java.util.*\n\nclass ChatModuleHandleImpl : ChatModuleHandle {\n    private val map: MutableMap<UUID, ChatMode> = mutableMapOf()\n    override fun setChatMode(playerId: UUID, chatMode: ChatMode) {\n        map[playerId] = chatMode\n    }\n\n    override fun getChatMode(playerId: UUID): ChatMode = map[playerId] ?: ChatMode.GLOBAL\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/impl/ChatModuleHandleImpl.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/impl/ChatModuleHandleImpl.kt
---- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/impl/ChatModuleHandleImpl.kt	(revision 0d405585d8da2307c3dfb7e57c191dc046ee69a8)
-+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/impl/ChatModuleHandleImpl.kt	(date 1725812098427)
-@@ -6,9 +6,23 @@
- 
- class ChatModuleHandleImpl : ChatModuleHandle {
-     private val map: MutableMap<UUID, ChatMode> = mutableMapOf()
-+    private val spyingPlayers: MutableSet<UUID> = mutableSetOf()
-+
-     override fun setChatMode(playerId: UUID, chatMode: ChatMode) {
-         map[playerId] = chatMode
-     }
- 
-     override fun getChatMode(playerId: UUID): ChatMode = map[playerId] ?: ChatMode.GLOBAL
-+
-+    override fun spy(playerId: UUID) {
-+        spyingPlayers.add(playerId)
-+    }
-+
-+    override fun unspy(playerId: UUID) {
-+        spyingPlayers.remove(playerId)
-+    }
-+
-+    override fun isSpying(playerId: UUID) = spyingPlayers.contains(playerId)
-+
-+    override fun getSpyingPlayers() = spyingPlayers
- }
-\ No newline at end of file
-Index: improved-factions/src/main/resources/plugin.yml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>name: ImprovedFactions\nversion: '${version}'\nmain: io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\napi-version: '1.18'\nsoftdepend: [ PlaceholderAPI, dynmap, GuiEngine ]\nauthor: Tobero\ncommands:\n  factions:\n    aliases: [ \"f\", \"fac\", \"faction\" ]\npermissions:\n  factions.updatechecker:\n    default: op\n  factions:\n    default: true\n  factions.info:\n    default: true\n  factions.create:\n    default: true\n  factions.join:\n    default: true\n  factions.delete:\n    default: true\n  factions.icon:\n    default: true\n  factions.invite:\n    default: true\n  factions.invites:\n    default: true\n  factions.invitediscard:\n    default: true\n  factions.inviteaccept:\n    default: true\n  factions.leave:\n    default: true\n  factions.rename:\n    default: true\n  factions.claim:\n    default: true\n  factions.unclaim:\n    default: true\n  factions.help:\n    default: true\n  factions.rank:\n    default: true\n  factions.rank.assign:\n    default: true\n  factions.rank.create:\n    default: true\n  factions.rank.default:\n    default: true\n  factions.rank.delete:\n    default: true\n  factions.rank.edit:\n    default: true\n  factions.rank.set:\n    default: true\n  factions.kick:\n    default: true\n  factions.ban:\n    default: true\n  factions.unban:\n    default: true\n  factions.members:\n    default: true\n  factions.transferowner:\n    default: true\n  factions.power:\n    default: true\n  factions.wilderness:\n    default: true\n  factions.home:\n    default: true\n  factions.sethome:\n    default: true\n  factions.chat:\n    default: true\n  factions.map:\n    default: true\n  factions.zone:\n    default: op\n  factions.bypass:\n    default: op\n  factions.force:\n    default: op\n  factions.force.join:\n    default: op\n  factions.force.unclaim:\n    default: op\n  factions.zone.claim:\n    default: op\n  factions.zone.unclaim:\n    default: op\n  factions.reload:\n    default: op\n  factions.power.set:\n    default: op\n  factions.bypass.usage-limits.*:\n    default: op\n  factions.bypass.usage-limits.wilderness:\n    default: op
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/improved-factions/src/main/resources/plugin.yml b/improved-factions/src/main/resources/plugin.yml
---- a/improved-factions/src/main/resources/plugin.yml	(revision 0d405585d8da2307c3dfb7e57c191dc046ee69a8)
-+++ b/improved-factions/src/main/resources/plugin.yml	(date 1725812098415)
-@@ -92,6 +92,8 @@
-     default: op
-   factions.reload:
-     default: op
-+  factions.spy:
-+    default: op
-   factions.power.set:
-     default: op
-   factions.bypass.usage-limits.*:
-Index: improved-factions/src/main/resources/languages/messages_en.properties
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>base.action.possible-values={prefix} <green>Possible values: <yellow>{values}</yellow></green>\nbase.action.required-argument={prefix} <green>Please enter the argument <hover:show_text:'{description}'><yellow>{usage}</yellow></hover> in chat</green>\nbase.action.try-again={prefix} <red>Error: This parameter is not allowed. Please try again</red>\nbase.boss-bars.raidable=<red>Raidable</red>\nbase.boss-bars.siege=<red>Siege({participants}): <yellow>{x}, {z}, {world}</yellow></red>\nbase.claim-faction-territory.subtitles.unprotected=<red>Raidable</red>\nbase.claim-faction-territory=<yellow>{faction}</yellow>\nbase.claim.protected={prefix} <red>This chunk has been claimed, and you aren't permitted to interact with it</red>\nbase.command.args.banned-player=Provide the name of a banned player\nbase.command.args.bool=Provide a boolean value. It can be true or false\nbase.command.args.claim-radius=Provide a radius for a square\nbase.command.args.expected-number={prefix} <red>Error: Expected a whole number</red>\nbase.command.args.faction-member=Provide a faction member you have permission to manage\nbase.command.args.faction-name=Provide a faction name. It may contain spaces\nbase.command.args.faction=Provide a faction\nbase.command.args.fallback-rank=The fallback rank is optional. If provided, all players having this rank will be placed back to this one\nbase.command.args.help=Optionally, only show usage and description for this specific command\nbase.command.args.invite-id=Provide the ID for an invitation\nbase.command.args.joinMode=Join Mode\nbase.command.args.no-valid-entity={prefix} <red>Error: No valid entity provided</red>\nbase.command.args.optional-faction=If no faction is provided, your own faction will be used\nbase.command.args.permission=Provide a permission as an argument\nbase.command.args.player=Provide a player for this argument\nbase.command.args.power-type=Provide a power type. This can be maximum or accumulated\nbase.command.args.power=Provide a power value\nbase.command.args.priority=Provide a priority. It can manage all ranks below this rank\nbase.command.args.rank-name=Provide the name of a faction rank\nbase.command.args.rank=Assign a rank from your faction\nbase.command.args.zone=Provide a zone\nbase.command.ban.banned-target={prefix} <green>You have successfully banned this player</green>\nbase.command.ban.cant-ban-yourself={prefix} <red>Error: You cannot ban yourself</red>\nbase.command.ban.description=Ban a player, making him unable to join again\nbase.command.category.admin=Admin commands\nbase.command.category.claim=Claim commands\nbase.command.category.general=General commands\nbase.command.category.invites=Invite commands\nbase.command.category.manage=Manage commands\nbase.command.category.members=Member commands\nbase.command.category.permissions=Permission Management commands\nbase.command.claim.claimed-radius={prefix} <green>You successfully claimed <yellow>{successful-claims} / {total-claims}</yellow> in a radius of <yellow>{radius}</yellow> chunks</green>\nbase.command.claim.claimed={prefix} <green>You successfully claimed this chunk</green>\nbase.command.claim.description=Claim a chunk for your faction\nbase.command.create.description=Create a new faction\nbase.command.delete.deleted={prefix} <green>You've successfully deleted your faction</green>\nbase.command.delete.description=Delete your faction\nbase.command.faction-map.description=Display a map of the claimed chunks around you\nbase.command.force.description=Force a player to certain faction-related actions\nbase.command.force.join.already-member={prefix} <red>Error: The player is already a member of a faction</red>\nbase.command.force.join.description=Force a player to join a faction\nbase.command.force.join.error={prefix} <red>Error: The following error has been encountered when force joining the player:</red>\nbase.command.force.join.player-joined={prefix} <green>You've been forced to join the faction <yellow>{faction}</yellow></green>\nbase.command.force.join.success={prefix} <green>You've successfully forced the player to join the faction</green>\nbase.command.force.unclaim.description=Force a faction to unclaim a chunk\nbase.command.force.unclaim.unclaimed={prefix} <green>You've successfully forced the faction to unclaim the chunk</green>\nbase.command.help.category-overview={prefix} <click:run_command:'/f help category:{category-id}'><gold>Ã\u0082Â»</gold> <yellow>{category-name}</yellow> <aqua>-</aqua> <b><green>[Click]</green></b></click>\nbase.command.help.command-details={prefix} <gold>Ã\u0082Â»</gold> <click:suggest_command:'{cmd}'><yellow>{usage}</yellow></click> <aqua>-</aqua> <green>{description}</green>\nbase.command.help.command-not-found=<red>Error: Command not found</red>\nbase.command.help.description=Display the help menu\nbase.command.help.header={prefix} <yellow><b><----|</b> Factions <b>|----></b></yellow>\nbase.command.icon.description=Copy the item in your hand and use it as your faction's icon\nbase.command.icon.invalid-icon={prefix} <red>Error: This item cannot be used as an icon</red>\nbase.command.icon.set-icon={prefix} <green>Your faction's icon has been updated successfully</green>\nbase.command.info.description=Display information about a faction\nbase.command.info.detail={prefix} <gold>Ã\u0082Â»</gold> <click:run_command:'{cmd}'><yellow>{key}</yellow></click> <aqua>{value}</aqua>\nbase.command.info.header={prefix} <yellow><b><----|</b> {faction} <b>|----></b></yellow>\nbase.command.invite.description=Invite a player to join your faction\nbase.command.invite.invited-player={prefix} <green>You invited <yellow>{player}</yellow>. <yellow>{player}</yellow> has <yellow>5 minutes</yellow> to accept</green>\nbase.command.invite.you-have-been-invited={prefix} <green>You've been invited to join <yellow>{faction}</yellow> by <yellow>{inviter}</yellow> as <yellow>{rank}</yellow>. Click <click:run_command:'/f invites'><green>here</green></click> to view your invites</green>\nbase.command.inviteaccept.description=Accept an invitation to join a faction\nbase.command.inviteaccept.joined={prefix} <green>You've successfully joined the faction</green>\nbase.command.invitediscard.deleted={prefix} <green>You've discarded this invite</green>\nbase.command.invitediscard.description=Discard an invitation to join a faction\nbase.command.invites.description=Show all the invites you've received that haven't expired yet\nbase.command.invites.detail={prefix} <gold>Ã\u0082Â»</gold> <yellow>{faction}</yellow> <aqua>Join as {rank}</aqua> <green>Expires in {expires}</green> <click:run_command:'/factions inviteaccept {id}'><green>[Accept]</green></click> <click:run_command:'/factions invitediscard {id}'><red>[Discard]</red></click>\nbase.command.invites.header={prefix} <yellow><b><----|</b> Invites <b>|----></b></yellow>\nbase.command.join.description=Join a faction\nbase.command.join.joined={prefix} <green>You joined the faction</green>\nbase.command.joinMode.changed={prefix} <green>You've successfully changed the join mode to <yellow>{mode}</yellow></green>\nbase.command.joinMode.description=Change the join mode of your faction\nbase.command.kick.description=Kick a player from your faction\nbase.command.kick.kicked={prefix} <green>Player has been kicked successfully</green>\nbase.command.leave.description=Leave your faction\nbase.command.leave.left={prefix} <green>You left your faction</green>\nbase.command.list.description=List all factions\nbase.command.list.faction={prefix} <gold>Ã\u0082Â»</gold> <yellow>{name}</yellow> <aqua>Power: {power}</aqua> <green>Members: {members}</green>\nbase.command.list.header={prefix} <yellow><b><----|</b> Factions <b>|----></b></yellow>\nbase.command.members.detail={prefix} <gold>Ã\u0082Â»</gold> <yellow>{name}</yellow> <aqua>{rank}</aqua> <green>Last Seen: {lastSeen}</green>\nbase.command.members.header={prefix} <yellow><b><----|</b> Members <b>|----></b></yellow>\nbase.command.power.description=Access faction power\nbase.command.power.detail={prefix} <gold>Ã\u0082Â»</gold> <yellow>{key}</yellow> <aqua>{value}</aqua>\nbase.command.power.header={prefix} <yellow><b><----|</b> Power <b>|----></b></yellow>\nbase.command.power.set.description=Set the power of a faction\nbase.command.rank.assign.assigned={prefix} <green>You have successfully assigned the player the rank</green>\nbase.command.rank.assign.description=Assign a player to a rank\nbase.command.rank.create.created={prefix} <green>You have successfully created this rank</green>\nbase.command.rank.create.description=Create a new rank for your faction\nbase.command.rank.default.description=Set the rank new members will join with\nbase.command.rank.default.set={prefix} <green>You have successfully set this rank as the new default rank for members joining</green>\nbase.command.rank.delete.deleted={prefix} <green>You have successfully deleted this rank</green>\nbase.command.rank.delete.description=Delete a rank\nbase.command.rank.delete.rank-is-default={prefix} <red>You cannot delete this rank because it's the default rank for new members</red>\nbase.command.rank.description=Access rank commands\nbase.command.rank.edit.description=Edit permissions for a specific rank via GUI\nbase.command.rank.edit.header={prefix} <yellow><b><----|</b> Permissions <b>|----></b></yellow>\nbase.command.rank.edit.permission-details={prefix} <gold>Ã\u0082Â»</gold> <click:suggest_command:'/factions rank set {rank} {permission} {value}'><yellow>{permission}</yellow></click> <aqua>{value}</aqua>\nbase.command.rank.header={prefix} <yellow><b><----|</b> Ranks <b>|----></b></yellow>\nbase.command.rank.rank-overview={prefix} <gold>Ã\u0082Â»</gold> <click:run_command:'/factions rank edit {name}'><yellow>{name}</yellow></click> <aqua>Priority: {priority}</aqua> <green>Assigned: {countAssignedUsers}</green>\nbase.command.rank.set.description=Set a permission for a rank\nbase.command.rank.set.updated={prefix} <green>Permissions have been set successfully</green>\nbase.command.reload.description=Reload the faction configs\nbase.command.rename.description=Rename your faction\nbase.command.rename.renamed={prefix} <green>You've successfully renamed your faction</green>\nbase.command.unban.description=Unban a player, making him able to join again after being banned\nbase.command.unban.unbanned-target={prefix} <red>Error: You have successfully unbanned this player</red>\nbase.command.unclaim.description=Unclaim a chunk for your faction\nbase.command.unclaim.unclaimed-radius={prefix} <green>You successfully unclaimed <yellow>{successful-claims} / {total-claims}</yellow> chunks in a radius of <yellow>{radius}</yellow> chunks</green>\nbase.command.unclaim.unclaimed={prefix} <green>You've successfully unclaimed this chunk</green>\nbase.command.zone.claim.description=Mark a claim as property of this zone\nbase.command.zone.claimed-radius={prefix} <green>You successfully claimed <yellow>{successful-claims} / {total-claims}</yellow> chunks in a radius of <yellow>{radius}</yellow> chunks with this zone</green>\nbase.command.zone.claimed={prefix} <green>You have successfully claimed this chunk with this zone</green>\nbase.command.zone.description=Access the admin zone commands\nbase.command.zone.unclaim.description=Unmark a claim from any zone associations\nbase.command.zone.unclaimed-radius={prefix} <green>You successfully unclaimed <yellow>{successful-claims} / {total-claims}</yellow> chunks in a radius of <yellow>{radius}</yellow> chunks from any associated zones</green>\nbase.command.zone.unclaimed={prefix} <green>You have successfully unclaimed this land from any associated zones</green>\nbase.commands.args.confirmation-needed={prefix} <red>Error: You need to confirm the command. Use <yellow>/f <command> confirm</yellow></red>\nbase.commands.args.permission=Provide a permission\nbase.commands.bypass.add-bypass={prefix} <green>You've successfully added the bypass for this player</green>\nbase.commands.bypass.description=Add or remove a bypass for a player. A bypass only stays until the next server restart\nbase.commands.bypass.remove-bypass={prefix} <green>You've successfully removed the bypass for this player</green>\nbase.commands.create.created-faction={prefix} <green>Congratulations! Your faction has been successfully created.</green>\nbase.commands.members.description=View your faction's members\nbase.commands.transferowner.description=Transfer the ownership to someone else from your faction\nbase.commands.transferowner.owner-transfered={prefix} <green>You've successfully transferred your ownership to another player. You've been assigned the default rank for this faction</green>\nbase.commands.transferowner.youre-the-owner-now={prefix} <green>You're the new owner of this faction</green>\nbase.exception.claim-radius.max={prefix} <red>Error: The radius must be less than or equal to <yellow>{max-radius}</yellow></red>\nbase.exception.claim-radius.positive={prefix} <red>Error: The radius must be a positive number</red>\nbase.exception.command-not-found={prefix} <red>Error: Command not found</red>\nbase.exception.zone-doesnt-exist={prefix} <red>Error: Zone does not exist</red>\nbase.exceptions.already-banned={prefix} <red>Error: You cannot ban this player as they are already banned</red>\nbase.exceptions.arg-doesnt-match={prefix} <red>Error: The provided argument contains disallowed characters.</red>\nbase.exceptions.arg-is-no-player={prefix} <red>Error: The provided argument is not a player</red>\nbase.exceptions.cant-be-in-faction={prefix} <red>Error: You cannot be in a faction while using this command</red>\nbase.exceptions.cant-claim-this-chunk={prefix} <red>Error: You cannot claim the chunk at <yellow>{x}, {z}</yellow></red>\nbase.exceptions.cant-invite-yourself={prefix} <red>Error: You cannot invite yourself</red>\nbase.exceptions.cant-manage-this-rank={prefix} <red>Error: You cannot manage this rank</red>\nbase.exceptions.command-limit-reached={prefix} <red>Error: You've reached the command limit of <yellow>{limit}</yellow> usages</red>\nbase.exceptions.confirmation-needed={prefix} <red>Error: Confirmation is required to execute this command. Use <yellow>/f <command> confirm</yellow></red>\nbase.exceptions.cooldown={prefix} <red>Error: You need to wait <yellow>{left}</yellow> before using this command again</red>\nbase.exceptions.expected-boolean={prefix} <red>A boolean value was expected</red>\nbase.exceptions.faction-doesnt-exist={prefix} <red>Error: The specified faction does not exist.</red>\nbase.exceptions.faction-doesnt-have-claim={prefix} <red>This claim is not owned by your faction, and you cannot therefore remove it</red>\nbase.exceptions.faction-not-found={prefix} <red>Error: Faction not found</red>\nbase.exceptions.faction-shouldnt-exist={prefix} <red>Error: The faction already exists.</red>\nbase.exceptions.icon.invalid-icon={prefix} <red>Error: The icon's item data would exceed the maximum allowed icon data length and therefore cannot be used</red>\nbase.exceptions.invalid-argument-length={prefix} <red>Error: The provided arguments do not fit the requirements.</red>\nbase.exceptions.max-arg-length-exceeded={prefix} <red>Error: You've exceeded the maximum number of characters allowed in this argument. You are at <gold>{provided}</gold> characters</red>\nbase.exceptions.missing-permissions={prefix} <red>You do not have sufficient permissions. If needed, contact your faction owner for permission</red>\nbase.exceptions.need-faction={prefix} <red>Error: To execute this command, you must be a part of a faction.</red>\nbase.exceptions.needs-to-be-faction-owner={prefix} <red>Error: You need to be the owner of this faction to run this command</red>\nbase.exceptions.not-enough-permissions={prefix} <red>Error: You do not have the required permission</red>\nbase.exceptions.not-enough-power-for-claim={prefix} <red>Your faction doesn't have enough power to claim the chunk at <yellow>{x}, {z}</yellow></red>\nbase.exceptions.permission-not-valid={prefix} <red>Permission is not valid</red>\nbase.exceptions.player-already-owner={prefix} <red>Error: Player already owner</red>\nbase.exceptions.player-cant-leave-is-owner={prefix} <red>This player can't leave this faction, because of their owner rank</red>\nbase.exceptions.player-not-in-faction={prefix} <red>Error: This specified player isn't in your faction</red>\nbase.exceptions.rank-name-exceeds-limit={prefix} <red>Error: Rank name exceeds limit</red>\nbase.exceptions.rank-name-not-matching={prefix} <red>Error: Rank name does not match the required pattern</red>\nbase.exceptions.rank-not-found={prefix} <red>Error: Rank not found</red>\nbase.exceptions.sender-must-be-player={prefix} <red>Error: The sender must be a player</red>\nbase.exceptions.you-are-banned={prefix} <red>Error: You cannot join this faction because you are banned from it</red>\nbase.faction.chunk-claimed={prefix} <green>Your faction has just claimed a chunk at <yellow>{x}, {z}</yellow> in <yellow>{world}</yellow></green>\nbase.faction.chunk-unclaimed={prefix} <green>Your faction has just unclaimed a chunk at <yellow>{x}, {z}</yellow> in <yellow>{world}</yellow></green>\nbase.faction.join-type-changed={prefix} <green>Your faction's join mode has been updated to <yellow>{mode}</yellow></green>\nbase.faction.player-invited={prefix} <green><yellow>{invited}</yellow> has been invited to join your faction by <yellow>{inviter}</yellow>. <yellow>{invited}</yellow> has <yellow>5 minutes</yellow> to accept</green>\nbase.faction.player-joined={prefix} <green><yellow>{player}</yellow> has joined this faction with the rank <yellow>{rank}</yellow></green>\nbase.faction.player-kicked={prefix} <green>Player has been kicked successfully</green>\nbase.faction.player-left={prefix} <green><yellow>{player}</yellow> left your faction</green>\nbase.faction.renamed={prefix} <green>Your faction has been renamed from <yellow>{old}</yellow> to <yellow>{new}</yellow></green>\nbase.faction.unbanned={prefix} <green>The ban for <yellow>{target}</yellow> has been lifted</green>\nbase.messages.command-usage-limit={prefix} <green>You can use this command only <yellow>{left}</yellow> times again</green>\nbase.player-teleport.cancel-message={prefix} <red>You moved while teleporting. Aborted the teleportation</red>\nbase.player-teleport.cancel-title=<red>Teleportation cancelled</red>\nbase.prefix=<hover:show_text:'<dark_gray>Author:</dark_gray> <aqua>Tobero</aqua>'><dark_gray>[</dark_gray><yellow>IF</yellow><dark_gray>]</dark_gray></hover>\nbase.zone.protected={prefix} <red>This chunk is protected by a zone</red>\nbase.zone.safezone=<aqua>Safezone</aqua>\nbase.zone.unmanaged=Unmanaged\nbase.zone.warzone=<dark_red>War zone</dark_red>\nbase.zone.wilderness=<dark_green>Wilderness</dark_green>\nchat.commands.arg.chat-message=The chat message that should get sent into the faction\nchat.commands.chat.description=Toggle the chat your messages will be sent to. If you provide a message, it will send the message into the faction chat\nchat.commands.chat.toggled-faction={prefix} <green>You will now write in the <red>Faction</red> chat</green>\nchat.commands.chat.toggled-global={prefix} <green>You will now write in the <yellow>Global</yellow> chat</green>\nchat.faction.template=<dark_gray>[</dark_gray><red>{faction}</red><dark_gray>]</dark_gray> <white>{player}</white><white>:</white> <white>{message}</white>\nhome.commands.sethome.description=Set your faction's home\nhome.commands.sethome.failed={prefix} <red>Error: You can't set your faction's home here</red>\nhome.commands.sethome.success={prefix} <green>You've successfully set your faction's home</green>\nhome.commands.teleport-home.description=Teleport to your faction's home\nhome.commands.teleport-home.failed={prefix} <red>Error: You can't teleport to your faction's home</red>\nhome.messages.invalid-world={prefix} <red>Error: You can't set the home here, as it's in a invalid world</red>\nhome.messages.not-in-claim={prefix} <red>Error: You can't set the home here, as this isn't in your faction's claim</red>\nhome.messages.teleporting-subtitle=<yellow>Don't move! Teleporting in {time} seconds</yellow>\nhome.messages.teleporting-title=<yellow>Teleporting to Faction Home</yellow>\npower.command.category.power=Power commands\npower.exceptions.not-enough-power={prefix} <red>Your faction doesn't have enough power to afford this action</red>\npower.faction.accumulated-power-changed.chunk-claimed={prefix} <green>Your faction just <red>lost</red> some <aqua>power</aqua> due to <yellow>a chunk getting claimed</yellow>. The current level is at <aqua>{new} / {max}</aqua></green>\npower.faction.accumulated-power-changed.chunk-keep-cost={prefix} <green>Your faction has experienced a <red>loss</red> in <aqua>power</aqua> attributed to the <yellow>maintenance cost of your claims</yellow>. The current level is at <aqua>{new} / {max}</aqua></green>\npower.faction.accumulated-power-changed.max-changed={prefix} <green>Your faction just <red>lost</red> some <aqua>power</aqua> due to <yellow>the max getting lowered</yellow>. The current level is at <aqua>{new}</aqua></green>\npower.faction.accumulated-power-changed.other={prefix} <green>Your faction just changed <aqua>power</aqua> due to <yellow>an external event</yellow>. The current level is at <aqua>{new} / {max}</aqua></green>\npower.faction.accumulated-power-changed.passive-energy-accumulation={prefix} <green>Your faction just gained some <aqua>power</aqua> due to <yellow>passive power accumulation</yellow>. The current level is at <aqua>{new} / {max}</aqua></green>\npower.faction.accumulated-power-changed.player-death={prefix} <green>Your faction just <red>lost</red> power, caused by a <yellow>member's death</yellow>. New power: <aqua>{new} / {max}</aqua></green>\npower.faction.max-power-changed={prefix} <green>Your faction's max power just updated. New max power: <aqua>{new}</aqua></green>\npower.siege.defended={prefix} <blue>The chunk at <yellow>{x}, {z}</yellow> in <yellow>{world}</yellow> got successfully defended. The siege was a failure!</blue>\npower.siege.started={prefix} <blue>The chunk at <yellow>{x}, {z}</yellow> in <yellow>{world}</yellow> got involved in a siege. Get involved in the battle by navigating to it!</blue>\npower.siege.unclaimed={prefix} <blue>The chunk at <yellow>{x}, {z}</yellow> in <yellow>{world}</yellow> got unclaimed. The siege was a victory!</blue>\nwilderness.command.wilderness.description=Teleport to a random location in the wilderness\nwilderness.command.wilderness.failed-to-find={prefix} <red>Error: Failed find a position within the wilderness</red>\nwilderness.command.wilderness.teleported={prefix} <green>You've been teleported to a random location in the wilderness</green>\nwilderness.messages.teleporting-subtitle=<yellow>Don't move! Teleporting in {time} seconds</yellow>\nwilderness.messages.teleporting-title=<dark_green>Teleporting to Wilderness</dark_green>\npower.siege.start={prefix} <green>This claim is <red>raidable</red>. Type <yellow>/f siege</yellow> to start overclaiming this chunk</green>\npower.siege.already-started={prefix} <red>Error: The siege has already started</red>\npower.siege.not-in-claim={prefix} <red>Error: You're not in a claim</red>\npower.siege.own-claim={prefix} <red>Error: You can't siege your own claim</red>\npower.siege.entered={prefix} <green>You've entered the siege</green>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>ISO-8859-1
-===================================================================
-diff --git a/improved-factions/src/main/resources/languages/messages_en.properties b/improved-factions/src/main/resources/languages/messages_en.properties
---- a/improved-factions/src/main/resources/languages/messages_en.properties	(revision 0d405585d8da2307c3dfb7e57c191dc046ee69a8)
-+++ b/improved-factions/src/main/resources/languages/messages_en.properties	(date 1725811951430)
-@@ -201,6 +201,9 @@
- home.messages.teleporting-subtitle=<yellow>Don't move! Teleporting in {time} seconds</yellow>
- home.messages.teleporting-title=<yellow>Teleporting to Faction Home</yellow>
- power.command.category.power=Power commands
-+chat.command.spy.description=Toggle the spy mode for the faction chat
-+chat.command.spy.disabled={prefix} <green>You've disabled the spy mode for the faction chat</green>
-+chat.command.spy.enabled={prefix} <green>You've enabled the spy mode for the faction chat</green>
- power.exceptions.not-enough-power={prefix} <red>Your faction doesn't have enough power to afford this action</red>
- power.faction.accumulated-power-changed.chunk-claimed={prefix} <green>Your faction just <red>lost</red> some <aqua>power</aqua> due to <yellow>a chunk getting claimed</yellow>. The current level is at <aqua>{new} / {max}</aqua></green>
- power.faction.accumulated-power-changed.chunk-keep-cost={prefix} <green>Your faction has experienced a <red>loss</red> in <aqua>power</aqua> attributed to the <yellow>maintenance cost of your claims</yellow>. The current level is at <aqua>{new} / {max}</aqua></green>
-Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/ChatModule.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package io.github.toberocat.improvedfactions.modules.chat\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.modules.base.BaseModule\nimport io.github.toberocat.improvedfactions.modules.chat.commands.ChatCommand\nimport io.github.toberocat.improvedfactions.modules.chat.handles.ChatModuleHandle\nimport io.github.toberocat.improvedfactions.modules.chat.handles.DummyChatModuleHandle\nimport io.github.toberocat.improvedfactions.modules.chat.impl.ChatModuleHandleImpl\nimport io.github.toberocat.improvedfactions.modules.chat.listener.ChatListener\nimport io.github.toberocat.toberocore.command.CommandExecutor\nimport org.bukkit.entity.Player\n\nobject ChatModule : BaseModule {\n    const val MODULE_NAME = \"chat\"\n    override val moduleName = MODULE_NAME\n\n    var chatModuleHandle: ChatModuleHandle = DummyChatModuleHandle()\n\n    override fun addCommands(plugin: ImprovedFactionsPlugin, executor: CommandExecutor) {\n        executor.addChild(ChatCommand(chatModuleHandle, plugin))\n    }\n\n    override fun onEnable(plugin: ImprovedFactionsPlugin) {\n        chatModuleHandle = ChatModuleHandleImpl()\n        plugin.registerListeners(\n            ChatListener(chatModuleHandle)\n        )\n    }\n\n    fun Player.resetChatMode() = chatModuleHandle.setChatMode(uniqueId, ChatMode.GLOBAL)\n\n    fun Player.sendFactionChat(message: String) = ChatMode.FACTION.sendIntoChat(this, message)\n\n    fun Player.toggleChatMode(): ChatMode {\n        val current = chatModuleHandle.getChatMode(uniqueId).ordinal\n        val values = enumValues<ChatMode>()\n        val nextChatMode = values[(current + 1) % values.size]\n        chatModuleHandle.setChatMode(uniqueId, nextChatMode)\n        return nextChatMode\n    }\n\n    fun chatPair() = MODULE_NAME to this\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/ChatModule.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/ChatModule.kt
---- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/ChatModule.kt	(revision 0d405585d8da2307c3dfb7e57c191dc046ee69a8)
-+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/ChatModule.kt	(date 1725812098405)
-@@ -3,6 +3,7 @@
- import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
- import io.github.toberocat.improvedfactions.modules.base.BaseModule
- import io.github.toberocat.improvedfactions.modules.chat.commands.ChatCommand
-+import io.github.toberocat.improvedfactions.modules.chat.commands.ChatSpyCommand
- import io.github.toberocat.improvedfactions.modules.chat.handles.ChatModuleHandle
- import io.github.toberocat.improvedfactions.modules.chat.handles.DummyChatModuleHandle
- import io.github.toberocat.improvedfactions.modules.chat.impl.ChatModuleHandleImpl
-@@ -18,6 +19,7 @@
- 
-     override fun addCommands(plugin: ImprovedFactionsPlugin, executor: CommandExecutor) {
-         executor.addChild(ChatCommand(chatModuleHandle, plugin))
-+        executor.addChild(ChatSpyCommand(plugin, chatModuleHandle))
-     }
- 
-     override fun onEnable(plugin: ImprovedFactionsPlugin) {
-Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatSpyCommand.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatSpyCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatSpyCommand.kt
-new file mode 100755
---- /dev/null	(date 1725812098080)
-+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatSpyCommand.kt	(date 1725812098080)
-@@ -0,0 +1,37 @@
-+package io.github.toberocat.improvedfactions.modules.chat.commands
-+
-+import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
-+import io.github.toberocat.improvedfactions.modules.chat.handles.ChatModuleHandle
-+import io.github.toberocat.improvedfactions.translation.sendLocalized
-+import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-+import io.github.toberocat.improvedfactions.utils.command.CommandMeta
-+import io.github.toberocat.toberocore.command.PlayerSubCommand
-+import io.github.toberocat.toberocore.command.arguments.Argument
-+import io.github.toberocat.toberocore.command.options.Options
-+import org.bukkit.entity.Player
-+import java.util.*
-+
-+@CommandMeta(
-+    description = "chat.command.spy.description",
-+    module = "chat",
-+    category = CommandCategory.GENERAL_CATEGORY
-+)
-+class ChatSpyCommand(private val plugin: ImprovedFactionsPlugin,
-+                     private val chatHandler: ChatModuleHandle) : PlayerSubCommand("spy") {
-+
-+    override fun options(): Options = Options.getFromConfig(plugin, label) {options, _ ->
-+    }
-+
-+    override fun arguments(): Array<Argument<*>> = arrayOf()
-+
-+    override fun handle(player: Player, args: Array<String>): Boolean {
-+        if (chatHandler.isSpying(player.uniqueId)) {
-+            chatHandler.unspy(player.uniqueId)
-+            player.sendLocalized("chat.command.spy.disabled")
-+        } else {
-+            chatHandler.spy(player.uniqueId)
-+            player.sendLocalized("chat.command.spy.enabled")
-+        }
-+        return true
-+    }
-+}
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/shelved.patch	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ /dev/null	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
@@ -1,190 +0,0 @@
-Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/ChatModuleHandle.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package io.github.toberocat.improvedfactions.modules.chat.handles\n\nimport io.github.toberocat.improvedfactions.modules.chat.ChatMode\nimport java.util.UUID\n\ninterface ChatModuleHandle {\n    fun setChatMode(playerId: UUID, chatMode: ChatMode)\n    fun getChatMode(playerId: UUID): ChatMode\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/ChatModuleHandle.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/ChatModuleHandle.kt
---- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/ChatModuleHandle.kt	(revision 334f0f846e51cbb04c50096b8e8bd047338df90f)
-+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/ChatModuleHandle.kt	(date 1725812101489)
-@@ -6,4 +6,8 @@
- interface ChatModuleHandle {
-     fun setChatMode(playerId: UUID, chatMode: ChatMode)
-     fun getChatMode(playerId: UUID): ChatMode
-+    fun spy(playerId: UUID)
-+    fun unspy(playerId: UUID)
-+    fun isSpying(playerId: UUID): Boolean
-+    fun getSpyingPlayers(): Set<UUID>
- }
-\ No newline at end of file
-Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/DummyHandles.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package io.github.toberocat.improvedfactions.modules.chat.handles\n\nimport io.github.toberocat.improvedfactions.modules.chat.ChatMode\nimport java.util.*\n\nclass DummyChatModuleHandle: ChatModuleHandle {\n    override fun setChatMode(playerId: UUID, chatMode: ChatMode) = Unit\n\n    override fun getChatMode(playerId: UUID) = ChatMode.GLOBAL\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/DummyHandles.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/DummyHandles.kt
---- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/DummyHandles.kt	(revision 334f0f846e51cbb04c50096b8e8bd047338df90f)
-+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/handles/DummyHandles.kt	(date 1725812101925)
-@@ -7,4 +7,10 @@
-     override fun setChatMode(playerId: UUID, chatMode: ChatMode) = Unit
- 
-     override fun getChatMode(playerId: UUID) = ChatMode.GLOBAL
-+    override fun spy(playerId: UUID) = Unit
-+
-+    override fun unspy(playerId: UUID) = Unit
-+
-+    override fun isSpying(playerId: UUID) = false
-+    override fun getSpyingPlayers(): Set<UUID> = emptySet()
- }
-\ No newline at end of file
-Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/impl/ChatModuleHandleImpl.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package io.github.toberocat.improvedfactions.modules.chat.impl\n\nimport io.github.toberocat.improvedfactions.modules.chat.ChatMode\nimport io.github.toberocat.improvedfactions.modules.chat.handles.ChatModuleHandle\nimport java.util.*\n\nclass ChatModuleHandleImpl : ChatModuleHandle {\n    private val map: MutableMap<UUID, ChatMode> = mutableMapOf()\n    override fun setChatMode(playerId: UUID, chatMode: ChatMode) {\n        map[playerId] = chatMode\n    }\n\n    override fun getChatMode(playerId: UUID): ChatMode = map[playerId] ?: ChatMode.GLOBAL\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/impl/ChatModuleHandleImpl.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/impl/ChatModuleHandleImpl.kt
---- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/impl/ChatModuleHandleImpl.kt	(revision 334f0f846e51cbb04c50096b8e8bd047338df90f)
-+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/impl/ChatModuleHandleImpl.kt	(date 1725812101934)
-@@ -6,9 +6,23 @@
- 
- class ChatModuleHandleImpl : ChatModuleHandle {
-     private val map: MutableMap<UUID, ChatMode> = mutableMapOf()
-+    private val spyingPlayers: MutableSet<UUID> = mutableSetOf()
-+
-     override fun setChatMode(playerId: UUID, chatMode: ChatMode) {
-         map[playerId] = chatMode
-     }
- 
-     override fun getChatMode(playerId: UUID): ChatMode = map[playerId] ?: ChatMode.GLOBAL
-+
-+    override fun spy(playerId: UUID) {
-+        spyingPlayers.add(playerId)
-+    }
-+
-+    override fun unspy(playerId: UUID) {
-+        spyingPlayers.remove(playerId)
-+    }
-+
-+    override fun isSpying(playerId: UUID) = spyingPlayers.contains(playerId)
-+
-+    override fun getSpyingPlayers() = spyingPlayers
- }
-\ No newline at end of file
-Index: improved-factions/src/main/resources/plugin.yml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>name: ImprovedFactions\nversion: '${version}'\nmain: io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\napi-version: '1.18'\nsoftdepend: [ PlaceholderAPI, dynmap, GuiEngine ]\nauthor: Tobero\ncommands:\n  factions:\n    aliases: [ \"f\", \"fac\", \"faction\" ]\npermissions:\n  factions.updatechecker:\n    default: op\n  factions:\n    default: true\n  factions.info:\n    default: true\n  factions.create:\n    default: true\n  factions.join:\n    default: true\n  factions.delete:\n    default: true\n  factions.icon:\n    default: true\n  factions.invite:\n    default: true\n  factions.invites:\n    default: true\n  factions.invitediscard:\n    default: true\n  factions.inviteaccept:\n    default: true\n  factions.leave:\n    default: true\n  factions.rename:\n    default: true\n  factions.claim:\n    default: true\n  factions.unclaim:\n    default: true\n  factions.help:\n    default: true\n  factions.rank:\n    default: true\n  factions.rank.assign:\n    default: true\n  factions.rank.create:\n    default: true\n  factions.rank.default:\n    default: true\n  factions.rank.delete:\n    default: true\n  factions.rank.edit:\n    default: true\n  factions.rank.set:\n    default: true\n  factions.kick:\n    default: true\n  factions.ban:\n    default: true\n  factions.unban:\n    default: true\n  factions.members:\n    default: true\n  factions.transferowner:\n    default: true\n  factions.power:\n    default: true\n  factions.wilderness:\n    default: true\n  factions.home:\n    default: true\n  factions.sethome:\n    default: true\n  factions.chat:\n    default: true\n  factions.map:\n    default: true\n  factions.zone:\n    default: op\n  factions.bypass:\n    default: op\n  factions.force:\n    default: op\n  factions.force.join:\n    default: op\n  factions.force.unclaim:\n    default: op\n  factions.zone.claim:\n    default: op\n  factions.zone.unclaim:\n    default: op\n  factions.reload:\n    default: op\n  factions.power.set:\n    default: op\n  factions.bypass.usage-limits.*:\n    default: op\n  factions.bypass.usage-limits.wilderness:\n    default: op
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/improved-factions/src/main/resources/plugin.yml b/improved-factions/src/main/resources/plugin.yml
---- a/improved-factions/src/main/resources/plugin.yml	(revision 334f0f846e51cbb04c50096b8e8bd047338df90f)
-+++ b/improved-factions/src/main/resources/plugin.yml	(date 1725812101966)
-@@ -92,6 +92,8 @@
-     default: op
-   factions.reload:
-     default: op
-+  factions.spy:
-+    default: op
-   factions.power.set:
-     default: op
-   factions.bypass.usage-limits.*:
-Index: improved-factions/src/main/resources/languages/messages_en.properties
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>base.action.possible-values={prefix} <green>Possible values: <yellow>{values}</yellow></green>\nbase.action.required-argument={prefix} <green>Please enter the argument <hover:show_text:'{description}'><yellow>{usage}</yellow></hover> in chat</green>\nbase.action.try-again={prefix} <red>Error: This parameter is not allowed. Please try again</red>\nbase.boss-bars.raidable=<red>Raidable</red>\nbase.boss-bars.siege=<red>Siege({participants}): <yellow>{x}, {z}, {world}</yellow></red>\nbase.claim-faction-territory.subtitles.unprotected=<red>Raidable</red>\nbase.claim-faction-territory=<yellow>{faction}</yellow>\nbase.claim.protected={prefix} <red>This chunk has been claimed, and you aren't permitted to interact with it</red>\nbase.command.args.banned-player=Provide the name of a banned player\nbase.command.args.bool=Provide a boolean value. It can be true or false\nbase.command.args.claim-radius=Provide a radius for a square\nbase.command.args.expected-number={prefix} <red>Error: Expected a whole number</red>\nbase.command.args.faction-member=Provide a faction member you have permission to manage\nbase.command.args.faction-name=Provide a faction name. It may contain spaces\nbase.command.args.faction=Provide a faction\nbase.command.args.fallback-rank=The fallback rank is optional. If provided, all players having this rank will be placed back to this one\nbase.command.args.help=Optionally, only show usage and description for this specific command\nbase.command.args.invite-id=Provide the ID for an invitation\nbase.command.args.joinMode=Join Mode\nbase.command.args.no-valid-entity={prefix} <red>Error: No valid entity provided</red>\nbase.command.args.optional-faction=If no faction is provided, your own faction will be used\nbase.command.args.permission=Provide a permission as an argument\nbase.command.args.player=Provide a player for this argument\nbase.command.args.power-type=Provide a power type. This can be maximum or accumulated\nbase.command.args.power=Provide a power value\nbase.command.args.priority=Provide a priority. It can manage all ranks below this rank\nbase.command.args.rank-name=Provide the name of a faction rank\nbase.command.args.rank=Assign a rank from your faction\nbase.command.args.zone=Provide a zone\nbase.command.ban.banned-target={prefix} <green>You have successfully banned this player</green>\nbase.command.ban.cant-ban-yourself={prefix} <red>Error: You cannot ban yourself</red>\nbase.command.ban.description=Ban a player, making him unable to join again\nbase.command.category.admin=Admin commands\nbase.command.category.claim=Claim commands\nbase.command.category.general=General commands\nbase.command.category.invites=Invite commands\nbase.command.category.manage=Manage commands\nbase.command.category.members=Member commands\nbase.command.category.permissions=Permission Management commands\nbase.command.claim.claimed-radius={prefix} <green>You successfully claimed <yellow>{successful-claims} / {total-claims}</yellow> in a radius of <yellow>{radius}</yellow> chunks</green>\nbase.command.claim.claimed={prefix} <green>You successfully claimed this chunk</green>\nbase.command.claim.description=Claim a chunk for your faction\nbase.command.create.description=Create a new faction\nbase.command.delete.deleted={prefix} <green>You've successfully deleted your faction</green>\nbase.command.delete.description=Delete your faction\nbase.command.faction-map.description=Display a map of the claimed chunks around you\nbase.command.force.description=Force a player to certain faction-related actions\nbase.command.force.join.already-member={prefix} <red>Error: The player is already a member of a faction</red>\nbase.command.force.join.description=Force a player to join a faction\nbase.command.force.join.error={prefix} <red>Error: The following error has been encountered when force joining the player:</red>\nbase.command.force.join.player-joined={prefix} <green>You've been forced to join the faction <yellow>{faction}</yellow></green>\nbase.command.force.join.success={prefix} <green>You've successfully forced the player to join the faction</green>\nbase.command.force.unclaim.description=Force a faction to unclaim a chunk\nbase.command.force.unclaim.unclaimed={prefix} <green>You've successfully forced the faction to unclaim the chunk</green>\nbase.command.help.category-overview={prefix} <click:run_command:'/f help category:{category-id}'><gold>Ã\u0082Â»</gold> <yellow>{category-name}</yellow> <aqua>-</aqua> <b><green>[Click]</green></b></click>\nbase.command.help.command-details={prefix} <gold>Ã\u0082Â»</gold> <click:suggest_command:'{cmd}'><yellow>{usage}</yellow></click> <aqua>-</aqua> <green>{description}</green>\nbase.command.help.command-not-found=<red>Error: Command not found</red>\nbase.command.help.description=Display the help menu\nbase.command.help.header={prefix} <yellow><b><----|</b> Factions <b>|----></b></yellow>\nbase.command.icon.description=Copy the item in your hand and use it as your faction's icon\nbase.command.icon.invalid-icon={prefix} <red>Error: This item cannot be used as an icon</red>\nbase.command.icon.set-icon={prefix} <green>Your faction's icon has been updated successfully</green>\nbase.command.info.description=Display information about a faction\nbase.command.info.detail={prefix} <gold>Ã\u0082Â»</gold> <click:run_command:'{cmd}'><yellow>{key}</yellow></click> <aqua>{value}</aqua>\nbase.command.info.header={prefix} <yellow><b><----|</b> {faction} <b>|----></b></yellow>\nbase.command.invite.description=Invite a player to join your faction\nbase.command.invite.invited-player={prefix} <green>You invited <yellow>{player}</yellow>. <yellow>{player}</yellow> has <yellow>5 minutes</yellow> to accept</green>\nbase.command.invite.you-have-been-invited={prefix} <green>You've been invited to join <yellow>{faction}</yellow> by <yellow>{inviter}</yellow> as <yellow>{rank}</yellow>. Click <click:run_command:'/f invites'><green>here</green></click> to view your invites</green>\nbase.command.inviteaccept.description=Accept an invitation to join a faction\nbase.command.inviteaccept.joined={prefix} <green>You've successfully joined the faction</green>\nbase.command.invitediscard.deleted={prefix} <green>You've discarded this invite</green>\nbase.command.invitediscard.description=Discard an invitation to join a faction\nbase.command.invites.description=Show all the invites you've received that haven't expired yet\nbase.command.invites.detail={prefix} <gold>Ã\u0082Â»</gold> <yellow>{faction}</yellow> <aqua>Join as {rank}</aqua> <green>Expires in {expires}</green> <click:run_command:'/factions inviteaccept {id}'><green>[Accept]</green></click> <click:run_command:'/factions invitediscard {id}'><red>[Discard]</red></click>\nbase.command.invites.header={prefix} <yellow><b><----|</b> Invites <b>|----></b></yellow>\nbase.command.join.description=Join a faction\nbase.command.join.joined={prefix} <green>You joined the faction</green>\nbase.command.joinMode.changed={prefix} <green>You've successfully changed the join mode to <yellow>{mode}</yellow></green>\nbase.command.joinMode.description=Change the join mode of your faction\nbase.command.kick.description=Kick a player from your faction\nbase.command.kick.kicked={prefix} <green>Player has been kicked successfully</green>\nbase.command.leave.description=Leave your faction\nbase.command.leave.left={prefix} <green>You left your faction</green>\nbase.command.list.description=List all factions\nbase.command.list.faction={prefix} <gold>Ã\u0082Â»</gold> <yellow>{name}</yellow> <aqua>Power: {power}</aqua> <green>Members: {members}</green>\nbase.command.list.header={prefix} <yellow><b><----|</b> Factions <b>|----></b></yellow>\nbase.command.members.detail={prefix} <gold>Ã\u0082Â»</gold> <yellow>{name}</yellow> <aqua>{rank}</aqua> <green>Last Seen: {lastSeen}</green>\nbase.command.members.header={prefix} <yellow><b><----|</b> Members <b>|----></b></yellow>\nbase.command.power.description=Access faction power\nbase.command.power.detail={prefix} <gold>Ã\u0082Â»</gold> <yellow>{key}</yellow> <aqua>{value}</aqua>\nbase.command.power.header={prefix} <yellow><b><----|</b> Power <b>|----></b></yellow>\nbase.command.power.set.description=Set the power of a faction\nbase.command.rank.assign.assigned={prefix} <green>You have successfully assigned the player the rank</green>\nbase.command.rank.assign.description=Assign a player to a rank\nbase.command.rank.create.created={prefix} <green>You have successfully created this rank</green>\nbase.command.rank.create.description=Create a new rank for your faction\nbase.command.rank.default.description=Set the rank new members will join with\nbase.command.rank.default.set={prefix} <green>You have successfully set this rank as the new default rank for members joining</green>\nbase.command.rank.delete.deleted={prefix} <green>You have successfully deleted this rank</green>\nbase.command.rank.delete.description=Delete a rank\nbase.command.rank.delete.rank-is-default={prefix} <red>You cannot delete this rank because it's the default rank for new members</red>\nbase.command.rank.description=Access rank commands\nbase.command.rank.edit.description=Edit permissions for a specific rank via GUI\nbase.command.rank.edit.header={prefix} <yellow><b><----|</b> Permissions <b>|----></b></yellow>\nbase.command.rank.edit.permission-details={prefix} <gold>Ã\u0082Â»</gold> <click:suggest_command:'/factions rank set {rank} {permission} {value}'><yellow>{permission}</yellow></click> <aqua>{value}</aqua>\nbase.command.rank.header={prefix} <yellow><b><----|</b> Ranks <b>|----></b></yellow>\nbase.command.rank.rank-overview={prefix} <gold>Ã\u0082Â»</gold> <click:run_command:'/factions rank edit {name}'><yellow>{name}</yellow></click> <aqua>Priority: {priority}</aqua> <green>Assigned: {countAssignedUsers}</green>\nbase.command.rank.set.description=Set a permission for a rank\nbase.command.rank.set.updated={prefix} <green>Permissions have been set successfully</green>\nbase.command.reload.description=Reload the faction configs\nbase.command.rename.description=Rename your faction\nbase.command.rename.renamed={prefix} <green>You've successfully renamed your faction</green>\nbase.command.unban.description=Unban a player, making him able to join again after being banned\nbase.command.unban.unbanned-target={prefix} <red>Error: You have successfully unbanned this player</red>\nbase.command.unclaim.description=Unclaim a chunk for your faction\nbase.command.unclaim.unclaimed-radius={prefix} <green>You successfully unclaimed <yellow>{successful-claims} / {total-claims}</yellow> chunks in a radius of <yellow>{radius}</yellow> chunks</green>\nbase.command.unclaim.unclaimed={prefix} <green>You've successfully unclaimed this chunk</green>\nbase.command.zone.claim.description=Mark a claim as property of this zone\nbase.command.zone.claimed-radius={prefix} <green>You successfully claimed <yellow>{successful-claims} / {total-claims}</yellow> chunks in a radius of <yellow>{radius}</yellow> chunks with this zone</green>\nbase.command.zone.claimed={prefix} <green>You have successfully claimed this chunk with this zone</green>\nbase.command.zone.description=Access the admin zone commands\nbase.command.zone.unclaim.description=Unmark a claim from any zone associations\nbase.command.zone.unclaimed-radius={prefix} <green>You successfully unclaimed <yellow>{successful-claims} / {total-claims}</yellow> chunks in a radius of <yellow>{radius}</yellow> chunks from any associated zones</green>\nbase.command.zone.unclaimed={prefix} <green>You have successfully unclaimed this land from any associated zones</green>\nbase.commands.args.confirmation-needed={prefix} <red>Error: You need to confirm the command. Use <yellow>/f <command> confirm</yellow></red>\nbase.commands.args.permission=Provide a permission\nbase.commands.bypass.add-bypass={prefix} <green>You've successfully added the bypass for this player</green>\nbase.commands.bypass.description=Add or remove a bypass for a player. A bypass only stays until the next server restart\nbase.commands.bypass.remove-bypass={prefix} <green>You've successfully removed the bypass for this player</green>\nbase.commands.create.created-faction={prefix} <green>Congratulations! Your faction has been successfully created.</green>\nbase.commands.members.description=View your faction's members\nbase.commands.transferowner.description=Transfer the ownership to someone else from your faction\nbase.commands.transferowner.owner-transfered={prefix} <green>You've successfully transferred your ownership to another player. You've been assigned the default rank for this faction</green>\nbase.commands.transferowner.youre-the-owner-now={prefix} <green>You're the new owner of this faction</green>\nbase.exception.claim-radius.max={prefix} <red>Error: The radius must be less than or equal to <yellow>{max-radius}</yellow></red>\nbase.exception.claim-radius.positive={prefix} <red>Error: The radius must be a positive number</red>\nbase.exception.command-not-found={prefix} <red>Error: Command not found</red>\nbase.exception.zone-doesnt-exist={prefix} <red>Error: Zone does not exist</red>\nbase.exceptions.already-banned={prefix} <red>Error: You cannot ban this player as they are already banned</red>\nbase.exceptions.arg-doesnt-match={prefix} <red>Error: The provided argument contains disallowed characters.</red>\nbase.exceptions.arg-is-no-player={prefix} <red>Error: The provided argument is not a player</red>\nbase.exceptions.cant-be-in-faction={prefix} <red>Error: You cannot be in a faction while using this command</red>\nbase.exceptions.cant-claim-this-chunk={prefix} <red>Error: You cannot claim the chunk at <yellow>{x}, {z}</yellow></red>\nbase.exceptions.cant-invite-yourself={prefix} <red>Error: You cannot invite yourself</red>\nbase.exceptions.cant-manage-this-rank={prefix} <red>Error: You cannot manage this rank</red>\nbase.exceptions.command-limit-reached={prefix} <red>Error: You've reached the command limit of <yellow>{limit}</yellow> usages</red>\nbase.exceptions.confirmation-needed={prefix} <red>Error: Confirmation is required to execute this command. Use <yellow>/f <command> confirm</yellow></red>\nbase.exceptions.cooldown={prefix} <red>Error: You need to wait <yellow>{left}</yellow> before using this command again</red>\nbase.exceptions.expected-boolean={prefix} <red>A boolean value was expected</red>\nbase.exceptions.faction-doesnt-exist={prefix} <red>Error: The specified faction does not exist.</red>\nbase.exceptions.faction-doesnt-have-claim={prefix} <red>This claim is not owned by your faction, and you cannot therefore remove it</red>\nbase.exceptions.faction-not-found={prefix} <red>Error: Faction not found</red>\nbase.exceptions.faction-shouldnt-exist={prefix} <red>Error: The faction already exists.</red>\nbase.exceptions.icon.invalid-icon={prefix} <red>Error: The icon's item data would exceed the maximum allowed icon data length and therefore cannot be used</red>\nbase.exceptions.invalid-argument-length={prefix} <red>Error: The provided arguments do not fit the requirements.</red>\nbase.exceptions.max-arg-length-exceeded={prefix} <red>Error: You've exceeded the maximum number of characters allowed in this argument. You are at <gold>{provided}</gold> characters</red>\nbase.exceptions.missing-permissions={prefix} <red>You do not have sufficient permissions. If needed, contact your faction owner for permission</red>\nbase.exceptions.need-faction={prefix} <red>Error: To execute this command, you must be a part of a faction.</red>\nbase.exceptions.needs-to-be-faction-owner={prefix} <red>Error: You need to be the owner of this faction to run this command</red>\nbase.exceptions.not-enough-permissions={prefix} <red>Error: You do not have the required permission</red>\nbase.exceptions.not-enough-power-for-claim={prefix} <red>Your faction doesn't have enough power to claim the chunk at <yellow>{x}, {z}</yellow></red>\nbase.exceptions.permission-not-valid={prefix} <red>Permission is not valid</red>\nbase.exceptions.player-already-owner={prefix} <red>Error: Player already owner</red>\nbase.exceptions.player-cant-leave-is-owner={prefix} <red>This player can't leave this faction, because of their owner rank</red>\nbase.exceptions.player-not-in-faction={prefix} <red>Error: This specified player isn't in your faction</red>\nbase.exceptions.rank-name-exceeds-limit={prefix} <red>Error: Rank name exceeds limit</red>\nbase.exceptions.rank-name-not-matching={prefix} <red>Error: Rank name does not match the required pattern</red>\nbase.exceptions.rank-not-found={prefix} <red>Error: Rank not found</red>\nbase.exceptions.sender-must-be-player={prefix} <red>Error: The sender must be a player</red>\nbase.exceptions.you-are-banned={prefix} <red>Error: You cannot join this faction because you are banned from it</red>\nbase.faction.chunk-claimed={prefix} <green>Your faction has just claimed a chunk at <yellow>{x}, {z}</yellow> in <yellow>{world}</yellow></green>\nbase.faction.chunk-unclaimed={prefix} <green>Your faction has just unclaimed a chunk at <yellow>{x}, {z}</yellow> in <yellow>{world}</yellow></green>\nbase.faction.join-type-changed={prefix} <green>Your faction's join mode has been updated to <yellow>{mode}</yellow></green>\nbase.faction.player-invited={prefix} <green><yellow>{invited}</yellow> has been invited to join your faction by <yellow>{inviter}</yellow>. <yellow>{invited}</yellow> has <yellow>5 minutes</yellow> to accept</green>\nbase.faction.player-joined={prefix} <green><yellow>{player}</yellow> has joined this faction with the rank <yellow>{rank}</yellow></green>\nbase.faction.player-kicked={prefix} <green>Player has been kicked successfully</green>\nbase.faction.player-left={prefix} <green><yellow>{player}</yellow> left your faction</green>\nbase.faction.renamed={prefix} <green>Your faction has been renamed from <yellow>{old}</yellow> to <yellow>{new}</yellow></green>\nbase.faction.unbanned={prefix} <green>The ban for <yellow>{target}</yellow> has been lifted</green>\nbase.messages.command-usage-limit={prefix} <green>You can use this command only <yellow>{left}</yellow> times again</green>\nbase.player-teleport.cancel-message={prefix} <red>You moved while teleporting. Aborted the teleportation</red>\nbase.player-teleport.cancel-title=<red>Teleportation cancelled</red>\nbase.prefix=<hover:show_text:'<dark_gray>Author:</dark_gray> <aqua>Tobero</aqua>'><dark_gray>[</dark_gray><yellow>IF</yellow><dark_gray>]</dark_gray></hover>\nbase.zone.protected={prefix} <red>This chunk is protected by a zone</red>\nbase.zone.safezone=<aqua>Safezone</aqua>\nbase.zone.unmanaged=Unmanaged\nbase.zone.warzone=<dark_red>War zone</dark_red>\nbase.zone.wilderness=<dark_green>Wilderness</dark_green>\nchat.commands.arg.chat-message=The chat message that should get sent into the faction\nchat.commands.chat.description=Toggle the chat your messages will be sent to. If you provide a message, it will send the message into the faction chat\nchat.commands.chat.toggled-faction={prefix} <green>You will now write in the <red>Faction</red> chat</green>\nchat.commands.chat.toggled-global={prefix} <green>You will now write in the <yellow>Global</yellow> chat</green>\nchat.faction.template=<dark_gray>[</dark_gray><red>{faction}</red><dark_gray>]</dark_gray> <white>{player}</white><white>:</white> <white>{message}</white>\nhome.commands.sethome.description=Set your faction's home\nhome.commands.sethome.failed={prefix} <red>Error: You can't set your faction's home here</red>\nhome.commands.sethome.success={prefix} <green>You've successfully set your faction's home</green>\nhome.commands.teleport-home.description=Teleport to your faction's home\nhome.commands.teleport-home.failed={prefix} <red>Error: You can't teleport to your faction's home</red>\nhome.messages.invalid-world={prefix} <red>Error: You can't set the home here, as it's in a invalid world</red>\nhome.messages.not-in-claim={prefix} <red>Error: You can't set the home here, as this isn't in your faction's claim</red>\nhome.messages.teleporting-subtitle=<yellow>Don't move! Teleporting in {time} seconds</yellow>\nhome.messages.teleporting-title=<yellow>Teleporting to Faction Home</yellow>\npower.command.category.power=Power commands\npower.exceptions.not-enough-power={prefix} <red>Your faction doesn't have enough power to afford this action</red>\npower.faction.accumulated-power-changed.chunk-claimed={prefix} <green>Your faction just <red>lost</red> some <aqua>power</aqua> due to <yellow>a chunk getting claimed</yellow>. The current level is at <aqua>{new} / {max}</aqua></green>\npower.faction.accumulated-power-changed.chunk-keep-cost={prefix} <green>Your faction has experienced a <red>loss</red> in <aqua>power</aqua> attributed to the <yellow>maintenance cost of your claims</yellow>. The current level is at <aqua>{new} / {max}</aqua></green>\npower.faction.accumulated-power-changed.max-changed={prefix} <green>Your faction just <red>lost</red> some <aqua>power</aqua> due to <yellow>the max getting lowered</yellow>. The current level is at <aqua>{new}</aqua></green>\npower.faction.accumulated-power-changed.other={prefix} <green>Your faction just changed <aqua>power</aqua> due to <yellow>an external event</yellow>. The current level is at <aqua>{new} / {max}</aqua></green>\npower.faction.accumulated-power-changed.passive-energy-accumulation={prefix} <green>Your faction just gained some <aqua>power</aqua> due to <yellow>passive power accumulation</yellow>. The current level is at <aqua>{new} / {max}</aqua></green>\npower.faction.accumulated-power-changed.player-death={prefix} <green>Your faction just <red>lost</red> power, caused by a <yellow>member's death</yellow>. New power: <aqua>{new} / {max}</aqua></green>\npower.faction.max-power-changed={prefix} <green>Your faction's max power just updated. New max power: <aqua>{new}</aqua></green>\npower.siege.defended={prefix} <blue>The chunk at <yellow>{x}, {z}</yellow> in <yellow>{world}</yellow> got successfully defended. The siege was a failure!</blue>\npower.siege.started={prefix} <blue>The chunk at <yellow>{x}, {z}</yellow> in <yellow>{world}</yellow> got involved in a siege. Get involved in the battle by navigating to it!</blue>\npower.siege.unclaimed={prefix} <blue>The chunk at <yellow>{x}, {z}</yellow> in <yellow>{world}</yellow> got unclaimed. The siege was a victory!</blue>\nwilderness.command.wilderness.description=Teleport to a random location in the wilderness\nwilderness.command.wilderness.failed-to-find={prefix} <red>Error: Failed find a position within the wilderness</red>\nwilderness.command.wilderness.teleported={prefix} <green>You've been teleported to a random location in the wilderness</green>\nwilderness.messages.teleporting-subtitle=<yellow>Don't move! Teleporting in {time} seconds</yellow>\nwilderness.messages.teleporting-title=<dark_green>Teleporting to Wilderness</dark_green>\npower.siege.start={prefix} <green>This claim is <red>raidable</red>. Type <yellow>/f siege</yellow> to start overclaiming this chunk</green>\npower.siege.already-started={prefix} <red>Error: The siege has already started</red>\npower.siege.not-in-claim={prefix} <red>Error: You're not in a claim</red>\npower.siege.own-claim={prefix} <red>Error: You can't siege your own claim</red>\npower.siege.entered={prefix} <green>You've entered the siege</green>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>ISO-8859-1
-===================================================================
-diff --git a/improved-factions/src/main/resources/languages/messages_en.properties b/improved-factions/src/main/resources/languages/messages_en.properties
---- a/improved-factions/src/main/resources/languages/messages_en.properties	(revision 334f0f846e51cbb04c50096b8e8bd047338df90f)
-+++ b/improved-factions/src/main/resources/languages/messages_en.properties	(date 1725812101977)
-@@ -201,6 +201,9 @@
- home.messages.teleporting-subtitle=<yellow>Don't move! Teleporting in {time} seconds</yellow>
- home.messages.teleporting-title=<yellow>Teleporting to Faction Home</yellow>
- power.command.category.power=Power commands
-+chat.command.spy.description=Toggle the spy mode for the faction chat
-+chat.command.spy.disabled={prefix} <green>You've disabled the spy mode for the faction chat</green>
-+chat.command.spy.enabled={prefix} <green>You've enabled the spy mode for the faction chat</green>
- power.exceptions.not-enough-power={prefix} <red>Your faction doesn't have enough power to afford this action</red>
- power.faction.accumulated-power-changed.chunk-claimed={prefix} <green>Your faction just <red>lost</red> some <aqua>power</aqua> due to <yellow>a chunk getting claimed</yellow>. The current level is at <aqua>{new} / {max}</aqua></green>
- power.faction.accumulated-power-changed.chunk-keep-cost={prefix} <green>Your faction has experienced a <red>loss</red> in <aqua>power</aqua> attributed to the <yellow>maintenance cost of your claims</yellow>. The current level is at <aqua>{new} / {max}</aqua></green>
-Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatSpyCommand.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatSpyCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatSpyCommand.kt
-new file mode 100755
---- /dev/null	(date 1725812101998)
-+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatSpyCommand.kt	(date 1725812101998)
-@@ -0,0 +1,37 @@
-+package io.github.toberocat.improvedfactions.modules.chat.commands
-+
-+import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
-+import io.github.toberocat.improvedfactions.modules.chat.handles.ChatModuleHandle
-+import io.github.toberocat.improvedfactions.translation.sendLocalized
-+import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-+import io.github.toberocat.improvedfactions.utils.command.CommandMeta
-+import io.github.toberocat.toberocore.command.PlayerSubCommand
-+import io.github.toberocat.toberocore.command.arguments.Argument
-+import io.github.toberocat.toberocore.command.options.Options
-+import org.bukkit.entity.Player
-+import java.util.*
-+
-+@CommandMeta(
-+    description = "chat.command.spy.description",
-+    module = "chat",
-+    category = CommandCategory.GENERAL_CATEGORY
-+)
-+class ChatSpyCommand(private val plugin: ImprovedFactionsPlugin,
-+                     private val chatHandler: ChatModuleHandle) : PlayerSubCommand("spy") {
-+
-+    override fun options(): Options = Options.getFromConfig(plugin, label) {options, _ ->
-+    }
-+
-+    override fun arguments(): Array<Argument<*>> = arrayOf()
-+
-+    override fun handle(player: Player, args: Array<String>): Boolean {
-+        if (chatHandler.isSpying(player.uniqueId)) {
-+            chatHandler.unspy(player.uniqueId)
-+            player.sendLocalized("chat.command.spy.disabled")
-+        } else {
-+            chatHandler.spy(player.uniqueId)
-+            player.sendLocalized("chat.command.spy.enabled")
-+        }
-+        return true
-+    }
-+}
-\ No newline at end of file
-Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/ChatModule.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package io.github.toberocat.improvedfactions.modules.chat\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.modules.base.BaseModule\nimport io.github.toberocat.improvedfactions.modules.chat.commands.ChatCommand\nimport io.github.toberocat.improvedfactions.modules.chat.handles.ChatModuleHandle\nimport io.github.toberocat.improvedfactions.modules.chat.handles.DummyChatModuleHandle\nimport io.github.toberocat.improvedfactions.modules.chat.impl.ChatModuleHandleImpl\nimport io.github.toberocat.improvedfactions.modules.chat.listener.ChatListener\nimport io.github.toberocat.toberocore.command.CommandExecutor\nimport org.bukkit.entity.Player\n\nobject ChatModule : BaseModule {\n    const val MODULE_NAME = \"chat\"\n    override val moduleName = MODULE_NAME\n\n    var chatModuleHandle: ChatModuleHandle = DummyChatModuleHandle()\n\n    override fun addCommands(plugin: ImprovedFactionsPlugin, executor: CommandExecutor) {\n        executor.addChild(ChatCommand(chatModuleHandle, plugin))\n    }\n\n    override fun onEnable(plugin: ImprovedFactionsPlugin) {\n        chatModuleHandle = ChatModuleHandleImpl()\n        plugin.registerListeners(\n            ChatListener(chatModuleHandle)\n        )\n    }\n\n    fun Player.resetChatMode() = chatModuleHandle.setChatMode(uniqueId, ChatMode.GLOBAL)\n\n    fun Player.sendFactionChat(message: String) = ChatMode.FACTION.sendIntoChat(this, message)\n\n    fun Player.toggleChatMode(): ChatMode {\n        val current = chatModuleHandle.getChatMode(uniqueId).ordinal\n        val values = enumValues<ChatMode>()\n        val nextChatMode = values[(current + 1) % values.size]\n        chatModuleHandle.setChatMode(uniqueId, nextChatMode)\n        return nextChatMode\n    }\n\n    fun chatPair() = MODULE_NAME to this\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/ChatModule.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/ChatModule.kt
---- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/ChatModule.kt	(revision 334f0f846e51cbb04c50096b8e8bd047338df90f)
-+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/ChatModule.kt	(date 1725812101988)
-@@ -3,6 +3,7 @@
- import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
- import io.github.toberocat.improvedfactions.modules.base.BaseModule
- import io.github.toberocat.improvedfactions.modules.chat.commands.ChatCommand
-+import io.github.toberocat.improvedfactions.modules.chat.commands.ChatSpyCommand
- import io.github.toberocat.improvedfactions.modules.chat.handles.ChatModuleHandle
- import io.github.toberocat.improvedfactions.modules.chat.handles.DummyChatModuleHandle
- import io.github.toberocat.improvedfactions.modules.chat.impl.ChatModuleHandleImpl
-@@ -18,6 +19,7 @@
- 
-     override fun addCommands(plugin: ImprovedFactionsPlugin, executor: CommandExecutor) {
-         executor.addChild(ChatCommand(chatModuleHandle, plugin))
-+        executor.addChild(ChatSpyCommand(plugin, chatModuleHandle))
-     }
- 
-     override fun onEnable(plugin: ImprovedFactionsPlugin) {
Index: .idea/shelf/Uncommitted_changes_before_rebase__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_rebase__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_rebase__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_rebase__Changes_.xml	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ /dev/null	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_rebase_[Changes]" date="1725812102197" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before rebase [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_08_09_24,_17_14_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_08_09_24,_17_14_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_08_09_24,_17_14_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_08_09_24,_17_14_[Changes]/shelved.patch	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ /dev/null	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
@@ -1,132 +0,0 @@
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"ad9c7d4c-34f8-4c4a-9806-e72e98556779\" name=\"Changes\" comment=\"Migrated to gradle instead of maven\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/vcs.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ExternalProjectsData\">\n    <projectState path=\"$PROJECT_DIR$/improved-factions\">\n      <ProjectState />\n    </projectState>\n  </component>\n  <component name=\"ExternalProjectsManager\">\n    <system id=\"GRADLE\">\n      <state>\n        <task path=\"$PROJECT_DIR$/improved-factions\">\n          <activation />\n        </task>\n        <projects_view>\n          <tree_state>\n            <expand>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"ImprovedFactions\" type=\"f1a62948:ProjectNode\" />\n              </path>\n            </expand>\n            <select />\n          </tree_state>\n        </projects_view>\n      </state>\n    </system>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"ROOT_SYNC\" value=\"DONT_SYNC\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\"><![CDATA[{\n  \"lastFilter\": {\n    \"state\": \"OPEN\",\n    \"assignee\": \"ToberoCat\"\n  }\n}]]></component>\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\n  \"selectedUrlAndAccountId\": {\n    \"url\": \"https://github.com/ToberoCat/ImprovedFactions\",\n    \"accountId\": \"4d680c3f-ea1a-4edc-a6b9-348f20b21afb\"\n  }\n}]]></component>\n  <component name=\"ProjectColorInfo\"><![CDATA[{\n  \"customColor\": \"\",\n  \"associatedIndex\": 6\n}]]></component>\n  <component name=\"ProjectId\" id=\"2ln8LXTJEKgmpQZ8v9bYLdFx6df\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"Docker.docker-compose.yml: Compose Deployment.executor\": \"Run\",\n    \"Gradle.Build Plugin.executor\": \"Run\",\n    \"Gradle.improved-factions [build].executor\": \"Run\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"git-widget-placeholder\": \"maven-to-gradle\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"last_opened_file_path\": \"/media/tobias/Data/Development/Minecraft/Spigot/Projects\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"settings.editor.selected.configurable\": \"project.propVCSSupport.DirectoryMappings\",\n    \"settings.editor.splitter.proportion\": \"0.25428858\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RunManager\" selected=\"Gradle.Test Plugin\">\n    <configuration default=\"true\" type=\"docker-deploy\" factoryName=\"docker-compose.yml\" temporary=\"true\">\n      <deployment type=\"docker-compose.yml\" />\n      <method v=\"2\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"Docker.Start Server\" />\n      <item itemvalue=\"Gradle.Build Plugin\" />\n      <item itemvalue=\"Gradle.Test Plugin\" />\n      <item itemvalue=\"Remote JVM Debug.Debug Server\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Gradle.Test Plugin\" />\n        <item itemvalue=\"Gradle.Build Plugin\" />\n        <item itemvalue=\"Docker.Start Server\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-jdk-9823dce3aa75-b114ca120d71-intellij.indexing.shared.core-IU-242.21829.142\" />\n        <option value=\"bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-IU-242.21829.142\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"ad9c7d4c-34f8-4c4a-9806-e72e98556779\" name=\"Changes\" comment=\"\" />\n      <created>1725804426022</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1725804426022</updated>\n      <workItem from=\"1725804428962\" duration=\"1923000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Migrated to gradle instead of maven\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1725804599277</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1725804599277</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <ignored-roots>\n      <path value=\"$PROJECT_DIR$/improved-factions\" />\n    </ignored-roots>\n    <MESSAGE value=\"Migrated to gradle instead of maven\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Migrated to gradle instead of maven\" />\n  </component>\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 07d19e7d3fb14d40d1eb638c30ac01cca3bcebb4)
-+++ b/.idea/workspace.xml	(date 1725807588733)
-@@ -4,10 +4,12 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="ad9c7d4c-34f8-4c4a-9806-e72e98556779" name="Changes" comment="Migrated to gradle instead of maven">
--      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-+    <list default="true" id="ad9c7d4c-34f8-4c4a-9806-e72e98556779" name="Changes" comment="Added Test Stage">
-+      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/listeners/claim/ClaimCreeperExplosionListener.kt" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/listeners/claim/ClaimMobDestructionListener.kt" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/listeners/claim/ClaimMobSpawnListener.kt" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/listeners/claim/ProtectionListener.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/listeners/claim/ProtectionListener.kt" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -32,12 +34,30 @@
-                 <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
-                 <item name="ImprovedFactions" type="f1a62948:ProjectNode" />
-               </path>
-+              <path>
-+                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
-+                <item name="ImprovedFactions" type="f1a62948:ProjectNode" />
-+                <item name="Tasks" type="e4a08cd1:TasksNode" />
-+              </path>
-+              <path>
-+                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
-+                <item name="ImprovedFactions" type="f1a62948:ProjectNode" />
-+                <item name="Tasks" type="e4a08cd1:TasksNode" />
-+                <item name="verification" type="c8890929:TasksNode$1" />
-+              </path>
-             </expand>
-             <select />
-           </tree_state>
-         </projects_view>
-       </state>
-     </system>
-+  </component>
-+  <component name="FileTemplateManagerImpl">
-+    <option name="RECENT_TEMPLATES">
-+      <list>
-+        <option value="Kotlin Class" />
-+      </list>
-+    </option>
-   </component>
-   <component name="Git.Settings">
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-@@ -53,6 +73,16 @@
-   "selectedUrlAndAccountId": {
-     "url": "https://github.com/ToberoCat/ImprovedFactions",
-     "accountId": "4d680c3f-ea1a-4edc-a6b9-348f20b21afb"
-+  },
-+  "recentNewPullRequestHead": {
-+    "server": {
-+      "useHttp": false,
-+      "host": "github.com",
-+      "port": null,
-+      "suffix": null
-+    },
-+    "owner": "ToberoCat",
-+    "repository": "ImprovedFactions"
-   }
- }]]></component>
-   <component name="ProjectColorInfo"><![CDATA[{
-@@ -69,7 +99,9 @@
-   "keyToString": {
-     "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
-     "Gradle.Build Plugin.executor": "Run",
-+    "Gradle.Test Plugin.executor": "Run",
-     "Gradle.improved-factions [build].executor": "Run",
-+    "Gradle.improved-factions [test].executor": "Run",
-     "RunOnceActivity.ShowReadmeOnStart": "true",
-     "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-     "git-widget-placeholder": "maven-to-gradle",
-@@ -120,7 +152,7 @@
-       <option name="number" value="Default" />
-       <option name="presentableId" value="Default" />
-       <updated>1725804426022</updated>
--      <workItem from="1725804428962" duration="1923000" />
-+      <workItem from="1725804428962" duration="2666000" />
-     </task>
-     <task id="LOCAL-00001" summary="Migrated to gradle instead of maven">
-       <option name="closed" value="true" />
-@@ -130,7 +162,23 @@
-       <option name="project" value="LOCAL" />
-       <updated>1725804599277</updated>
-     </task>
--    <option name="localTasksCounter" value="2" />
-+    <task id="LOCAL-00002" summary="Migrated to gradle">
-+      <option name="closed" value="true" />
-+      <created>1725806598434</created>
-+      <option name="number" value="00002" />
-+      <option name="presentableId" value="LOCAL-00002" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1725806598434</updated>
-+    </task>
-+    <task id="LOCAL-00003" summary="Added Test Stage">
-+      <option name="closed" value="true" />
-+      <created>1725806636119</created>
-+      <option name="number" value="00003" />
-+      <option name="presentableId" value="LOCAL-00003" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1725806636120</updated>
-+    </task>
-+    <option name="localTasksCounter" value="4" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-@@ -141,6 +189,11 @@
-       <path value="$PROJECT_DIR$/improved-factions" />
-     </ignored-roots>
-     <MESSAGE value="Migrated to gradle instead of maven" />
--    <option name="LAST_COMMIT_MESSAGE" value="Migrated to gradle instead of maven" />
-+    <MESSAGE value="Migrated to gradle" />
-+    <MESSAGE value="Added Test Stage" />
-+    <option name="LAST_COMMIT_MESSAGE" value="Added Test Stage" />
-+  </component>
-+  <component name="com.intellij.coverage.CoverageDataManagerImpl">
-+    <SUITE FILE_PATH="coverage/ImprovedFactions$Test_Plugin.ic" NAME="Test Plugin Coverage Results" MODIFIED="1725806623300" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true" />
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_08_09_24__16_59__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_09_24__16_59__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_09_24__16_59__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_09_24__16_59__Changes_.xml	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ /dev/null	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_08_09_24,_16_59_[Changes]" date="1725807590731" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_09_24,_16_59_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 08.09.24, 16:59 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ /dev/null	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_rebase_[Changes]1" date="1725812127374" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before rebase [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_08_09_24__17_14__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_08_09_24__17_14__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_08_09_24__17_14__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_08_09_24__17_14__Changes_.xml	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ /dev/null	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_08_09_24,_17_14_[Changes]" date="1725808469752" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_08_09_24,_17_14_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 08.09.24, 17:14 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_08_09_24,_16_59_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_09_24,_16_59_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_09_24,_16_59_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_09_24,_16_59_[Changes]/shelved.patch	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ /dev/null	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
@@ -1,104 +0,0 @@
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"ad9c7d4c-34f8-4c4a-9806-e72e98556779\" name=\"Changes\" comment=\"Added Test Stage\">\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/listeners/claim/ClaimCreeperExplosionListener.kt\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/listeners/claim/ClaimMobDestructionListener.kt\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/listeners/claim/ClaimMobSpawnListener.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/listeners/claim/ProtectionListener.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/listeners/claim/ProtectionListener.kt\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ExternalProjectsData\">\n    <projectState path=\"$PROJECT_DIR$/improved-factions\">\n      <ProjectState />\n    </projectState>\n  </component>\n  <component name=\"ExternalProjectsManager\">\n    <system id=\"GRADLE\">\n      <state>\n        <task path=\"$PROJECT_DIR$/improved-factions\">\n          <activation />\n        </task>\n        <projects_view>\n          <tree_state>\n            <expand>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"ImprovedFactions\" type=\"f1a62948:ProjectNode\" />\n              </path>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"ImprovedFactions\" type=\"f1a62948:ProjectNode\" />\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\n              </path>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"ImprovedFactions\" type=\"f1a62948:ProjectNode\" />\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\n                <item name=\"verification\" type=\"c8890929:TasksNode$1\" />\n              </path>\n            </expand>\n            <select />\n          </tree_state>\n        </projects_view>\n      </state>\n    </system>\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Kotlin Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"ROOT_SYNC\" value=\"DONT_SYNC\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\"><![CDATA[{\n  \"lastFilter\": {\n    \"state\": \"OPEN\",\n    \"assignee\": \"ToberoCat\"\n  }\n}]]></component>\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\n  \"selectedUrlAndAccountId\": {\n    \"url\": \"https://github.com/ToberoCat/ImprovedFactions\",\n    \"accountId\": \"4d680c3f-ea1a-4edc-a6b9-348f20b21afb\"\n  },\n  \"recentNewPullRequestHead\": {\n    \"server\": {\n      \"useHttp\": false,\n      \"host\": \"github.com\",\n      \"port\": null,\n      \"suffix\": null\n    },\n    \"owner\": \"ToberoCat\",\n    \"repository\": \"ImprovedFactions\"\n  }\n}]]></component>\n  <component name=\"ProjectColorInfo\"><![CDATA[{\n  \"customColor\": \"\",\n  \"associatedIndex\": 6\n}]]></component>\n  <component name=\"ProjectId\" id=\"2ln8LXTJEKgmpQZ8v9bYLdFx6df\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"Docker.docker-compose.yml: Compose Deployment.executor\": \"Run\",\n    \"Gradle.Build Plugin.executor\": \"Run\",\n    \"Gradle.Test Plugin.executor\": \"Run\",\n    \"Gradle.improved-factions [build].executor\": \"Run\",\n    \"Gradle.improved-factions [test].executor\": \"Run\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"git-widget-placeholder\": \"maven-to-gradle\",\n    \"kotlin-language-version-configured\": \"true\",\n    \"last_opened_file_path\": \"/media/tobias/Data/Development/Minecraft/Spigot/Projects\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"settings.editor.selected.configurable\": \"project.propVCSSupport.DirectoryMappings\",\n    \"settings.editor.splitter.proportion\": \"0.25428858\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RunManager\" selected=\"Gradle.Test Plugin\">\n    <configuration default=\"true\" type=\"docker-deploy\" factoryName=\"docker-compose.yml\" temporary=\"true\">\n      <deployment type=\"docker-compose.yml\" />\n      <method v=\"2\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"Docker.Start Server\" />\n      <item itemvalue=\"Gradle.Build Plugin\" />\n      <item itemvalue=\"Gradle.Test Plugin\" />\n      <item itemvalue=\"Remote JVM Debug.Debug Server\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Gradle.Test Plugin\" />\n        <item itemvalue=\"Gradle.Build Plugin\" />\n        <item itemvalue=\"Docker.Start Server\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-jdk-9823dce3aa75-b114ca120d71-intellij.indexing.shared.core-IU-242.21829.142\" />\n        <option value=\"bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-IU-242.21829.142\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"ad9c7d4c-34f8-4c4a-9806-e72e98556779\" name=\"Changes\" comment=\"\" />\n      <created>1725804426022</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1725804426022</updated>\n      <workItem from=\"1725804428962\" duration=\"2666000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Migrated to gradle instead of maven\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1725804599277</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1725804599277</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Migrated to gradle\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1725806598434</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1725806598434</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Added Test Stage\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1725806636119</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1725806636120</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"4\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <ignored-roots>\n      <path value=\"$PROJECT_DIR$/improved-factions\" />\n    </ignored-roots>\n    <MESSAGE value=\"Migrated to gradle instead of maven\" />\n    <MESSAGE value=\"Migrated to gradle\" />\n    <MESSAGE value=\"Added Test Stage\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Added Test Stage\" />\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/ImprovedFactions$Test_Plugin.ic\" NAME=\"Test Plugin Coverage Results\" MODIFIED=\"1725806623300\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\" />\n  </component>\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 6d1b3165a0d148751fa6943446b2a1f2f94d1559)
-+++ b/.idea/workspace.xml	(date 1725807577821)
-@@ -4,12 +4,8 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="ad9c7d4c-34f8-4c4a-9806-e72e98556779" name="Changes" comment="Added Test Stage">
--      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/listeners/claim/ClaimCreeperExplosionListener.kt" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/listeners/claim/ClaimMobDestructionListener.kt" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/listeners/claim/ClaimMobSpawnListener.kt" afterDir="false" />
-+    <list default="true" id="ad9c7d4c-34f8-4c4a-9806-e72e98556779" name="Changes" comment="Added creeper explosion protection, mob destruction protection, mob spawn protection">
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/listeners/claim/ProtectionListener.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/listeners/claim/ProtectionListener.kt" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -60,6 +56,11 @@
-     </option>
-   </component>
-   <component name="Git.Settings">
-+    <option name="RECENT_BRANCH_BY_REPOSITORY">
-+      <map>
-+        <entry key="$PROJECT_DIR$" value="maven-to-gradle" />
-+      </map>
-+    </option>
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-     <option name="ROOT_SYNC" value="DONT_SYNC" />
-   </component>
-@@ -69,6 +70,13 @@
-     "assignee": "ToberoCat"
-   }
- }]]></component>
-+  <component name="GithubProjectSettings">
-+    <option name="branchProtectionPatterns">
-+      <list>
-+        <option value="main" />
-+      </list>
-+    </option>
-+  </component>
-   <component name="GithubPullRequestsUISettings"><![CDATA[{
-   "selectedUrlAndAccountId": {
-     "url": "https://github.com/ToberoCat/ImprovedFactions",
-@@ -104,7 +112,7 @@
-     "Gradle.improved-factions [test].executor": "Run",
-     "RunOnceActivity.ShowReadmeOnStart": "true",
-     "SHARE_PROJECT_CONFIGURATION_FILES": "true",
--    "git-widget-placeholder": "maven-to-gradle",
-+    "git-widget-placeholder": "more-claim-listeners",
-     "kotlin-language-version-configured": "true",
-     "last_opened_file_path": "/media/tobias/Data/Development/Minecraft/Spigot/Projects",
-     "node.js.detected.package.eslint": "true",
-@@ -117,7 +125,7 @@
-     "vue.rearranger.settings.migration": "true"
-   }
- }]]></component>
--  <component name="RunManager" selected="Gradle.Test Plugin">
-+  <component name="RunManager" selected="Gradle.Build Plugin">
-     <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
-       <deployment type="docker-compose.yml" />
-       <method v="2" />
-@@ -152,7 +160,7 @@
-       <option name="number" value="Default" />
-       <option name="presentableId" value="Default" />
-       <updated>1725804426022</updated>
--      <workItem from="1725804428962" duration="2666000" />
-+      <workItem from="1725804428962" duration="3060000" />
-     </task>
-     <task id="LOCAL-00001" summary="Migrated to gradle instead of maven">
-       <option name="closed" value="true" />
-@@ -178,7 +186,15 @@
-       <option name="project" value="LOCAL" />
-       <updated>1725806636120</updated>
-     </task>
--    <option name="localTasksCounter" value="4" />
-+    <task id="LOCAL-00004" summary="Added creeper explosion protection, mob destruction protection, mob spawn protection">
-+      <option name="closed" value="true" />
-+      <created>1725807390424</created>
-+      <option name="number" value="00004" />
-+      <option name="presentableId" value="LOCAL-00004" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1725807390424</updated>
-+    </task>
-+    <option name="localTasksCounter" value="5" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-@@ -191,7 +207,8 @@
-     <MESSAGE value="Migrated to gradle instead of maven" />
-     <MESSAGE value="Migrated to gradle" />
-     <MESSAGE value="Added Test Stage" />
--    <option name="LAST_COMMIT_MESSAGE" value="Added Test Stage" />
-+    <MESSAGE value="Added creeper explosion protection, mob destruction protection, mob spawn protection" />
-+    <option name="LAST_COMMIT_MESSAGE" value="Added creeper explosion protection, mob destruction protection, mob spawn protection" />
-   </component>
-   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-     <SUITE FILE_PATH="coverage/ImprovedFactions$Test_Plugin.ic" NAME="Test Plugin Coverage Results" MODIFIED="1725806623300" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true" />
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/arguments/ArgumentParser.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/arguments/ArgumentParser.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/arguments/ArgumentParser.kt
new file mode 100644
--- /dev/null	(date 1732737039343)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/arguments/ArgumentParser.kt	(date 1732737039343)
@@ -0,0 +1,7 @@
+package io.github.toberocat.improvedfactions.commands.arguments
+
+import kotlin.jvm.Throws
+
+interface ArgumentParser {
+    fun parse(arg: String): Any
+}
\ No newline at end of file
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/FactionCommandExecutor.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/FactionCommandExecutor.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/executor/FactionCommandExecutor.kt
rename from improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/FactionCommandExecutor.kt
rename to improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/executor/FactionCommandExecutor.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/FactionCommandExecutor.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/executor/FactionCommandExecutor.kt	(date 1732730693702)
@@ -1,4 +1,4 @@
-package io.github.toberocat.improvedfactions.commands
+package io.github.toberocat.improvedfactions.commands.executor
 
 import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
 import io.github.toberocat.improvedfactions.commands.admin.ByPassCommand
@@ -8,6 +8,10 @@
 import io.github.toberocat.improvedfactions.commands.claim.ClaimCommand
 import io.github.toberocat.improvedfactions.commands.claim.FactionMap
 import io.github.toberocat.improvedfactions.commands.claim.UnclaimCommand
+import io.github.toberocat.improvedfactions.commands.general.GenerateWikiSourcesCommand
+import io.github.toberocat.improvedfactions.commands.general.HelpCommand
+import io.github.toberocat.improvedfactions.commands.general.InfoCommand
+import io.github.toberocat.improvedfactions.commands.general.ListFactionsCommand
 import io.github.toberocat.improvedfactions.commands.invite.InviteAcceptCommand
 import io.github.toberocat.improvedfactions.commands.invite.InviteCommand
 import io.github.toberocat.improvedfactions.commands.invite.InviteDiscardCommand
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/wilderness/commands/WildernessCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.wilderness.commands\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.modules.wilderness.WildernessModule\nimport io.github.toberocat.improvedfactions.modules.wilderness.config.WildernessModuleConfig\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.utils.PlayerTeleporter\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.limit.PlayerUsageLimits\nimport io.github.toberocat.improvedfactions.utils.options.limit.UsageLimitOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.exceptions.CommandException\nimport io.github.toberocat.toberocore.command.options.CooldownOption\nimport io.github.toberocat.toberocore.command.options.CooldownTabOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport io.github.toberocat.toberocore.util.CooldownManager\nimport org.bukkit.Location\nimport org.bukkit.entity.Player\nimport org.bukkit.potion.PotionEffect\nimport org.bukkit.potion.PotionEffectType\n\n@CommandMeta(\n    category = CommandCategory.GENERAL_CATEGORY,\n    description = \"wilderness.command.wilderness.description\",\n    module = WildernessModule.MODULE_NAME\n\n)\nclass WildernessCommand(\n    private val plugin: ImprovedFactionsPlugin,\n    private val config: WildernessModuleConfig\n) : PlayerSubCommand(\"wilderness\") {\n    private val cooldownManager = CooldownManager.createManager(config.timeUnit, config.cooldown)\n    override fun options() = Options.getFromConfig(plugin, label) { options, _ ->\n        options.cmdOpt(CooldownOption(plugin, cooldownManager))\n            .tabOpt(CooldownTabOption(cooldownManager, false))\n            .cmdOpt(UsageLimitOption(config.usageLimit, \"wilderness\"))\n    }\n\n    override fun arguments() = arrayOf<Argument<*>>()\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val location = config.getRandomLocation(player.location)\n        if (location == null) {\n            cancelCommand(player)\n            throw CommandException(\"wilderness.command.wilderness.failed-to-find\", emptyMap())\n        }\n\n        PlayerTeleporter(\n            plugin,\n            player,\n            \"wilderness.messages.teleporting-title\",\n            \"wilderness.messages.teleporting-subtitle\",\n            { teleport(location, player) },\n            config.standStillUnit.toMillis(config.standStillValue)\n        ).startTeleport()\n        return true\n    }\n\n    private fun teleport(location: Location, player: Player) {\n        if (config.gainResistance && !player.hasPotionEffect(PotionEffectType.DAMAGE_RESISTANCE)) {\n            player.addPotionEffect(\n                PotionEffect(\n                    PotionEffectType.DAMAGE_RESISTANCE,\n                    config.resistanceDuration * 20,\n                    config.resistanceAmplifier,\n                    false,\n                    false,\n                    true\n                )\n            )\n        }\n        player.teleport(location.add(0.0, 2.0, 0.0))\n        player.sendLocalized(\"wilderness.command.wilderness.teleported\", emptyMap())\n    }\n\n    private fun cancelCommand(player: Player) {\n        cooldownManager.removeCooldown(player.uniqueId)\n        loggedTransaction {\n            PlayerUsageLimits.getUsageLimit(\"wilderness\", player.uniqueId).used--\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/wilderness/commands/WildernessCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/wilderness/commands/WildernessCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/wilderness/commands/WildernessCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/wilderness/commands/WildernessCommand.kt	(date 1732727682572)
@@ -6,8 +6,8 @@
 import io.github.toberocat.improvedfactions.modules.wilderness.config.WildernessModuleConfig
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.utils.PlayerTeleporter
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.limit.PlayerUsageLimits
 import io.github.toberocat.improvedfactions.utils.options.limit.UsageLimitOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/executor/CommandExecutor.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/executor/CommandExecutor.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/executor/CommandExecutor.kt
new file mode 100644
--- /dev/null	(date 1732738161356)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/executor/CommandExecutor.kt	(date 1732738161356)
@@ -0,0 +1,67 @@
+package io.github.toberocat.improvedfactions.commands.executor
+
+import io.github.toberocat.improvedfactions.commands.CommandProcessor
+import io.github.toberocat.improvedfactions.commands.arguments.ArgumentParser
+import io.github.toberocat.improvedfactions.commands.arguments.primitives.StringArgumentParser
+import io.github.toberocat.improvedfactions.translation.sendLocalized
+import org.bukkit.command.Command
+import org.bukkit.command.CommandSender
+import org.bukkit.command.PluginCommand
+import org.bukkit.command.TabExecutor
+import org.bukkit.plugin.java.JavaPlugin
+
+val knownArgumentParsers = mapOf<Class<*>, ArgumentParser>(
+    String::class.java to StringArgumentParser(),
+)
+
+class CommandExecutor(private val command: PluginCommand) : TabExecutor {
+    companion object {
+        fun create(plugin: JavaPlugin, label: String): CommandExecutor {
+            val command = plugin.getCommand(label) ?: throw IllegalArgumentException("Command $label not found")
+            return CommandExecutor(command)
+        }
+    }
+
+    private val commandProcessors = mutableMapOf<String, CommandProcessor>()
+
+    fun registerCommandProcessor(processor: CommandProcessor) {
+        if (commandProcessors.containsKey(processor.label)) {
+            throw IllegalArgumentException("Command processor with label ${processor.label} already registered")
+        }
+
+        commandProcessors[processor.label] = processor
+        commandProcessors.entries.sortedByDescending { it.key.split(" ").size }
+    }
+
+    fun <T> getArgumentParser(clazz: Class<T>, arg: String): T =
+        knownArgumentParsers[clazz]?.parse(arg) as? T ?: throw IllegalArgumentException("Unknown argument parser for $clazz")
+
+    override fun onTabComplete(
+        sender: CommandSender,
+        command: Command,
+        label: String,
+        args: Array<String>,
+    ): List<String> {
+        TODO("Not yet implemented")
+    }
+
+    override fun onCommand(
+        sender: CommandSender,
+        command: Command,
+        label: String,
+        args: Array<String>,
+    ): Boolean {
+        val processor = commandProcessors.entries.firstOrNull { it.key == label }?.value
+        if (processor == null) {
+            sender.sendMessage("Command $label not found")
+            return false
+        }
+
+        val result = processor.execute(sender, args)
+        if (result != null) {
+            sender.sendLocalized(result.responseLocalizationKey, result.args)
+        }
+
+        return true
+    }
+}
\ No newline at end of file
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/GenerateWikiSourcesCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/GenerateWikiSourcesCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/general/GenerateWikiSourcesCommand.kt
rename from improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/GenerateWikiSourcesCommand.kt
rename to improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/general/GenerateWikiSourcesCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/GenerateWikiSourcesCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/general/GenerateWikiSourcesCommand.kt	(date 1732730686375)
@@ -1,4 +1,4 @@
-package io.github.toberocat.improvedfactions.commands
+package io.github.toberocat.improvedfactions.commands.general
 
 import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
 import io.github.toberocat.improvedfactions.translation.localizeUnformatted
@@ -46,7 +46,8 @@
         val args = subCommand.args.joinToString(" ") { it.usage() }
         val category = Locale.ENGLISH.localizeUnformatted(meta.category, emptyMap())
         val commandIndex = categoryIndex[category] ?: mutableListOf()
-        commandIndex.add(CommandIndexEntry(
+        commandIndex.add(
+            CommandIndexEntry(
             qualifiedName = qualifiedName,
             permission = subCommand.permission,
             englishDescription = Locale.ENGLISH.localizeUnformatted(meta.description, emptyMap()),
@@ -58,7 +59,8 @@
                 )
             },
             module = meta.module
-        ))
+        )
+        )
 
         categoryIndex[category] = commandIndex
         indexCommand(subCommand)
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/InfoCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/InfoCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/general/InfoCommand.kt
rename from improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/InfoCommand.kt
rename to improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/general/InfoCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/InfoCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/general/InfoCommand.kt	(date 1732730686387)
@@ -1,4 +1,4 @@
-package io.github.toberocat.improvedfactions.commands
+package io.github.toberocat.improvedfactions.commands.general
 
 import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
 import io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction
@@ -10,7 +10,7 @@
 import io.github.toberocat.improvedfactions.ranks.listRanks
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.utils.arguments.OptionalFactionArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.FactionExistOption
 import io.github.toberocat.improvedfactions.utils.options.addFactionNameOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
Index: improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/ResponseType.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/ResponseType.kt b/improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/ResponseType.kt
new file mode 100644
--- /dev/null	(date 1732732266798)
+++ b/improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/ResponseType.kt	(date 1732732266798)
@@ -0,0 +1,6 @@
+package io.github.toberocat.improvedfactions.annotations
+
+enum class ResponseType {
+    SUCCESS,
+    FAILURE,
+}
\ No newline at end of file
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/ListFactionsCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/ListFactionsCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/general/ListFactionsCommand.kt
rename from improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/ListFactionsCommand.kt
rename to improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/general/ListFactionsCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/ListFactionsCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/general/ListFactionsCommand.kt	(date 1732730686371)
@@ -1,10 +1,10 @@
-package io.github.toberocat.improvedfactions.commands
+package io.github.toberocat.improvedfactions.commands.general
 
 import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
 import io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction
 import io.github.toberocat.improvedfactions.factions.FactionHandler
 import io.github.toberocat.improvedfactions.translation.sendLocalized
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
 import io.github.toberocat.toberocore.command.options.Options
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/CommandProcessResult.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/CommandProcessResult.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/CommandProcessResult.kt
new file mode 100644
--- /dev/null	(date 1732738074644)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/CommandProcessResult.kt	(date 1732738074644)
@@ -0,0 +1,8 @@
+package io.github.toberocat.improvedfactions.commands
+
+import io.github.toberocat.improvedfactions.annotations.LocalizationKey
+
+data class CommandProcessResult(
+    val responseLocalizationKey: LocalizationKey,
+    val args: Map<String, String>,
+)
\ No newline at end of file
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/DeleteRankCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.rank\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.ranks.FactionRank\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.FactionUser\nimport io.github.toberocat.improvedfactions.user.FactionUsers\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.arguments.FallbackRankArgument\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.RankArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.improvedfactions.utils.options.RankNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.exceptions.CommandException\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.rank.delete.description\",\n    category = CommandCategory.PERMISSION_CATEGORY\n)\nclass DeleteRankCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"delete\") {\n    override fun options(): Options =\n        Options.getFromConfig(plugin, label).cmdOpt(InFactionOption(true)).cmdOpt(RankNameOption(0))\n            .cmdOpt(RankNameOption(1))\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        RankArgument(), FallbackRankArgument()\n    )\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        val arguments = parseArgs(player, args)\n        val rank = arguments.get<FactionRank>(0) ?: return false\n        val fallbackRank = arguments.get<FactionRank>(1) ?: return false\n        loggedTransaction {\n            if (player.factionUser().faction()?.defaultRank == rank.id.value)\n                throw CommandException(\"base.command.rank.delete.rank-is-default\", emptyMap())\n            FactionUser.find { FactionUsers.assignedRank eq rank.id.value }\n                .forEach { it.assignedRank = fallbackRank.id.value }\n            rank.delete()\n        }\n        player.sendLocalized(\"base.command.rank.delete.deleted\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/DeleteRankCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/DeleteRankCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/DeleteRankCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/DeleteRankCommand.kt	(date 1732727682489)
@@ -9,8 +9,8 @@
 import io.github.toberocat.improvedfactions.user.factionUser
 import io.github.toberocat.improvedfactions.utils.arguments.FallbackRankArgument
 import io.github.toberocat.improvedfactions.utils.arguments.entity.RankArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.improvedfactions.utils.options.RankNameOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/EditPermissionsCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.rank\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.ranks.FactionRank\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.RankArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.improvedfactions.utils.options.RankNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\nconst val EDIT_RANK_COMMAND_DESCRIPTION = \"base.command.rank.edit.description\"\nconst val EDIT_RANK_COMMAND_CATEGORY = CommandCategory.PERMISSION_CATEGORY\n\n\n@CommandMeta(\n    description = EDIT_RANK_COMMAND_DESCRIPTION,\n    category = EDIT_RANK_COMMAND_CATEGORY\n)\nopen class EditPermissionsCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"edit\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label)\n        .cmdOpt(InFactionOption(true))\n        .cmdOpt(RankNameOption(0))\n        .cmdOpt(ArgLengthOption(1))\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        RankArgument()\n    )\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        val rank = parseArgs(player, args).get<FactionRank>(0) ?: return false\n\n        player.sendLocalized(\"base.command.rank.edit.header\")\n        loggedTransaction {\n            rank.permissions().forEach {\n                player.sendLocalized(\"base.command.rank.edit.permission-details\", mapOf(\n                    \"rank\" to rank.name,\n                    \"permission\" to it.permission,\n                    \"value\" to it.allowed.toString()\n                ))\n            }\n        }\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/EditPermissionsCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/EditPermissionsCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/EditPermissionsCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/EditPermissionsCommand.kt	(date 1732727682630)
@@ -5,8 +5,8 @@
 import io.github.toberocat.improvedfactions.ranks.FactionRank
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.utils.arguments.entity.RankArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.improvedfactions.utils.options.RankNameOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/CreateRankCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.rank\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.ranks.FactionRankHandler\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.arguments.PriorityArgument\nimport io.github.toberocat.improvedfactions.utils.arguments.RankNameInputArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    category = CommandCategory.PERMISSION_CATEGORY,\n    description = \"base.command.rank.create.description\"\n)\nclass CreateRankCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"create\") {\n\n    override fun options(): Options =\n        Options.getFromConfig(plugin, label)\n            .cmdOpt(InFactionOption(true))\n            .cmdOpt(ArgLengthOption(2))\n\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        RankNameInputArgument(),\n        PriorityArgument()\n    )\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        val arguments = parseArgs(player, args)\n        val rank = arguments.get<String>(0) ?: return false\n        val priority = arguments.get<Int>(1) ?: return false\n        loggedTransaction {\n            val faction = player.factionUser().faction() ?: return@loggedTransaction\n            FactionRankHandler.createRank(faction.id.value, rank, priority, emptyList())\n        }\n        player.sendLocalized(\"base.command.rank.create.created\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/CreateRankCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/CreateRankCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/CreateRankCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/CreateRankCommand.kt	(date 1732727682515)
@@ -7,8 +7,8 @@
 import io.github.toberocat.improvedfactions.user.factionUser
 import io.github.toberocat.improvedfactions.utils.arguments.PriorityArgument
 import io.github.toberocat.improvedfactions.utils.arguments.RankNameInputArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/RankCommandRoute.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.rank\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.permissions.Permissions\nimport io.github.toberocat.improvedfactions.ranks.listRanks\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.toberocore.command.CommandRoute\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\nconst val RANK_COMMAND_DESCRIPTION = \"base.command.rank.description\"\nconst val RANK_COMMAND_CATEGORY = CommandCategory.PERMISSION_CATEGORY\n\n\n@CommandMeta(\n    description = RANK_COMMAND_DESCRIPTION,\n    category = RANK_COMMAND_CATEGORY\n)\nopen class RankCommandRoute(plugin: ImprovedFactionsPlugin) : CommandRoute(\"rank\", plugin) {\n    init {\n        addChild(CreateRankCommand(plugin))\n        addChild(AssignRankCommand(plugin))\n        addChild(DeleteRankCommand(plugin))\n        addChild(SetPermissionCommand(plugin))\n        addChild(DefaultRankCommand(plugin))\n        addChild(EditPermissionsCommand(plugin))\n    }\n\n    override fun options(): Options = super.options()\n        .cmdOpt(FactionPermissionOption(Permissions.MANAGE_PERMISSIONS))\n        .cmdOpt(InFactionOption(true))\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        player.sendLocalized(\"base.command.rank.header\")\n        loggedTransaction {\n            val user = player.factionUser()\n            user.faction()\n                ?.listRanks()\n                ?.filter { user.canManage(it) }\n                ?.forEach {\n                    player.sendLocalized(\"base.command.rank.rank-overview\", mapOf(\n                        \"name\" to it.name,\n                        \"priority\" to it.priority.toString(),\n                        \"countAssignedUsers\" to it.countAssignedUsers().toString()\n                    ))\n                }\n        }\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/RankCommandRoute.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/RankCommandRoute.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/RankCommandRoute.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/RankCommandRoute.kt	(date 1732727682593)
@@ -6,8 +6,8 @@
 import io.github.toberocat.improvedfactions.ranks.listRanks
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.toberocore.command.CommandRoute
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/HelpCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/HelpCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/general/HelpCommand.kt
rename from improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/HelpCommand.kt
rename to improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/general/HelpCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/HelpCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/general/HelpCommand.kt	(date 1732730686367)
@@ -1,4 +1,4 @@
-package io.github.toberocat.improvedfactions.commands
+package io.github.toberocat.improvedfactions.commands.general
 
 import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
 import io.github.toberocat.improvedfactions.translation.getLocalized
@@ -6,7 +6,7 @@
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.utils.arguments.StringArgument
 import io.github.toberocat.improvedfactions.utils.async
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.getMeta
 import io.github.toberocat.improvedfactions.utils.toAudience
 import io.github.toberocat.toberocore.command.Command
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/SetPermissionCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.rank\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.permissions.FactionPermission\nimport io.github.toberocat.improvedfactions.permissions.FactionPermissions\nimport io.github.toberocat.improvedfactions.ranks.FactionRank\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.utils.arguments.BooleanArgument\nimport io.github.toberocat.improvedfactions.utils.arguments.PermissionArgument\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.RankArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.BoolOption\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.improvedfactions.utils.options.PermissionOption\nimport io.github.toberocat.improvedfactions.utils.options.RankNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\nimport org.jetbrains.exposed.sql.SqlExpressionBuilder.eq\nimport org.jetbrains.exposed.sql.and\n\n@CommandMeta(\n    description = \"base.command.rank.set.description\",\n    category = CommandCategory.PERMISSION_CATEGORY\n)\nclass SetPermissionCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"set\") {\n    override fun options(): Options =\n        Options.getFromConfig(plugin, label)\n            .cmdOpt(InFactionOption(true))\n            .cmdOpt(RankNameOption(0))\n            .cmdOpt(PermissionOption(1))\n            .cmdOpt(BoolOption(2))\n            .cmdOpt(ArgLengthOption(3))\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        RankArgument(), PermissionArgument(), BooleanArgument()\n    )\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        val arguments = parseArgs(player, args)\n        val rank = arguments.get<FactionRank>(0) ?: return false\n        val permission = arguments.get<String>(1) ?: return false\n        val value = arguments.get<Boolean>(2) ?: return false\n\n        loggedTransaction {\n            val factionPermission = FactionPermission.find(\n                FactionPermissions.rankId eq rank.id.value and (FactionPermissions.permission eq permission)\n            ).firstOrNull() ?: FactionPermission.new {\n                rankId = rank.id.value\n                this.permission = permission\n            }\n            factionPermission.allowed = value\n        }\n        player.sendLocalized(\"base.command.rank.set.updated\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/SetPermissionCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/SetPermissionCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/SetPermissionCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/SetPermissionCommand.kt	(date 1732727682493)
@@ -9,8 +9,8 @@
 import io.github.toberocat.improvedfactions.utils.arguments.BooleanArgument
 import io.github.toberocat.improvedfactions.utils.arguments.PermissionArgument
 import io.github.toberocat.improvedfactions.utils.arguments.entity.RankArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.BoolOption
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.improvedfactions.utils.options.PermissionOption
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerSetCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.power.commands\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.factions.Faction\nimport io.github.toberocat.improvedfactions.factions.FactionHandler\nimport io.github.toberocat.improvedfactions.factions.PowerAccumulationChangeReason\nimport io.github.toberocat.improvedfactions.modules.power.PowerRaidsModule\nimport io.github.toberocat.improvedfactions.modules.power.PowerType\nimport io.github.toberocat.improvedfactions.modules.power.impl.FactionPowerRaidModuleHandleImpl\nimport io.github.toberocat.improvedfactions.permissions.Permissions\nimport io.github.toberocat.improvedfactions.utils.arguments.EnumArgument\nimport io.github.toberocat.improvedfactions.utils.arguments.IntegerArgument\nimport io.github.toberocat.improvedfactions.utils.arguments.PowerArgument\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.improvedfactions.utils.options.addFactionNameOption\nimport io.github.toberocat.toberocore.command.SubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.exceptions.CommandException\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.command.CommandSender\nimport org.bukkit.entity.Player\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction \n\n@CommandMeta(\n    description = \"base.command.power.set.description\",\n    category = CommandCategory.ADMIN_CATEGORY,\n    module = PowerRaidsModule.MODULE_NAME\n)\nclass PowerSetCommand(\n    private val plugin: ImprovedFactionsPlugin\n) : SubCommand(\"set\") {\n    override fun options() = Options.getFromConfig(plugin, label) { options, _ ->\n        options.addFactionNameOption(2)\n    }\n    override fun arguments() = arrayOf<Argument<*>>(\n        EnumArgument(PowerType::class.java, \"base.command.args.power-type\"),\n        PowerArgument(),\n        FactionArgument(),\n    )\n\n    override fun handleCommand(sender: CommandSender, args: Array<String>): Boolean {\n        val faction: Faction\n        val power: Int\n        val powerType: PowerType\n        if (sender is Player) {\n            val arguments = parseArgs(sender, args)\n            powerType = arguments.get<PowerType>(0) ?: return false\n            power = arguments.get<Int>(1) ?: return false\n            faction = arguments.get<Faction>(2) ?: return false\n        } else {\n            if (args.size < 3) {\n                throw CommandException(\"base.exceptions.arg-doesnt-match\", emptyMap())\n            }\n            powerType = PowerType.valueOf(args[0].uppercase())\n            power = args[1].toIntOrNull() ?: throw CommandException(\"base.exceptions.arg-doesnt-match\", emptyMap())\n            faction = FactionHandler.getFaction(args.drop(2).joinToString(separator = \" \")) ?: throw CommandException(\"base.exceptions.arg-doesnt-match\", emptyMap())\n        }\n\n        loggedTransaction {\n            when (powerType) {\n                PowerType.ACCUMULATED -> faction.setAccumulatedPower(power, PowerAccumulationChangeReason.OTHER)\n                PowerType.MAXIMUM -> faction.setMaxPower(power)\n            }\n        }\n\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerSetCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerSetCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerSetCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerSetCommand.kt	(date 1732727682466)
@@ -12,8 +12,8 @@
 import io.github.toberocat.improvedfactions.utils.arguments.IntegerArgument
 import io.github.toberocat.improvedfactions.utils.arguments.PowerArgument
 import io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.improvedfactions.utils.options.addFactionNameOption
Index: improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/CommandResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/CommandResponse.kt b/improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/CommandResponse.kt
new file mode 100644
--- /dev/null	(date 1732732393792)
+++ b/improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/CommandResponse.kt	(date 1732732393792)
@@ -0,0 +1,7 @@
+package io.github.toberocat.improvedfactions.annotations
+
+@Target(AnnotationTarget.FUNCTION)
+annotation class CommandResponse(
+    val responseName: String,
+    val key: LocalizationKey = "",
+)
\ No newline at end of file
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerAddCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.power.commands\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.factions.Faction\nimport io.github.toberocat.improvedfactions.factions.FactionHandler\nimport io.github.toberocat.improvedfactions.factions.PowerAccumulationChangeReason\nimport io.github.toberocat.improvedfactions.modules.power.PowerRaidsModule\nimport io.github.toberocat.improvedfactions.modules.power.PowerType\nimport io.github.toberocat.improvedfactions.utils.arguments.EnumArgument\nimport io.github.toberocat.improvedfactions.utils.arguments.PowerArgument\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.addFactionNameOption\nimport io.github.toberocat.toberocore.command.SubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.exceptions.CommandException\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.command.CommandSender\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.power.set.description\",\n    category = CommandCategory.ADMIN_CATEGORY,\n    module = PowerRaidsModule.MODULE_NAME\n)\nclass PowerAddCommand(\n    private val plugin: ImprovedFactionsPlugin\n) : SubCommand(\"add\") {\n    override fun options() = Options.getFromConfig(plugin, label) { options, _ ->\n        options.addFactionNameOption(2)\n    }\n    override fun arguments() = arrayOf<Argument<*>>(\n        EnumArgument(PowerType::class.java, \"base.command.args.power-type\"),\n        PowerArgument(),\n        FactionArgument(),\n    )\n\n    override fun handleCommand(sender: CommandSender, args: Array<String>): Boolean {\n        val faction: Faction\n        val power: Int\n        val powerType: PowerType\n        if (sender is Player) {\n            val arguments = parseArgs(sender, args)\n            powerType = arguments.get<PowerType>(0) ?: return false\n            power = arguments.get<Int>(1) ?: return false\n            faction = arguments.get<Faction>(2) ?: return false\n        } else {\n            if (args.size < 3) {\n                throw CommandException(\"base.exceptions.arg-doesnt-match\", emptyMap())\n            }\n            powerType = PowerType.valueOf(args[0].uppercase())\n            power = args[1].toIntOrNull() ?: throw CommandException(\"base.exceptions.arg-doesnt-match\", emptyMap())\n            faction = FactionHandler.getFaction(args.drop(2).joinToString(separator = \" \")) ?: throw CommandException(\"base.exceptions.arg-doesnt-match\", emptyMap())\n        }\n\n        loggedTransaction {\n            when (powerType) {\n                PowerType.ACCUMULATED -> faction.setAccumulatedPower(faction.accumulatedPower + power, PowerAccumulationChangeReason.OTHER)\n                PowerType.MAXIMUM -> faction.setMaxPower(faction.maxPower + power)\n            }\n        }\n\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerAddCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerAddCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerAddCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerAddCommand.kt	(date 1732727682578)
@@ -10,8 +10,8 @@
 import io.github.toberocat.improvedfactions.utils.arguments.EnumArgument
 import io.github.toberocat.improvedfactions.utils.arguments.PowerArgument
 import io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.addFactionNameOption
 import io.github.toberocat.toberocore.command.SubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.power.commands\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.modules.power.PowerRaidsModule\nimport io.github.toberocat.improvedfactions.modules.power.impl.FactionPowerRaidModuleHandleImpl\nimport io.github.toberocat.improvedfactions.permissions.Permissions\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.exceptions.CommandException\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\nimport kotlin.math.round\n\nconst val POWER_COMMAND_DESCRIPTION = \"base.command.power.description\"\nconst val POWER_COMMAND_CATEGORY = CommandCategory.POWER_CATEGORY\nconst val POWER_COMMAND_MODULE = PowerRaidsModule.MODULE_NAME\n\n@CommandMeta(\n    description = POWER_COMMAND_DESCRIPTION,\n    category = POWER_COMMAND_CATEGORY,\n    module = POWER_COMMAND_MODULE\n)\nopen class PowerCommand(\n    private val plugin: ImprovedFactionsPlugin,\n    protected val powerHandle: FactionPowerRaidModuleHandleImpl\n) : PlayerSubCommand(\"power\") {\n\n    init {\n        addChild(PowerSetCommand(plugin))\n        addChild(PowerAddCommand(plugin))\n    }\n\n    override fun options() = Options.getFromConfig(plugin, label) { options, _ ->\n        options\n            .cmdOpt(InFactionOption(true))\n            .cmdOpt(FactionPermissionOption(Permissions.VIEW_POWER))\n    }\n\n    override fun arguments() = arrayOf<Argument<*>>()\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        player.sendLocalized(\"base.command.power.header\")\n\n        loggedTransaction {\n            val faction = player.factionUser().faction() ?: throw CommandException(\n                \"power.command.power.faction-needed\", emptyMap()\n            )\n            val activeAccumulation = powerHandle.getActivePowerAccumulation(faction)\n            val inactiveAccumulation = powerHandle.getInactivePowerAccumulation(faction)\n            val claimKeep = powerHandle.getClaimMaintenanceCost(faction)\n            val currentlyAccumulated = powerHandle.getPowerAccumulated(\n                activeAccumulation,\n                inactiveAccumulation\n            )\n            val nextClaimCost = powerHandle.getNextClaimCost(faction)\n\n\n            player.showDetails(\"Power\", stringify(faction.accumulatedPower.toDouble()))\n            player.showDetails(\"Max Power\", stringify(faction.maxPower.toDouble()))\n            player.showDetails(\"Active Accumulation\", stringify(activeAccumulation))\n            player.showDetails(\"Inactive Accumulation\", stringify(inactiveAccumulation))\n            player.showDetails(\"Claim Keep\", stringify(claimKeep))\n            player.showDetails(\"Current Accumulation\", stringify(currentlyAccumulated))\n            player.showDetails(\"Next Claim Cost\", stringify(nextClaimCost.toDouble()))\n        }\n        return true\n    }\n\n    private fun Player.showDetails(key: String, value: String, cmd: String = \"\") {\n        sendLocalized(\n            \"base.command.power.detail\", mapOf(\n                \"cmd\" to cmd,\n                \"key\" to key,\n                \"value\" to value\n            )\n        )\n    }\n\n    protected fun stringify(value: Double) = (round(value * 100) / 100).toString()\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerCommand.kt	(date 1732727682511)
@@ -7,8 +7,8 @@
 import io.github.toberocat.improvedfactions.permissions.Permissions
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/SiegeCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.power.commands\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.claims.getFactionClaim\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.modules.power.PowerRaidsModule\nimport io.github.toberocat.improvedfactions.modules.power.impl.FactionPowerRaidModuleHandleImpl\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.user.noFactionId\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.power.siege.description\",\n    category = CommandCategory.POWER_CATEGORY,\n    module = PowerRaidsModule.MODULE_NAME\n)\nclass SiegeCommand(\n    private val plugin: ImprovedFactionsPlugin,\n    private val powerHandle: FactionPowerRaidModuleHandleImpl\n) : PlayerSubCommand(\"siege\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label)\n\n    override fun arguments(): Array<Argument<*>> = arrayOf()\n\n    override fun handle(player: Player, args: Array<String>) = loggedTransaction {\n        val claim = player.location.getFactionClaim()\n        if (claim == null || claim.factionId == noFactionId) {\n            player.sendLocalized(\"power.siege.not-in-claim\")\n            return@loggedTransaction true\n        }\n        if (claim.factionId == player.factionUser().factionId) {\n            player.sendLocalized(\"power.siege.own-claim\")\n            return@loggedTransaction true\n        }\n\n        claim.siegeManager.startSiege(player)\n        player.sendLocalized(\"power.siege.entered\")\n        return@loggedTransaction true\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/SiegeCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/SiegeCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/SiegeCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/SiegeCommand.kt	(date 1732727682584)
@@ -8,8 +8,8 @@
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
 import io.github.toberocat.improvedfactions.user.noFactionId
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
 import io.github.toberocat.toberocore.command.options.Options
Index: improved-factions/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\n    alias(libs.plugins.kotlin.jvm)\n    id(\"maven-publish\")\n    id(\"io.github.goooler.shadow\") version \"8.1.8\"\n}\n\ngroup = \"io.github.toberocat.improved-factions\"\nversion = \"2.3.0\"\n\njava {\n    sourceCompatibility = JavaVersion.VERSION_17\n    targetCompatibility = JavaVersion.VERSION_17\n}\n\nrepositories {\n    mavenCentral()\n    maven(\"https://hub.spigotmc.org/nexus/content/repositories/snapshots/\")\n    maven(\"https://jitpack.io\")\n    maven(\"https://repo.extendedclip.com/content/repositories/placeholderapi/\")\n    maven(\"https://repo.jeff-media.com/public\")\n    maven(\"https://repo.mikeprimm.com/\")\n    maven(\"https://s01.oss.sonatype.org/content/repositories/snapshots/\")\n    maven(\"https://repo.papermc.io/repository/maven-public/\")\n}\n\ndependencies {\n    // Spigot API\n    compileOnly(libs.spigot.api)\n\n    // Exposed ORM\n    implementation(libs.exposed.core)\n    implementation(libs.exposed.jdbc)\n    implementation(libs.exposed.dao)\n    implementation(libs.exposed.kotlin.datetime)\n\n    // Jackson\n    implementation(libs.jackson.core)\n    implementation(libs.jackson.databind)\n    implementation(libs.jackson.module.kotlin)\n\n    // Other dependencies\n    implementation(libs.kotlin.stdlib)\n    implementation(libs.kotlinx.datetime.jvm)\n    implementation(libs.toberocore)\n    implementation(libs.sqlite.jdbc)\n    implementation(libs.h2)\n    implementation(libs.spigot.update.checker)\n    compileOnly(libs.guiengine)\n    implementation(libs.adventure.text.minimessage)\n    implementation(libs.adventure.text.serializer.legacy)\n    implementation(libs.kyori.adventure.platform.bukkit)\n    implementation(libs.base64.itemstack)\n    implementation(libs.bstats.bukkit)\n\n    // Provided dependencies\n    compileOnly(libs.placeholderapi)\n    compileOnly(libs.dynmap.api)\n\n    // Test dependencies\n    testImplementation(libs.kotlin.test.junit)\n    testImplementation(libs.kotlin.test)\n    testImplementation(libs.junit.jupiter.params)\n    testImplementation(libs.mockbukkit)\n    testImplementation(libs.snakeyaml)\n    testImplementation(libs.gson)\n    testImplementation(libs.logback.classic)\n}\n\ntasks.named<Copy>(\"processResources\") {\n    filesMatching(\"plugin.yml\") {\n        expand(\"version\" to project.version)\n    }\n}\n\ntasks {\n\n    shadowJar {\n        archiveFileName.set(\"${project.name}-${project.version}.jar\")\n        if (System.getenv(\"CI\") == null) {\n            destinationDirectory.set(file(\"../server/plugins\"))\n        }\n        relocate(\"com.fasterxml.jackson\", \"io.github.toberocat.relocated.jackson\")\n        relocate(\"net.kyori\", \"io.github.toberocat.relocated.kyori\")\n        relocate(\"dev.s7a\", \"io.github.toberocat.relocated.base64itemstack\")\n        relocate(\"org.bstats\", \"io.github.toberocat.relocated.bstats\")\n        relocate(\"com.jeff_media\", \"io.github.toberocat.relocated.jeff_media\")\n    }\n\n    build {\n        dependsOn(shadowJar)\n    }\n\n    test {\n        useJUnitPlatform()\n    }\n}\n\nkotlin {\n    jvmToolchain(17)\n}\n\npublishing {\n    publications {\n        create<MavenPublication>(\"mavenJava\") {\n            from(components[\"java\"])\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/build.gradle.kts b/improved-factions/build.gradle.kts
--- a/improved-factions/build.gradle.kts	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/build.gradle.kts	(date 1732728994267)
@@ -1,5 +1,6 @@
 plugins {
     alias(libs.plugins.kotlin.jvm)
+    alias(libs.plugins.devtools.ksp)
     id("maven-publish")
     id("io.github.goooler.shadow") version "8.1.8"
 }
@@ -12,6 +13,7 @@
     targetCompatibility = JavaVersion.VERSION_17
 }
 
+
 repositories {
     mavenCentral()
     maven("https://hub.spigotmc.org/nexus/content/repositories/snapshots/")
@@ -24,6 +26,8 @@
 }
 
 dependencies {
+    implementation(project(":annotations"))
+
     // Spigot API
     compileOnly(libs.spigot.api)
 
@@ -64,6 +68,10 @@
     testImplementation(libs.snakeyaml)
     testImplementation(libs.gson)
     testImplementation(libs.logback.classic)
+
+    // KSP
+    ksp(project(":code-generation"))
+    ksp(project(":documentation-generation"))
 }
 
 tasks.named<Copy>("processResources") {
@@ -97,6 +105,13 @@
 
 kotlin {
     jvmToolchain(17)
+
+    sourceSets.main {
+        kotlin.srcDir("build/generated/ksp/main/kotlin")
+    }
+    sourceSets.test {
+        kotlin.srcDir("build/generated/ksp/test/kotlin")
+    }
 }
 
 publishing {
Index: improved-factions/settings.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\n    id(\"org.gradle.toolchains.foojay-resolver-convention\") version \"0.8.0\"\n}\n\nrootProject.name = \"ImprovedFactions\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/settings.gradle.kts b/improved-factions/settings.gradle.kts
--- a/improved-factions/settings.gradle.kts	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/settings.gradle.kts	(date 1732728972196)
@@ -1,5 +1,15 @@
+pluginManagement {
+    repositories {
+        gradlePluginPortal()
+    }
+}
+
 plugins {
     id("org.gradle.toolchains.foojay-resolver-convention") version "0.8.0"
 }
 
-rootProject.name = "ImprovedFactions"
\ No newline at end of file
+rootProject.name = "ImprovedFactions"
+include("documentation-generation")
+include("improved-factions")
+include("annotations")
+include("code-generation")
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/PeaceCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.relations.commands\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.peace.description\",\n    module = \"relations\",\n    category = CommandCategory.GENERAL_CATEGORY\n)\nclass PeaceCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"peace\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n    )\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val arguments = parseArgs(player, args)\n        TODO(\"Not yet implemented\")\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/PeaceCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/PeaceCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/PeaceCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/PeaceCommand.kt	(date 1732727682533)
@@ -1,8 +1,8 @@
 package io.github.toberocat.improvedfactions.modules.relations.commands
 
 import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
 import io.github.toberocat.toberocore.command.options.Options
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/SendPower.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.relations.commands\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.sendpower.description\",\n    module = \"relations\",\n    category = CommandCategory.GENERAL_CATEGORY\n)\nclass SendPower(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"sendpower\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n    )\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val arguments = parseArgs(player, args)\n        TODO(\"Not yet implemented\")\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/SendPower.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/SendPower.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/SendPower.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/SendPower.kt	(date 1732727682476)
@@ -1,8 +1,8 @@
 package io.github.toberocat.improvedfactions.modules.relations.commands
 
 import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
 import io.github.toberocat.toberocore.command.options.Options
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AllyCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.relations.commands\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.factions.Faction\nimport io.github.toberocat.improvedfactions.modules.relations.RelationsModule\nimport io.github.toberocat.improvedfactions.modules.relations.RelationsModule.inviteToAlliance\nimport io.github.toberocat.improvedfactions.permissions.Permissions\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.improvedfactions.utils.options.addFactionNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"relations.command.ally.description\",\n    module = \"relations\",\n    category = CommandCategory.RELATIONS_CATEGORY\n)\nclass AllyCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"ally\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n        options.addFactionNameOption(0)\n            .cmdOpt(InFactionOption(true))\n            .cmdOpt(FactionPermissionOption(Permissions.MANAGE_RELATION))\n            .cmdOpt(ArgLengthOption(1))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        FactionArgument()\n    )\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val arguments = parseArgs(player, args)\n        loggedTransaction {\n            val targetFaction = arguments.get<Faction>(0) ?: return@loggedTransaction false\n            val faction = player.factionUser().faction() ?: return@loggedTransaction false\n            faction.inviteToAlliance(targetFaction)\n            player.sendLocalized(\"relations.command.ally.success\")\n        }\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AllyCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AllyCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AllyCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AllyCommand.kt	(date 1732727682637)
@@ -9,8 +9,8 @@
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
 import io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.improvedfactions.utils.options.addFactionNameOption
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AlliesCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.relations.commands\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.factions.FactionHandler\nimport io.github.toberocat.improvedfactions.modules.relations.RelationsModule.allies\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.improvedfactions.utils.options.addFactionNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"relations.command.allies.description\",\n    module = \"relations\",\n    category = CommandCategory.RELATIONS_CATEGORY\n)\nclass AlliesCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"allies\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n        options\n            .cmdOpt(InFactionOption(true))\n            .cmdOpt(ArgLengthOption(0))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf()\n\n    override fun handle(player: Player, args: Array<String>) = loggedTransaction {\n        val faction = player.factionUser().faction() ?: return@loggedTransaction false\n        player.sendLocalized(\"relations.command.allies.header\")\n        val allies = faction.allies()\n        if (allies.isEmpty()) {\n            player.sendLocalized(\"relations.command.allies.no-allies\")\n            return@loggedTransaction true\n        }\n        allies.forEach {\n            player.sendLocalized(\n                \"relations.command.allies.detail\", mapOf(\n                    \"name\" to (FactionHandler.getFaction(it)?.name ?: \"Unknown\")\n                )\n            )\n        }\n        return@loggedTransaction true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AlliesCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AlliesCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AlliesCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AlliesCommand.kt	(date 1732727682486)
@@ -6,8 +6,8 @@
 import io.github.toberocat.improvedfactions.modules.relations.RelationsModule.allies
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.improvedfactions.utils.options.addFactionNameOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AllyAcceptCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.relations.commands\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.factions.Faction\nimport io.github.toberocat.improvedfactions.modules.relations.RelationsModule.acceptAllyInvite\nimport io.github.toberocat.improvedfactions.permissions.Permissions\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.improvedfactions.utils.options.addFactionNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"relations.command.ally.accept.description\",\n    module = \"relations\",\n    category = CommandCategory.RELATIONS_CATEGORY\n)\nclass AllyAcceptCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"allyaccept\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n        options.addFactionNameOption(0)\n            .cmdOpt(InFactionOption(true))\n            .cmdOpt(FactionPermissionOption(Permissions.MANAGE_RELATION))\n            .cmdOpt(ArgLengthOption(1))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        FactionArgument()\n    )\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val arguments = parseArgs(player, args)\n        loggedTransaction {\n            val targetFaction = arguments.get<Faction>(0) ?: return@loggedTransaction false\n            val faction = player.factionUser().faction() ?: return@loggedTransaction false\n            faction.acceptAllyInvite(targetFaction)\n            player.sendLocalized(\"relations.command.ally.success\")\n        }\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AllyAcceptCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AllyAcceptCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AllyAcceptCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AllyAcceptCommand.kt	(date 1732727682479)
@@ -8,8 +8,8 @@
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
 import io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.improvedfactions.utils.options.addFactionNameOption
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/ImprovedFactionsPlugin.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions\n\nimport com.jeff_media.updatechecker.UpdateCheckSource\nimport com.jeff_media.updatechecker.UpdateChecker\nimport com.jeff_media.updatechecker.UserAgentBuilder\nimport io.github.toberocat.improvedfactions.claims.FactionClaims\nimport io.github.toberocat.improvedfactions.claims.clustering.detector.ClaimClusterDetector\nimport io.github.toberocat.improvedfactions.claims.clustering.query.DatabaseClaimQueryProvider\nimport io.github.toberocat.improvedfactions.commands.FactionCommandExecutor\nimport io.github.toberocat.improvedfactions.commands.claim.FactionMap\nimport io.github.toberocat.improvedfactions.config.ImprovedFactionsConfig\nimport io.github.toberocat.improvedfactions.database.DatabaseConnector\nimport io.github.toberocat.improvedfactions.factions.Factions\nimport io.github.toberocat.improvedfactions.invites.FactionInvites\nimport io.github.toberocat.improvedfactions.listeners.PlayerJoinListener\nimport io.github.toberocat.improvedfactions.listeners.move.MoveListener\nimport io.github.toberocat.improvedfactions.modules.ModuleManager\nimport io.github.toberocat.improvedfactions.papi.PapiExpansion\nimport io.github.toberocat.improvedfactions.ranks.FactionRankHandler\nimport io.github.toberocat.improvedfactions.ranks.FactionRanks\nimport io.github.toberocat.improvedfactions.translation.updateLanguages\nimport io.github.toberocat.improvedfactions.utils.BStatsCollector\nimport io.github.toberocat.improvedfactions.utils.FileUtils\nimport io.github.toberocat.improvedfactions.utils.arguments.ClaimRadiusArgument\nimport io.github.toberocat.improvedfactions.utils.particles.ParticleAnimation\nimport io.github.toberocat.improvedfactions.utils.threadPool\nimport io.github.toberocat.improvedfactions.zone.ZoneHandler\nimport me.clip.placeholderapi.PlaceholderAPI\nimport net.kyori.adventure.platform.bukkit.BukkitAudiences\nimport org.bukkit.Bukkit\nimport org.bukkit.OfflinePlayer\nimport org.bukkit.event.Listener\nimport org.bukkit.plugin.java.JavaPlugin\nimport org.jetbrains.exposed.sql.Database\n\n\n/**\n * Created: 04.08.2023\n * @author Tobias Madlberger (Tobias)\n */\nconst val SPIGOT_RESOURCE_ID = 95617\n\nopen class ImprovedFactionsPlugin : JavaPlugin() {\n\n    private lateinit var database: Database\n    lateinit var adventure: BukkitAudiences\n    lateinit var improvedFactionsConfig: ImprovedFactionsConfig\n    lateinit var claimChunkClusters: ClaimClusterDetector\n    lateinit var papiTransformer: (player: OfflinePlayer, input: String) -> String\n    lateinit var moduleManager: ModuleManager\n\n    companion object {\n        lateinit var instance: ImprovedFactionsPlugin\n            private set\n    }\n\n    override fun onEnable() {\n        saveDefaultConfig()\n        instance = this\n        moduleManager = ModuleManager(this)\n        adventure = BukkitAudiences.create(this)\n        claimChunkClusters = ClaimClusterDetector(DatabaseClaimQueryProvider())\n\n        BStatsCollector(this)\n        checkForUpdate()\n\n        copyFolders()\n        loadConfig()\n\n        database = DatabaseConnector(this).createDatabase()\n\n        moduleManager.registerModules()\n        registerListeners(\n            MoveListener(this),\n            PlayerJoinListener()\n        )\n\n        registerCommands()\n        registerPapi()\n\n        updateLanguages(this)\n\n        claimChunkClusters.detectClusters()\n    }\n\n    override fun onDisable() {\n        adventure.close()\n        threadPool.shutdown()\n    }\n\n    private fun checkForUpdate() {\n        if (!config.getBoolean(\"update-checker\")) return\n\n        logger.info(\"Checking for updates...\")\n        UpdateChecker(this, UpdateCheckSource.SPIGOT, SPIGOT_RESOURCE_ID.toString())\n            .setDownloadLink(SPIGOT_RESOURCE_ID)\n            .setDonationLink(\"https://www.paypal.com/donate/?hosted_button_id=BGB6QWR886Q6Y\")\n            .setChangelogLink(SPIGOT_RESOURCE_ID)\n            .setNotifyOpsOnJoin(true)\n            .setColoredConsoleOutput(false)\n            .setSupportLink(\"https://discord.com/invite/yJYyNRfk39\")\n            .setNotifyByPermissionOnJoin(\"factions.updatechecker\")\n            .setUserAgent(\n                UserAgentBuilder()\n                    .addServerVersion()\n                    .addBukkitVersion()\n                    .addPluginNameAndVersion()\n            )\n            .checkEveryXHours(24.0)\n            .checkNow()\n    }\n\n    private fun copyFolders() {\n        FileUtils.copyAll(this, \"languages\")\n    }\n\n    private fun registerPapi() {\n        if (server.pluginManager.isPluginEnabled(\"PlaceholderAPI\")) {\n            PapiExpansion(improvedFactionsConfig).register()\n            papiTransformer = { player, input -> PlaceholderAPI.setPlaceholders(player, input) }\n            logger.info(\"Loaded improved factions papi extension\")\n            return\n        }\n\n        papiTransformer = { _, input -> input }\n        logger.info(\"Papi not found. Skipping Papi registration\")\n    }\n\n\n    fun loadConfig() {\n        improvedFactionsConfig = ImprovedFactionsConfig.createConfig(this)\n        improvedFactionsConfig.reload(this, config)\n\n        Factions.maxNameLength = config.getInt(\"factions.unsafe.max-name-length\", 36)\n        Factions.maxIconLength = config.getInt(\"factions.unsafe.max-icon-length\", 5000)\n        Factions.maxSpacesInName = config.getInt(\"factions.max-spaces-in-name\", 5)\n        Factions.nameRegex = Regex(config.getString(\"factions.name-regex\") ?: \"[a-zA-Z ]*\")\n        FactionInvites.inviteExpiresInMinutes = config.getInt(\"factions.invites-expire-in\", 5)\n        FactionRanks.maxRankNameLength = config.getInt(\"factions.max-rank-name-length\", 50)\n        FactionRankHandler.guestRankName =\n            config.getString(\"factions.unsafe.guest-rank-name\") ?: FactionRankHandler.guestRankName\n        FactionRanks.rankNameRegex = Regex(config.getString(\"factions.rank-name-regex\") ?: \"[a-zA-Z ]*\")\n\n        ParticleAnimation.hideDecorativeParticles = config.getBoolean(\"performance.decorative-particles.hidden\", false)\n        ParticleAnimation.tickSpeed = config.getLong(\"performance.decorative-particles.tick-speed\", 1)\n\n        ClaimRadiusArgument.MAX_RADIUS = config.getInt(\"factions.max-claim-radius\", 10)\n        FactionMap.MAP_WIDTH = config.getInt(\"factions.map-width\", FactionMap.MAP_WIDTH)\n        FactionMap.MAP_HEIGHT = config.getInt(\"factions.map-height\", FactionMap.MAP_HEIGHT)\n\n        config.getConfigurationSection(\"zones\")?.getKeys(false)?.let {\n            it.forEach { zone ->\n                val section = config.getConfigurationSection(\"zones.$zone\")\n                if (section == null) {\n                    logger.warning(\"Invalid formatted zone $zone found in config\")\n                    return@forEach\n                }\n                ZoneHandler.createZone(this, zone, section)\n            }\n        }\n\n        ZoneHandler.defaultZoneCheck(this)\n        moduleManager.reloadModuleConfigs()\n    }\n\n    private fun registerCommands() {\n        FactionCommandExecutor(this)\n    }\n\n    fun registerListeners(vararg listeners: Listener) {\n        listeners.forEach { server.pluginManager.registerEvents(it, this) }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/ImprovedFactionsPlugin.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/ImprovedFactionsPlugin.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/ImprovedFactionsPlugin.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/ImprovedFactionsPlugin.kt	(date 1732730693692)
@@ -3,10 +3,9 @@
 import com.jeff_media.updatechecker.UpdateCheckSource
 import com.jeff_media.updatechecker.UpdateChecker
 import com.jeff_media.updatechecker.UserAgentBuilder
-import io.github.toberocat.improvedfactions.claims.FactionClaims
 import io.github.toberocat.improvedfactions.claims.clustering.detector.ClaimClusterDetector
 import io.github.toberocat.improvedfactions.claims.clustering.query.DatabaseClaimQueryProvider
-import io.github.toberocat.improvedfactions.commands.FactionCommandExecutor
+import io.github.toberocat.improvedfactions.commands.executor.FactionCommandExecutor
 import io.github.toberocat.improvedfactions.commands.claim.FactionMap
 import io.github.toberocat.improvedfactions.config.ImprovedFactionsConfig
 import io.github.toberocat.improvedfactions.database.DatabaseConnector
@@ -27,7 +26,6 @@
 import io.github.toberocat.improvedfactions.zone.ZoneHandler
 import me.clip.placeholderapi.PlaceholderAPI
 import net.kyori.adventure.platform.bukkit.BukkitAudiences
-import org.bukkit.Bukkit
 import org.bukkit.OfflinePlayer
 import org.bukkit.event.Listener
 import org.bukkit.plugin.java.JavaPlugin
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/WarCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.relations.commands\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.factions.Faction\nimport io.github.toberocat.improvedfactions.modules.relations.RelationsModule.declareWar\nimport io.github.toberocat.improvedfactions.modules.relations.RelationsModule.inviteToAlliance\nimport io.github.toberocat.improvedfactions.permissions.Permissions\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.improvedfactions.utils.options.addFactionNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"relations.command.war.description\",\n    module = \"relations\",\n    category = CommandCategory.RELATIONS_CATEGORY\n)\nclass WarCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"war\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n        options.addFactionNameOption(0)\n            .cmdOpt(InFactionOption(true))\n            .cmdOpt(FactionPermissionOption(Permissions.MANAGE_RELATION))\n            .cmdOpt(ArgLengthOption(1))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        FactionArgument()\n    )\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val arguments = parseArgs(player, args)\n        loggedTransaction {\n            val targetFaction = arguments.get<Faction>(0) ?: return@loggedTransaction false\n            val faction = player.factionUser().faction() ?: return@loggedTransaction false\n            faction.declareWar(targetFaction)\n            player.sendLocalized(\"relations.command.war.success\")\n        }\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/WarCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/WarCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/WarCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/WarCommand.kt	(date 1732727682566)
@@ -9,8 +9,8 @@
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
 import io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.improvedfactions.utils.options.addFactionNameOption
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/EnemiesCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.relations.commands\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.factions.FactionHandler\nimport io.github.toberocat.improvedfactions.modules.relations.RelationsModule.enemies\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.enemies.description\",\n    module = \"relations\",\n    category = CommandCategory.RELATIONS_CATEGORY\n)\nclass EnemiesCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"enemies\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n        options\n            .cmdOpt(InFactionOption(true))\n            .cmdOpt(ArgLengthOption(0))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf()\n\n    override fun handle(player: Player, args: Array<String>) = loggedTransaction {\n        val faction = player.factionUser().faction() ?: return@loggedTransaction false\n        player.sendLocalized(\"relations.command.enemies.header\")\n        val enemies = faction.enemies()\n        if (enemies.isEmpty()) {\n            player.sendLocalized(\"relations.command.enemies.no-enemies\")\n            return@loggedTransaction true\n        }\n        enemies.forEach {\n            player.sendLocalized(\n                \"relations.command.enemies.detail\", mapOf(\n                    \"name\" to (FactionHandler.getFaction(it)?.name ?: \"Unknown\")\n                )\n            )\n        }\n        return@loggedTransaction true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/EnemiesCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/EnemiesCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/EnemiesCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/EnemiesCommand.kt	(date 1732727682615)
@@ -6,8 +6,8 @@
 import io.github.toberocat.improvedfactions.modules.relations.RelationsModule.enemies
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/utils/command/CommandMeta.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/utils/command/CommandMeta.kt b/improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/CommandMeta.kt
rename from improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/utils/command/CommandMeta.kt
rename to improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/CommandMeta.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/utils/command/CommandMeta.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/CommandMeta.kt	(date 1732729031599)
@@ -1,6 +1,6 @@
-package io.github.toberocat.improvedfactions.utils.command
+package io.github.toberocat.improvedfactions.annotations
 
-import io.github.toberocat.improvedfactions.translation.LocalizationKey
+typealias LocalizationKey = String
 
 object CommandCategory {
     const val GENERAL_CATEGORY = "base.command.category.general"
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/KickCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.member\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.permissions.Permissions\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.FactionUser\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.FactionMemberArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.improvedfactions.utils.options.PlayerNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.kick.description\",\n    category = CommandCategory.MEMBER_CATEGORY\n)\nclass KickCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"kick\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n        options.cmdOpt(PlayerNameOption(0))\n            .cmdOpt(InFactionOption(true))\n            .cmdOpt(FactionPermissionOption(Permissions.KICK_PLAYER))\n            .cmdOpt(ArgLengthOption(1))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        FactionMemberArgument()\n    )\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        val target = parseArgs(player, args).get<FactionUser>(0) ?: return false\n        loggedTransaction {\n            target.faction()?.kick(target.uniqueId)\n        }\n        player.sendLocalized(\"base.command.kick.kicked\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/KickCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/KickCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/KickCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/KickCommand.kt	(date 1732727682463)
@@ -6,8 +6,8 @@
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.FactionUser
 import io.github.toberocat.improvedfactions.utils.arguments.entity.FactionMemberArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.improvedfactions.utils.options.PlayerNameOption
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/TransferOwnershipCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.member\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.permissions.Permissions\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.FactionUser\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.options.ConfirmArgOption\nimport io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption\nimport io.github.toberocat.improvedfactions.utils.options.PlayerNameOption\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.FactionMemberArgument\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.exceptions.CommandException\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.commands.transferowner.description\",\n    category = CommandCategory.MEMBER_CATEGORY\n)\nclass TransferOwnershipCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"transferowner\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n        options.cmdOpt(PlayerNameOption(0))\n            .cmdOpt(ConfirmArgOption(1))\n            .cmdOpt(InFactionOption(true))\n            .cmdOpt(FactionPermissionOption(Permissions.TRANSFER_OWNERSHIP))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        FactionMemberArgument()\n    )\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        val user = parseArgs(player, args).get<FactionUser>(0) ?: return false\n        loggedTransaction { player.factionUser().faction()?.transferOwnership(user.uniqueId) }\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/TransferOwnershipCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/TransferOwnershipCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/TransferOwnershipCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/TransferOwnershipCommand.kt	(date 1732727682460)
@@ -11,8 +11,8 @@
 import io.github.toberocat.improvedfactions.utils.options.PlayerNameOption
 import io.github.toberocat.improvedfactions.utils.arguments.entity.FactionMemberArgument
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
 import io.github.toberocat.toberocore.command.exceptions.CommandException
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/ReloadCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.admin\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.toberocore.command.SubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.command.CommandSender\nimport java.util.*\n\n@CommandMeta(\n    description = \"base.command.reload.description\",\n    category = CommandCategory.ADMIN_CATEGORY\n)\nclass ReloadCommand(private val plugin: ImprovedFactionsPlugin) : SubCommand(\"reload\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label)\n\n    override fun arguments(): Array<Argument<*>> = emptyArray()\n\n    override fun handleCommand(sender: CommandSender, args: Array<out String>): Boolean {\n        sender.sendMessage(\"Plugin reload scheduled...\")\n\n        plugin.reloadConfig()\n        plugin.loadConfig()\n        ResourceBundle.clearCache()\n\n        sender.sendMessage(\"Plugin has been reloaded\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/ReloadCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/ReloadCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/ReloadCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/ReloadCommand.kt	(date 1732727682587)
@@ -1,8 +1,8 @@
 package io.github.toberocat.improvedfactions.commands.admin
 
 import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.toberocore.command.SubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
 import io.github.toberocat.toberocore.command.options.Options
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneClaimCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.admin.zone\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.claims.squareClaimAction\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.utils.arguments.ClaimRadiusArgument\nimport io.github.toberocat.improvedfactions.utils.arguments.ZoneArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.ZoneExistOption\nimport io.github.toberocat.improvedfactions.zone.Zone\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.zone.claim.description\",\n    category = CommandCategory.ADMIN_CATEGORY\n)\nclass ZoneClaimCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"claim\") {\n    override fun options(): Options = Options.getFromConfig(plugin, \"claim\") { options, _ ->\n        options.cmdOpt(ZoneExistOption(0))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        ZoneArgument(),\n        ClaimRadiusArgument()\n    )\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        val parsedArgs = parseArgs(player, args)\n        val zone = parsedArgs.get<Zone>(0) ?: return false\n        val squareRadius = parsedArgs.get<Int>(1) ?: 0\n        val statistics = loggedTransaction {\n            squareClaimAction(\n                player.location.chunk,\n                squareRadius,\n                { zone.claim(it) },\n                { player.sendLocalized(it.message ?: \"base.command.zone.claim.error\") })\n        }\n\n        if (squareRadius > 0) {\n            player.sendLocalized(\n                \"base.command.zone.claimed-radius\", mapOf(\n                    \"radius\" to squareRadius.toString(),\n                    \"successful-claims\" to statistics.successfulClaims.toString(),\n                    \"total-claims\" to statistics.totalClaims.toString()\n\n                )\n            )\n        } else {\n            player.sendLocalized(\"base.command.zone.claimed\")\n        }\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneClaimCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneClaimCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneClaimCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneClaimCommand.kt	(date 1732727682602)
@@ -6,8 +6,8 @@
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.utils.arguments.ClaimRadiusArgument
 import io.github.toberocat.improvedfactions.utils.arguments.ZoneArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.ZoneExistOption
 import io.github.toberocat.improvedfactions.zone.Zone
 import io.github.toberocat.toberocore.command.PlayerSubCommand
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneUnclaimCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.admin.zone\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.claims.squareClaimAction\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.utils.arguments.ClaimRadiusArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.zone.ZoneHandler\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.zone.unclaim.description\",\n    category = CommandCategory.ADMIN_CATEGORY\n)\nclass ZoneUnclaimCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"unclaim\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label)\n\n    override fun arguments() = arrayOf(\n        ClaimRadiusArgument()\n    )\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        val squareRadius = parseArgs(player, args).get<Int>(0) ?: 0\n        val statistics = loggedTransaction {\n            squareClaimAction(\n                player.location.chunk,\n                squareRadius,\n                { ZoneHandler.unclaim(it) },\n                { player.sendLocalized(it.message ?: \"base.command.zone.claim.error\") })\n        }\n\n        if (squareRadius > 0) {\n            player.sendLocalized(\n                \"base.command.zone.unclaimed-radius\", mapOf(\n                    \"radius\" to squareRadius.toString(),\n                    \"successful-claims\" to statistics.successfulClaims.toString(),\n                    \"total-claims\" to statistics.totalClaims.toString()\n\n                )\n            )\n        } else {\n            player.sendLocalized(\"base.command.zone.unclaimed\")\n        }\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneUnclaimCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneUnclaimCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneUnclaimCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneUnclaimCommand.kt	(date 1732727682575)
@@ -5,8 +5,8 @@
 import io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.utils.arguments.ClaimRadiusArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.zone.ZoneHandler
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.options.Options
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/DefaultRankCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.rank\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.ranks.FactionRank\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.RankArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.improvedfactions.utils.options.RankNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.rank.default.description\",\n    category = CommandCategory.PERMISSION_CATEGORY\n)\nclass DefaultRankCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"joinas\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label)\n        .cmdOpt(InFactionOption(true))\n        .cmdOpt(RankNameOption(0))\n        .cmdOpt(ArgLengthOption(1))\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        RankArgument()\n    )\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        val rank = parseArgs(player, args).get<FactionRank>(0) ?: return false\n        loggedTransaction {\n           player.factionUser().faction()?.defaultRank = rank.id.value\n        }\n        player.sendLocalized(\"base.command.rank.default.set\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/DefaultRankCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/DefaultRankCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/DefaultRankCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/DefaultRankCommand.kt	(date 1732727682555)
@@ -6,8 +6,8 @@
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
 import io.github.toberocat.improvedfactions.utils.arguments.entity.RankArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.improvedfactions.utils.options.RankNameOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/utils/Extensions.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.utils\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.offline.KnownOfflinePlayer\nimport io.github.toberocat.improvedfactions.utils.offline.KnownOfflinePlayers\nimport io.github.toberocat.toberocore.command.SubCommand\nimport net.kyori.adventure.audience.Audience\nimport org.bukkit.Bukkit\nimport org.bukkit.OfflinePlayer\nimport org.bukkit.entity.Player\nimport org.jetbrains.exposed.sql.SqlExpressionBuilder.eq\nimport java.util.*\nimport java.nio.charset.StandardCharsets;\nimport kotlin.reflect.full.findAnnotations\n\ninline fun <T, R> T.compute(computeBlock: (T) -> R) = computeBlock(this)\n\nfun Player.toAudience(): Audience = ImprovedFactionsPlugin.instance.adventure.player(this)\n\nfun UUID.toOfflinePlayer(): OfflinePlayer = Bukkit.getOfflinePlayer(this)\n\nfun SubCommand.getMeta(): CommandMeta? = this::class.findAnnotations(CommandMeta::class).firstOrNull()\n\nfun String.hasOfflinePlayerByName() = loggedTransaction {\n    KnownOfflinePlayer.count(KnownOfflinePlayers.name eq this@hasOfflinePlayerByName) > 0\n}\n\nfun String.getOfflinePlayerByName() = loggedTransaction {\n    val knownPlayerUUID = KnownOfflinePlayer.find { KnownOfflinePlayers.name eq this@getOfflinePlayerByName }\n        .firstOrNull()?.id?.value;\n    return@loggedTransaction if (knownPlayerUUID?.let { Bukkit.getOfflinePlayer(it).name } != null) {\n        ImprovedFactionsPlugin.instance.logger.fine(\"[OfflinePlayers] KnownPlayerUUID found.\")\n        Bukkit.getOfflinePlayer(knownPlayerUUID);\n    } else { /* Fallback to Bukkit API if provided UUID is incorrect thus returning null. */\n        ImprovedFactionsPlugin.instance.logger.fine(\"[OfflinePlayers] KnownPlayerUUID null, fell back to Bukkit \" + knownPlayerUUID.toString())\n        Bukkit.getOfflinePlayers().find { it.name == this@getOfflinePlayerByName };\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/utils/Extensions.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/utils/Extensions.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/utils/Extensions.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/utils/Extensions.kt	(date 1732727682447)
@@ -2,7 +2,7 @@
 
 import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
 import io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.offline.KnownOfflinePlayer
 import io.github.toberocat.improvedfactions.utils.offline.KnownOfflinePlayers
 import io.github.toberocat.toberocore.command.SubCommand
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/AssignRankCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.rank\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.ranks.FactionRank\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.arguments.OfflinePlayerArgument\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.RankArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.improvedfactions.utils.options.PlayerNameOption\nimport io.github.toberocat.improvedfactions.utils.options.RankNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.OfflinePlayer\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.rank.assign.description\",\n    category = CommandCategory.PERMISSION_CATEGORY\n)\nclass AssignRankCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"assign\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label)\n        .cmdOpt(InFactionOption(true))\n        .cmdOpt(PlayerNameOption(0))\n        .cmdOpt(RankNameOption(1))\n        .cmdOpt(ArgLengthOption(2))\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        OfflinePlayerArgument(),\n        RankArgument()\n    )\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        val arguments = parseArgs(player, args)\n        val target = arguments.get<OfflinePlayer>(0) ?: return false\n        val rank = arguments.get<FactionRank>(1) ?: return false\n\n        loggedTransaction {\n            target.factionUser().assignedRank = rank.id.value\n        }\n        player.sendLocalized(\"base.command.rank.assign.assigned\", emptyMap())\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/AssignRankCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/AssignRankCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/AssignRankCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/AssignRankCommand.kt	(date 1732727682525)
@@ -7,8 +7,8 @@
 import io.github.toberocat.improvedfactions.user.factionUser
 import io.github.toberocat.improvedfactions.utils.arguments.OfflinePlayerArgument
 import io.github.toberocat.improvedfactions.utils.arguments.entity.RankArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.improvedfactions.utils.options.PlayerNameOption
 import io.github.toberocat.improvedfactions.utils.options.RankNameOption
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/ByPassCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.admin\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.managers.ByPassManager\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.utils.arguments.OptionalPlayerArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.PlayerNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    category = CommandCategory.ADMIN_CATEGORY,\n    description = \"base.commands.bypass.description\"\n)\nclass ByPassCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"bypass\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n        options.cmdOpt(PlayerNameOption(0))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        OptionalPlayerArgument()\n    )\n    override fun handle(executor: Player, args: Array<out String>): Boolean {\n        val target = parseArgs(executor, args).get<Player>(0) ?: return false\n        val targetId = target.uniqueId\n        when (ByPassManager.isBypassing(targetId)) {\n            true -> {\n                ByPassManager.removeBypass(targetId)\n                executor.sendLocalized(\"base.commands.bypass.remove-bypass\")\n            }\n            false -> {\n                ByPassManager.addBypass(targetId)\n                executor.sendLocalized(\"base.commands.bypass.add-bypass\")\n            }\n        }\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/ByPassCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/ByPassCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/ByPassCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/ByPassCommand.kt	(date 1732727544355)
@@ -4,8 +4,8 @@
 import io.github.toberocat.improvedfactions.managers.ByPassManager
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.utils.arguments.OptionalPlayerArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.PlayerNameOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceCommandRoute.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.admin.force\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.toberocore.command.CommandRoute\nimport org.bukkit.Bukkit\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.force.description\",\n    category = CommandCategory.ADMIN_CATEGORY\n)\nclass ForceCommandRoute(plugin: ImprovedFactionsPlugin) : CommandRoute(\"force\", plugin) {\n\n    init {\n        addChild(ForceJoinCommand(plugin))\n        addChild(ForceLeaveCommand(plugin))\n        addChild(ForceUnclaimCommand(plugin))\n        addChild(ForceLeaveCommand(plugin))\n        addChild(ForceInfoCommand(plugin))\n        addChild(ForceClaimCommand(plugin))\n    }\n\n    override fun handle(player: Player, p1: Array<out String>): Boolean {\n        Bukkit.dispatchCommand(player, \"factions help category:${CommandCategory.ADMIN_CATEGORY}\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceCommandRoute.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceCommandRoute.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceCommandRoute.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceCommandRoute.kt	(date 1732727682530)
@@ -1,8 +1,8 @@
 package io.github.toberocat.improvedfactions.commands.admin.force
 
 import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.toberocore.command.CommandRoute
 import org.bukkit.Bukkit
 import org.bukkit.entity.Player
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceInfoCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.admin.force\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.ranks.listRanks\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.arguments.OfflinePlayerArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.PlayerNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.OfflinePlayer\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.force.info.description\",\n    module = \"core\",\n    category = CommandCategory.ADMIN_CATEGORY\n)\nclass ForceInfoCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"info\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n        options.cmdOpt(PlayerNameOption(0))\n            .cmdOpt(ArgLengthOption(1))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        OfflinePlayerArgument()\n    )\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val arguments = parseArgs(player, args)\n        val target = arguments.get<OfflinePlayer>(0) ?: return false\n\n        player.sendLocalized(\n            \"base.command.force.info.header\", mapOf(\n                \"player\" to (target.name ?: \"Unknown\")\n            )\n        )\n\n        loggedTransaction {\n            player.showDetails(\n                \"Faction\",\n                target.factionUser().faction()?.name ?: \"No Faction\",\n                \"/f info ${target.factionUser().faction()?.name}\"\n            )\n            player.showDetails(\"Rank\", target.factionUser().rank().name, \"\")\n        }\n        return true\n    }\n\n    private fun Player.showDetails(key: String, value: String, cmd: String = \"\") {\n        sendLocalized(\n            \"base.command.force.info.detail\", mapOf(\n                \"key\" to key,\n                \"value\" to value\n            )\n        )\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceInfoCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceInfoCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceInfoCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceInfoCommand.kt	(date 1732727682437)
@@ -6,8 +6,8 @@
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
 import io.github.toberocat.improvedfactions.utils.arguments.OfflinePlayerArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.PlayerNameOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/ClaimCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.claim\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.claims.ClaimStatistics\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.exceptions.CantClaimThisChunkException\nimport io.github.toberocat.improvedfactions.exceptions.NotInFactionException\nimport io.github.toberocat.improvedfactions.permissions.Permissions\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.arguments.ClaimRadiusArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.claim.description\",\n    category = CommandCategory.CLAIM_CATEGORY\n)\nclass ClaimCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"claim\") {\n    override fun options(): Options = Options.getFromConfig(plugin, \"claim\") { options, _ ->\n        options.cmdOpt(InFactionOption(true))\n            .cmdOpt(FactionPermissionOption(Permissions.MANAGE_CLAIMS))\n    }\n\n    override fun arguments() = arrayOf(\n        ClaimRadiusArgument()\n    )\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val squareRadius = parseArgs(player, args).get<Int>(0) ?: 0\n\n        var statistics = ClaimStatistics(0, 0)\n        loggedTransaction {\n            val faction = player.factionUser().faction() ?: throw NotInFactionException()\n            statistics = faction.claimSquare(player.location.chunk, squareRadius) { e ->\n                if (squareRadius == 0) {\n                    throw e\n                }\n\n                if (e is CantClaimThisChunkException) {\n                    e.message?.let { player.sendLocalized(it, e.placeholders) }\n                }\n            }\n        }\n\n        if (squareRadius > 0) {\n            player.sendLocalized(\n                \"base.command.claim.claimed-radius\", mapOf(\n                    \"radius\" to squareRadius.toString(),\n                    \"successful-claims\" to statistics.successfulClaims.toString(),\n                    \"total-claims\" to statistics.totalClaims.toString()\n\n                )\n            )\n        } else {\n            player.sendLocalized(\"base.command.claim.claimed\")\n        }\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/ClaimCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/ClaimCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/ClaimCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/ClaimCommand.kt	(date 1732727682505)
@@ -9,8 +9,8 @@
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
 import io.github.toberocat.improvedfactions.utils.arguments.ClaimRadiusArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceClaimCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.admin.force\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.factions.Faction\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.addFactionNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.force.claim.description\",\n    module = \"core\",\n    category = CommandCategory.GENERAL_CATEGORY\n)\nclass ForceClaimCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"claim\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n        options\n            .addFactionNameOption(0)\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        FactionArgument()\n    )\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val parsedArgs = parseArgs(player, args)\n        val faction = parsedArgs.get<Faction>(0) ?: return false\n\n        loggedTransaction { faction.claim(player.location.chunk) }\n        player.sendLocalized(\"base.command.force.claim.claimed\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceClaimCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceClaimCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceClaimCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceClaimCommand.kt	(date 1732727682599)
@@ -5,8 +5,8 @@
 import io.github.toberocat.improvedfactions.factions.Faction
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.addFactionNameOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceLeaveCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.admin.force\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.arguments.OfflinePlayerArgument\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.PlayerNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.exceptions.CommandException\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.OfflinePlayer\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.force.leave.description\",\n    category = CommandCategory.ADMIN_CATEGORY\n)\nclass ForceLeaveCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"leave\") {\n    override fun options(): Options = Options.getFromConfig(plugin, \"force.leave\") { options, _ ->\n        options.cmdOpt(PlayerNameOption(0))\n            .cmdOpt(ArgLengthOption(1))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        OfflinePlayerArgument()\n    )\n\n    override fun handle(player: Player, args: Array<out String>?): Boolean {\n        val arguments = parseArgs(player, args)\n        val target = arguments.get<OfflinePlayer>(0) ?: return false\n\n        loggedTransaction {\n            val user = target.factionUser()\n            val faction = user.faction() ?: throw CommandException(\"base.command.force.leave.not-in-a-faction\", emptyMap())\n            runCatching {\n                faction.leave(target.uniqueId)\n            }.onFailure {\n                val nextBestOwner = faction.members()\n                    .sortedBy { it.rank().priority }\n                    .firstOrNull { it.uniqueId != target.uniqueId }\n                when (nextBestOwner) {\n                    null -> faction.delete()\n                    else -> faction.transferOwnership(nextBestOwner.uniqueId)\n                }\n            }\n\n            player.sendLocalized(\"base.command.force.leave.success\")\n        }\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceLeaveCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceLeaveCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceLeaveCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceLeaveCommand.kt	(date 1732727682522)
@@ -6,8 +6,8 @@
 import io.github.toberocat.improvedfactions.user.factionUser
 import io.github.toberocat.improvedfactions.utils.arguments.OfflinePlayerArgument
 import io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.PlayerNameOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneCommandRoute.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.admin.zone\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.toberocore.command.CommandRoute\nimport org.bukkit.Bukkit\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.zone.description\",\n    category = CommandCategory.ADMIN_CATEGORY\n)\nclass ZoneCommandRoute(plugin: ImprovedFactionsPlugin) : CommandRoute(\"zone\", plugin) {\n\n    init {\n        addChild(ZoneClaimCommand(plugin))\n        addChild(ZoneUnclaimCommand(plugin))\n    }\n\n    override fun handle(player: Player, p1: Array<out String>): Boolean {\n        Bukkit.dispatchCommand(player, \"factions help category:${CommandCategory.ADMIN_CATEGORY}\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneCommandRoute.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneCommandRoute.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneCommandRoute.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneCommandRoute.kt	(date 1732727682545)
@@ -1,8 +1,8 @@
 package io.github.toberocat.improvedfactions.commands.admin.zone
 
 import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.toberocore.command.CommandRoute
 import org.bukkit.Bukkit
 import org.bukkit.entity.Player
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceJoinCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.admin.force\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.factions.Faction\nimport io.github.toberocat.improvedfactions.ranks.listRanks\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.arguments.OfflinePlayerArgument\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.PlayerNameOption\nimport io.github.toberocat.improvedfactions.utils.options.addFactionNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.exceptions.CommandException\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.OfflinePlayer\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.force.join.description\",\n    category = CommandCategory.ADMIN_CATEGORY\n)\nclass ForceJoinCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"join\") {\n    override fun options(): Options = Options.getFromConfig(plugin, \"force.join\") { options, _ ->\n        options\n            .cmdOpt(PlayerNameOption(0))\n            .addFactionNameOption(1)\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        OfflinePlayerArgument(),\n        FactionArgument()\n    )\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val parsedArgs = parseArgs(player, args)\n        val faction = parsedArgs.get<Faction>(1) ?: return false\n        val playerToJoin = parsedArgs.get<OfflinePlayer>(0) ?: return false\n\n        loggedTransaction {\n            val user = player.factionUser()\n            if (user.factionId == faction.id.value) {\n                player.sendLocalized(\"base.command.force.join.already-member\")\n                return@loggedTransaction true\n            }\n\n            try {\n                if (user.isInFaction()) {\n                    user.faction()?.leave(player.uniqueId)\n                }\n\n                faction.join(playerToJoin.uniqueId, faction.listRanks().lastOrNull()?.id?.value ?: faction.defaultRank)\n                player.sendLocalized(\"base.command.force.join.success\")\n                playerToJoin.sendLocalized(\"base.command.force.join.player-joined\", mapOf(\"faction\" to faction.name))\n            } catch (e: CommandException) {\n                player.sendLocalized(\"base.command.force.join.error\", e.placeholders)\n                throw CommandException(e.message, e.placeholders)\n            }\n        }\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceJoinCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceJoinCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceJoinCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceJoinCommand.kt	(date 1732727682453)
@@ -8,8 +8,8 @@
 import io.github.toberocat.improvedfactions.user.factionUser
 import io.github.toberocat.improvedfactions.utils.arguments.OfflinePlayerArgument
 import io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.PlayerNameOption
 import io.github.toberocat.improvedfactions.utils.options.addFactionNameOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceUnclaimCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.admin.force\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.factions.Faction\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.addFactionNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.force.unclaim.description\",\n    category = CommandCategory.ADMIN_CATEGORY\n)\nclass ForceUnclaimCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"unclaim\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n        options\n            .addFactionNameOption(0)\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        FactionArgument()\n    )\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val parsedArgs = parseArgs(player, args)\n        val faction = parsedArgs.get<Faction>(0) ?: return false\n\n        loggedTransaction { faction.unclaim(player.location.chunk) }\n        player.sendLocalized(\"base.command.force.unclaim.unclaimed\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceUnclaimCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceUnclaimCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceUnclaimCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceUnclaimCommand.kt	(date 1732727682549)
@@ -5,8 +5,8 @@
 import io.github.toberocat.improvedfactions.factions.Faction
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.addFactionNameOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/ListInvitesCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.invite\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.factions.Faction\nimport io.github.toberocat.improvedfactions.invites.FactionInvite\nimport io.github.toberocat.improvedfactions.invites.FactionInvites\nimport io.github.toberocat.improvedfactions.invites.invites\nimport io.github.toberocat.improvedfactions.ranks.FactionRank\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\nconst val INVITES_COMMAND_DESCRIPTION = \"base.command.invites.description\"\nconst val INVITES_COMMAND_CATEGORY = CommandCategory.INVITE_CATEGORY\n\n@CommandMeta(\n    description = INVITES_COMMAND_DESCRIPTION,\n    category = INVITES_COMMAND_CATEGORY\n)\nopen class ListInvitesCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"invites\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label)\n\n    override fun arguments(): Array<Argument<*>> = emptyArray()\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val invited = player.factionUser()\n        player.sendLocalized(\"base.command.invites.header\")\n        loggedTransaction {\n            invited.invites().forEach { invite ->\n                val faction = Faction.findById(invite.factionId) ?: return@forEach\n                val rankId = FactionRank.findById(invite.rankId) ?: return@forEach\n                player.sendLocalized(\"base.command.invites.detail\", mapOf(\n                    \"faction\" to faction.name,\n                    \"rank\" to rankId.name,\n                    \"expires\" to invite.expiresInFormatted(),\n                    \"id\" to invite.id.value.toString()\n                ))\n            }\n        }\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/ListInvitesCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/ListInvitesCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/ListInvitesCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/ListInvitesCommand.kt	(date 1732727682470)
@@ -9,8 +9,8 @@
 import io.github.toberocat.improvedfactions.ranks.FactionRank
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
 import io.github.toberocat.toberocore.command.options.Options
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/arguments/primitives/StringArgumentParser.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/arguments/primitives/StringArgumentParser.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/arguments/primitives/StringArgumentParser.kt
new file mode 100644
--- /dev/null	(date 1732737157658)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/arguments/primitives/StringArgumentParser.kt	(date 1732737157658)
@@ -0,0 +1,7 @@
+package io.github.toberocat.improvedfactions.commands.arguments.primitives
+
+import io.github.toberocat.improvedfactions.commands.arguments.ArgumentParser
+
+class StringArgumentParser : ArgumentParser {
+    override fun parse(arg: String) = arg
+}
\ No newline at end of file
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteDiscardCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.invite\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.invites.FactionInvite\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.InviteIdArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.exceptions.CommandException\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.invitediscard.description\",\n    category = CommandCategory.INVITE_CATEGORY\n)\nclass InviteDiscardCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"invitediscard\") {\n    override fun options(): Options = Options.getFromConfig(plugin, \"invitediscard\") { options, _ ->\n        options.cmdOpt(ArgLengthOption(1))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        InviteIdArgument()\n    )\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        val inviteId = parseArgs(player, args).get<FactionInvite>(0) ?: return false\n        loggedTransaction {\n            val invite = FactionInvite.findById(inviteId.id) ?: throw CommandException(\n                \"base.command.invitediscard.invalid-invite\",\n                emptyMap()\n            )\n\n            invite.delete()\n        }\n\n        player.sendLocalized(\"base.command.invitediscard.deleted\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteDiscardCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteDiscardCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteDiscardCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteDiscardCommand.kt	(date 1732727682590)
@@ -5,8 +5,8 @@
 import io.github.toberocat.improvedfactions.invites.FactionInvite
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.utils.arguments.entity.InviteIdArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
 import io.github.toberocat.toberocore.command.exceptions.CommandException
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/arguments/ArgumentParsingException.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/arguments/ArgumentParsingException.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/arguments/ArgumentParsingException.kt
new file mode 100644
--- /dev/null	(date 1732737039353)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/arguments/ArgumentParsingException.kt	(date 1732737039353)
@@ -0,0 +1,3 @@
+package io.github.toberocat.improvedfactions.commands.arguments
+
+class ArgumentParsingException : Exception()
\ No newline at end of file
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/JoinTypeCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.manage\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.factions.FactionJoinType\nimport io.github.toberocat.improvedfactions.permissions.Permissions\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.arguments.EnumArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.joinMode.description\",\n    category = CommandCategory.MANAGE_CATEGORY\n)\nclass JoinTypeCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"joinMode\") {\n    override fun options() = Options.getFromConfig(plugin, label) { options, _ ->\n        options\n            .cmdOpt(InFactionOption(true))\n            .cmdOpt(FactionPermissionOption(Permissions.SET_JOIN_TYPE))\n    }\n\n    override fun arguments() = arrayOf(\n        EnumArgument(FactionJoinType::class.java, \"base.command.args.joinMode\")\n    )\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val joinType = parseArgs(player, args).get<FactionJoinType>(0) ?: return false\n        loggedTransaction {\n            val faction = player.factionUser().faction() ?: return@loggedTransaction false\n            faction.factionJoinType = joinType\n        }\n\n        player.sendLocalized(\"base.command.joinMode.changed\", mapOf(\"mode\" to joinType.name.lowercase()))\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/JoinTypeCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/JoinTypeCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/JoinTypeCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/JoinTypeCommand.kt	(date 1732727682457)
@@ -7,8 +7,8 @@
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
 import io.github.toberocat.improvedfactions.utils.arguments.EnumArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
Index: improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/command/CommandVisitor.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/command/CommandVisitor.kt b/improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/command/CommandVisitor.kt
new file mode 100644
--- /dev/null	(date 1732728845774)
+++ b/improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/command/CommandVisitor.kt	(date 1732728845774)
@@ -0,0 +1,41 @@
+package io.github.toberocat.improvedfactions.processors.command
+
+import com.google.devtools.ksp.processing.CodeGenerator
+import com.google.devtools.ksp.processing.KSPLogger
+import com.google.devtools.ksp.symbol.KSClassDeclaration
+import com.google.devtools.ksp.symbol.KSVisitorVoid
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
+
+class CommandVisitor(
+    private val codeGenerator: CodeGenerator,
+    private val logger: KSPLogger,
+) : KSVisitorVoid() {
+    val commandMetaDataList = mutableListOf<CommandMetaData>()
+
+    override fun visitClassDeclaration(classDeclaration: KSClassDeclaration, data: Unit) {
+        val annotation = classDeclaration.annotations.find {
+            it.shortName.getShortName() == CommandMeta::class.simpleName
+        }
+
+        if (annotation != null) {
+            val args = annotation.arguments.associate { it.name?.asString() to it.value?.toString() }
+            val qualifiedName = classDeclaration.simpleName.asString()
+            val permission = args["permission"] ?: "NoPermission"
+            val description = args["description"] ?: "NoDescription"
+            val category = args["category"] ?: "Uncategorized"
+            val module = args["module"] ?: "UnknownModule"
+
+            commandMetaDataList.add(
+                CommandMetaData(
+                    qualifiedName = qualifiedName,
+                    permission = permission,
+                    description = description,
+                    category = category,
+                    module = module
+                )
+            )
+        } else {
+            logger.warn("Class ${classDeclaration.simpleName.asString()} is missing @CommandMeta annotation.")
+        }
+    }
+}
\ No newline at end of file
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/RenameCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.manage\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.permissions.Permissions\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.arguments.FactionNameInputArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.*\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.exceptions.CommandException\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n\n@CommandMeta(\n    description = \"base.command.rename.description\",\n    category = CommandCategory.MANAGE_CATEGORY\n)\nclass RenameCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"rename\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n        options.cmdOpt(InFactionOption(true)).cmdOpt(IsFactionOwnerOption()).addFactionNameOption(0).cmdOpt(ArgLengthOption(1))\n            .cmdOpt(FactionExistOption(0, false))\n            .cmdOpt(FactionPermissionOption(Permissions.RENAME_FACTION))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        FactionNameInputArgument()\n    )\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        loggedTransaction {\n            val faction = player.factionUser().faction() ?: throw CommandException(\n                \"base.command.rename.faction-needed\", emptyMap()\n            )\n            faction.name = args[0]\n        }\n        player.sendLocalized(\"base.command.rename.renamed\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/RenameCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/RenameCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/RenameCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/RenameCommand.kt	(date 1732727682509)
@@ -6,8 +6,8 @@
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
 import io.github.toberocat.improvedfactions.utils.arguments.FactionNameInputArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.*
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/UnclaimCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.claim\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.claims.ClaimStatistics\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.exceptions.FactionDoesntHaveThisClaimException\nimport io.github.toberocat.improvedfactions.exceptions.NotInFactionException\nimport io.github.toberocat.improvedfactions.permissions.Permissions\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.arguments.ClaimRadiusArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.unclaim.description\",\n    category = CommandCategory.CLAIM_CATEGORY\n)\nclass UnclaimCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"unclaim\") {\n    override fun options(): Options = Options.getFromConfig(plugin, \"unclaim\") { options, _ ->\n        options.cmdOpt(InFactionOption(true))\n            .cmdOpt(FactionPermissionOption(Permissions.MANAGE_CLAIMS))\n    }\n\n    override fun arguments() = arrayOf(\n        ClaimRadiusArgument()\n    )\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val squareRadius = parseArgs(player, args).get<Int>(0) ?: 0\n\n        var statistics = ClaimStatistics(0, 0)\n        loggedTransaction {\n            val faction = player.factionUser().faction() ?: throw NotInFactionException()\n            statistics = faction.unclaimSquare(player.location.chunk, squareRadius) { e ->\n                if (squareRadius == 0) {\n                    throw e\n                }\n\n                if (e is FactionDoesntHaveThisClaimException) {\n                    e.message?.let { player.sendLocalized(it, e.placeholders) }\n                }\n            }\n        }\n\n        if (squareRadius > 0) {\n            player.sendLocalized(\"base.command.unclaim.unclaimed-radius\", mapOf(\n                \"radius\" to squareRadius.toString(),\n                \"successful-claims\" to statistics.successfulClaims.toString(),\n                \"total-claims\" to statistics.totalClaims.toString()\n\n            ))\n        } else {\n            player.sendLocalized(\"base.command.unclaim.unclaimed\")\n        }\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/UnclaimCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/UnclaimCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/UnclaimCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/UnclaimCommand.kt	(date 1732727682527)
@@ -9,8 +9,8 @@
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
 import io.github.toberocat.improvedfactions.utils.arguments.ClaimRadiusArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/FactionMap.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.claim\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.claims.FactionClaim\nimport io.github.toberocat.improvedfactions.claims.FactionClaims\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.translation.getLocalized\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.toAudience\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.Options\nimport net.kyori.adventure.text.Component\nimport net.kyori.adventure.text.event.HoverEvent\nimport net.kyori.adventure.text.format.NamedTextColor\nimport net.kyori.adventure.text.format.TextColor\nimport org.bukkit.entity.Player\nimport org.jetbrains.exposed.sql.and\n\n@CommandMeta(\n    category = CommandCategory.CLAIM_CATEGORY,\n    description = \"base.command.faction-map.description\"\n)\nclass FactionMap(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"map\") {\n    override fun options() = Options.getFromConfig(plugin, \"map\")\n\n    override fun arguments(): Array<Argument<*>> = emptyArray()\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val header = \".[ Faction Map ].\"\n        val padding = \"_\".repeat(MAP_WIDTH - header.length / 3 - 1)\n        val audience = player.toAudience()\n        audience.sendMessage(\n            Component.text()\n                .append(\n                    Component.text(padding)\n                        .color(NamedTextColor.DARK_GRAY)\n                )\n\n                .append(\n                    Component.text(header)\n                        .color(NamedTextColor.YELLOW)\n                )\n\n                .append(\n                    Component.text(padding)\n                        .color(NamedTextColor.DARK_GRAY)\n                )\n                .append(Component.newline())\n        )\n\n        val claims = getAffectedClaims(player)\n        loggedTransaction {\n            for (x in -MAP_HEIGHT..MAP_HEIGHT) {\n                val mapBuffer = Component.text()\n                for (z in -MAP_WIDTH..MAP_WIDTH) {\n                    val claim = claims[getCombined(player.location.chunk.x + x, player.location.chunk.z + z)]\n\n                    var component = Component.text(\"-\")\n                        .color(NamedTextColor.GRAY)\n                    when {\n                        claim == null || !claim.isClaimed() -> claim?.zone()?.let {\n                            if (it.type != \"default\") {\n                                component = component.content(\"/\")\n                            }\n                            component = component.color(TextColor.color(it.mapColor))\n                                .hoverEvent(HoverEvent.showText(player.getLocalized(it.noFactionTitle)))\n                        }\n\n                        claim.isClaimed() -> claim.faction()?.let {\n                            val color = TextColor.color(it.generateColor())\n                            component = component.color(color)\n                                .content(\"#\")\n                            var hoverComponent = Component.text(it.name)\n                                .color(color)\n                            if (claim.isRaidable() == true) {\n                                hoverComponent =\n                                    hoverComponent.append(Component.text(\" (Raidable)\").color(NamedTextColor.RED))\n                            }\n\n                            component = component.hoverEvent(hoverComponent)\n                        }\n                    }\n\n                    if (x == 0 && z == 0) {\n                        component = component.color(NamedTextColor.YELLOW)\n                            .content(\"+\")\n                            .hoverEvent(\n                                HoverEvent.showText(\n                                    Component.text(\"You\")\n                                        .color(NamedTextColor.YELLOW)\n                                )\n                            )\n                    }\n\n                    mapBuffer.append(component)\n                }\n                audience.sendMessage(mapBuffer)\n            }\n        }\n\n        return true\n    }\n\n    private fun getAffectedClaims(player: Player): Map<Long, FactionClaim> {\n        val lowerZ = player.location.chunk.z - MAP_WIDTH\n        val upperZ = player.location.chunk.z + MAP_WIDTH\n        val lowerX = player.location.chunk.x - MAP_HEIGHT\n        val upperX = player.location.chunk.x + MAP_HEIGHT\n        return loggedTransaction {\n            FactionClaim.find { FactionClaims.chunkZ greaterEq lowerZ and (FactionClaims.chunkZ lessEq upperZ) and (FactionClaims.chunkX greaterEq lowerX) and (FactionClaims.chunkX lessEq upperX) }\n                .associateBy { getCombined(it.chunkX, it.chunkZ) }\n        }\n    }\n\n    private fun getCombined(x: Int, z: Int) = x.toLong() shl 32 or (z.toLong() and 0xFFFFFFFFL)\n\n    companion object {\n        var MAP_WIDTH = 20\n        var MAP_HEIGHT = 10\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/FactionMap.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/FactionMap.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/FactionMap.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/FactionMap.kt	(date 1732727682610)
@@ -5,8 +5,8 @@
 import io.github.toberocat.improvedfactions.claims.FactionClaims
 import io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction
 import io.github.toberocat.improvedfactions.translation.getLocalized
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.toAudience
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteAcceptCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.invite\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.factions.Faction\nimport io.github.toberocat.improvedfactions.invites.FactionInvite\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.InviteIdArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.exceptions.CommandException\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.inviteaccept.description\",\n    category = CommandCategory.INVITE_CATEGORY\n)\nclass InviteAcceptCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"inviteaccept\") {\n    override fun options(): Options = Options.getFromConfig(plugin, \"inviteaccept\") { options, _ ->\n        options.cmdOpt(InFactionOption(false))\n            .cmdOpt(ArgLengthOption(1))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        InviteIdArgument()\n    )\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        val invite = parseArgs(player, args).get<FactionInvite>(0) ?: return false\n        loggedTransaction {\n            val faction = Faction.findById(invite.factionId)\n                ?: throw CommandException(\"base.command.inviteaccept.faction-deleted\", emptyMap())\n            invite.delete()\n            faction.join(player.uniqueId, invite.rankId)\n        }\n\n        player.sendLocalized(\"base.command.inviteaccept.joined\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteAcceptCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteAcceptCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteAcceptCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteAcceptCommand.kt	(date 1732727682560)
@@ -6,8 +6,8 @@
 import io.github.toberocat.improvedfactions.invites.FactionInvite
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.utils.arguments.entity.InviteIdArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.invite\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.permissions.Permissions\nimport io.github.toberocat.improvedfactions.ranks.FactionRank\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.arguments.OfflinePlayerArgument\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.RankArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.*\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.exceptions.CommandException\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.OfflinePlayer\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.invite.description\",\n    category = CommandCategory.INVITE_CATEGORY\n)\nclass InviteCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"invite\") {\n    override fun options(): Options = Options.getFromConfig(plugin, \"invite\") { options, _ ->\n        options.cmdOpt(InFactionOption(true))\n            .cmdOpt(PlayerNameOption(0))\n            .cmdOpt(RankNameOption(1))\n            .cmdOpt(CanManageRankOption(1))\n            .cmdOpt(ArgLengthOption(2))\n            .cmdOpt(FactionPermissionOption(Permissions.SEND_INVITES))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        OfflinePlayerArgument(),\n        RankArgument()\n    )\n\n    override fun handle(inviter: Player, args: Array<out String>): Boolean {\n        val arguments = parseArgs(inviter, args)\n        val invited = arguments.get<OfflinePlayer>(0) ?: return false\n        val rank = arguments.get<FactionRank>(1) ?: return false\n\n        val faction = loggedTransaction {\n            val faction = inviter.factionUser().faction() ?: throw CommandException(\n                \"base.command.invite.player-no-faction\", emptyMap()\n            )\n\n            faction.invite(inviter.uniqueId, invited.uniqueId, rank.id.value)\n            return@loggedTransaction faction\n        }\n        inviter.sendLocalized(\n            \"base.command.invite.invited-player\", mapOf(\n                \"player\" to (invited.name ?: \"unknown\")\n            )\n        )\n        invited.sendLocalized(\n            \"base.command.invite.you-have-been-invited\", mapOf(\n                \"faction\" to faction.name,\n                \"inviter\" to inviter.displayName,\n                \"rank\" to rank.name\n            )\n        )\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteCommand.kt	(date 1732727682624)
@@ -8,8 +8,8 @@
 import io.github.toberocat.improvedfactions.user.factionUser
 import io.github.toberocat.improvedfactions.utils.arguments.OfflinePlayerArgument
 import io.github.toberocat.improvedfactions.utils.arguments.entity.RankArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.*
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/LeaveCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.member\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.exceptions.CommandException\nimport io.github.toberocat.toberocore.command.options.ConfirmOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.leave.description\",\n    category = CommandCategory.MANAGE_CATEGORY\n)\nclass LeaveCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"leave\") {\n    override fun options(): Options = Options.getFromConfig(plugin, \"leave\") { options, _ ->\n        options.cmdOpt(ConfirmOption()).cmdOpt(InFactionOption(true))\n    }\n\n    override fun arguments(): Array<Argument<*>> = emptyArray()\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        loggedTransaction {\n            val faction = player.factionUser().faction()\n                ?: throw CommandException(\"base.command.leave.faction-deleted\", emptyMap())\n            faction.leave(player.uniqueId)\n        }\n        player.sendLocalized(\"base.command.leave.left\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/LeaveCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/LeaveCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/LeaveCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/LeaveCommand.kt	(date 1732727682443)
@@ -4,8 +4,8 @@
 import io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/UnBanCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.member\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.factions.ban.FactionBan\nimport io.github.toberocat.improvedfactions.permissions.Permissions\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.FactionBannedArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.improvedfactions.utils.options.PlayerNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.unban.description\",\n    category = CommandCategory.MEMBER_CATEGORY\n)\nclass UnBanCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"unban\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n        options\n            .cmdOpt(InFactionOption(true))\n            .cmdOpt(PlayerNameOption(0))\n            .cmdOpt(FactionPermissionOption(Permissions.MANAGE_BANS))\n            .cmdOpt(ArgLengthOption(1))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        FactionBannedArgument()\n    )\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        val ban = parseArgs(player, args).get<FactionBan>(0) ?: return false\n        loggedTransaction { ban.delete() }\n        player.sendLocalized(\"base.command.unban.unbanned-target\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/UnBanCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/UnBanCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/UnBanCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/UnBanCommand.kt	(date 1732727682499)
@@ -6,8 +6,8 @@
 import io.github.toberocat.improvedfactions.permissions.Permissions
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.utils.arguments.entity.FactionBannedArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.improvedfactions.utils.options.PlayerNameOption
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/MembersCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.member\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.OfflinePlayer\nimport org.bukkit.entity.Player\nimport java.text.SimpleDateFormat\n\nconst val MEMBERS_COMMAND_DESCRIPTION = \"base.command.members.description\"\nconst val MEMBERS_COMMAND_CATEGORY = CommandCategory.MEMBER_CATEGORY\n\n@CommandMeta(\n    description = MEMBERS_COMMAND_DESCRIPTION,\n    category = MEMBERS_COMMAND_CATEGORY\n)\nopen class MembersCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"members\") {\n    private val dateFormat = SimpleDateFormat(\"dd/MM/yyyy\")\n\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n        options.cmdOpt(InFactionOption(true))\n            .cmdOpt(ArgLengthOption(0))\n    }\n\n    override fun arguments(): Array<Argument<*>> = emptyArray()\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        player.sendLocalized(\"base.command.members.header\")\n\n        loggedTransaction {\n            player.factionUser().faction()?.members()?.forEach {\n                val offlinePlayer = it.offlinePlayer()\n                player.sendLocalized(\n                    \"base.command.members.detail\", mapOf(\n                        \"name\" to (offlinePlayer.name ?: \"Unknown\"),\n                        \"lastSeen\" to getLastSeen(offlinePlayer),\n                        \"rank\" to it.rank().name\n                    )\n                )\n            }\n        }\n        return true\n    }\n\n    protected fun getLastSeen(member: OfflinePlayer) = when {\n        member.isOnline -> \"§aOnline\"\n        else -> \"§e${dateFormat.format(member.lastPlayed)}\"\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/MembersCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/MembersCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/MembersCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/MembersCommand.kt	(date 1732727682604)
@@ -4,8 +4,8 @@
 import io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/JoinCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.member\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.factions.Faction\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument\nimport io.github.toberocat.improvedfactions.utils.arguments.entity.JoinableFactionArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.FactionExistOption\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.improvedfactions.utils.options.addFactionNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n/**\n * Created: 05.08.2023\n * @author Tobias Madlberger (Tobias)\n */\n\n@CommandMeta(\n    description = \"base.command.join.description\",\n    category = CommandCategory.MEMBER_CATEGORY\n)\nclass JoinCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"join\") {\n    override fun options(): Options = Options.getFromConfig(plugin, \"join\") { options, _ ->\n        options.cmdOpt(InFactionOption(false))\n            .addFactionNameOption(0)\n            .cmdOpt(ArgLengthOption(1))\n            .cmdOpt(FactionExistOption(0, true))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        JoinableFactionArgument()\n    )\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        val faction = parseArgs(player, args).get<Faction>(0) ?: return false\n        loggedTransaction { faction.join(player.uniqueId, faction.defaultRank) }\n        player.sendLocalized(\"base.command.join.joined\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/JoinCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/JoinCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/JoinCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/JoinCommand.kt	(date 1732727682536)
@@ -6,8 +6,8 @@
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.utils.arguments.entity.FactionArgument
 import io.github.toberocat.improvedfactions.utils.arguments.entity.JoinableFactionArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.FactionExistOption
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.improvedfactions.utils.options.addFactionNameOption
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/CreateCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.manage\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.factions.Faction\nimport io.github.toberocat.improvedfactions.factions.FactionHandler\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.utils.arguments.FactionNameInputArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.FactionExistOption\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.improvedfactions.utils.options.addFactionNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport io.github.toberocat.toberocore.util.placeholder.PlaceholderBuilder\nimport org.bukkit.entity.Player\n\n/**\n * Created: 04.08.2023\n * @author Tobias Madlberger (Tobias)\n */\n\n@CommandMeta(\n    description = \"base.command.create.description\",\n    category = CommandCategory.MANAGE_CATEGORY\n)\nclass CreateCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"create\") {\n    override fun options(): Options = Options.getFromConfig(plugin, \"create\") { options, _ ->\n        options\n            .cmdOpt(InFactionOption(false))\n            .addFactionNameOption(0)\n            .cmdOpt(ArgLengthOption(1))\n            .cmdOpt(FactionExistOption(0, false))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        FactionNameInputArgument()\n    )\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        val name = parseArgs(player, args).get<String>(0) ?: return false\n        val faction: Faction = FactionHandler.createFaction(player.uniqueId, name)\n        player.sendLocalized(\n            \"base.commands.create.created-faction\", PlaceholderBuilder()\n                .placeholder(\"faction\", faction)\n                .placeholders\n        )\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/CreateCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/CreateCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/CreateCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/CreateCommand.kt	(date 1732727682569)
@@ -5,8 +5,8 @@
 import io.github.toberocat.improvedfactions.factions.FactionHandler
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.utils.arguments.FactionNameInputArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.FactionExistOption
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.improvedfactions.utils.options.addFactionNameOption
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/IconCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.manage\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.permissions.Permissions\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.improvedfactions.utils.options.IsFactionOwnerOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.exceptions.CommandException\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.Material\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.icon.description\",\n    category = CommandCategory.MANAGE_CATEGORY\n)\nclass IconCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"icon\") {\n    override fun options(): Options = Options.getFromConfig(plugin, \"icon\") { options, _ ->\n        options.cmdOpt(InFactionOption(true)).cmdOpt(IsFactionOwnerOption())\n            .cmdOpt(FactionPermissionOption(Permissions.SET_ICON))\n    }\n\n    override fun arguments(): Array<Argument<*>> = emptyArray()\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        val item = player.inventory.itemInMainHand.clone()\n        if (item.type == Material.AIR) throw CommandException(\"base.command.icon.invalid-icon\", emptyMap())\n\n        loggedTransaction {\n            val faction =\n                player.factionUser().faction() ?: throw CommandException(\"base.command.icon.faction-needed\", emptyMap())\n            faction.icon = item\n        }\n        player.sendLocalized(\"base.command.icon.set-icon\", emptyMap())\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/IconCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/IconCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/IconCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/IconCommand.kt	(date 1732727682552)
@@ -5,8 +5,8 @@
 import io.github.toberocat.improvedfactions.permissions.Permissions
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.improvedfactions.utils.options.IsFactionOwnerOption
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/BanCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.member\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.permissions.Permissions\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.arguments.OfflinePlayerArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.improvedfactions.utils.options.PlayerNameOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.exceptions.CommandException\nimport io.github.toberocat.toberocore.command.options.ArgLengthOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.OfflinePlayer\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"base.command.ban.description\",\n    category = CommandCategory.MEMBER_CATEGORY\n)\nclass BanCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"ban\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n        options\n            .cmdOpt(InFactionOption(true))\n            .cmdOpt(PlayerNameOption(0))\n            .cmdOpt(FactionPermissionOption(Permissions.MANAGE_BANS))\n            .cmdOpt(ArgLengthOption(1))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        OfflinePlayerArgument()\n    )\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        val target = parseArgs(player, args).get<OfflinePlayer>(0) ?: return false\n        if (target == player)\n            throw CommandException(\"base.command.ban.cant-ban-yourself\", emptyMap())\n        loggedTransaction {\n            player.factionUser().faction()?.ban(target.factionUser())\n        }\n\n        player.sendLocalized(\"base.command.ban.banned-target\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/BanCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/BanCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/BanCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/BanCommand.kt	(date 1732727682607)
@@ -6,8 +6,8 @@
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
 import io.github.toberocat.improvedfactions.utils.arguments.OfflinePlayerArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.improvedfactions.utils.options.PlayerNameOption
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/DeleteCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.commands.manage\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.improvedfactions.utils.options.IsFactionOwnerOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.ConfirmOption\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n/**\n * Created: 05.08.2023\n * @author Tobias Madlberger (Tobias)\n */\n\n@CommandMeta(\n    description = \"base.command.delete.description\",\n    category = CommandCategory.MANAGE_CATEGORY\n)\nclass DeleteCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"delete\") {\n    override fun options(): Options = Options.getFromConfig(plugin, \"delete\") { options, _ ->\n        options.cmdOpt(ConfirmOption()).cmdOpt(InFactionOption(true)).cmdOpt(IsFactionOwnerOption())\n    }\n\n    override fun arguments(): Array<Argument<*>> = emptyArray()\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        loggedTransaction {\n            player.factionUser().faction()?.delete()\n        }\n\n        player.sendLocalized(\"base.command.delete.deleted\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/DeleteCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/DeleteCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/DeleteCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/DeleteCommand.kt	(date 1732727682618)
@@ -4,8 +4,8 @@
 import io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.improvedfactions.utils.options.IsFactionOwnerOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
Index: .idea/runConfigurations/Build_Plugin.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"ProjectRunConfigurationManager\">\n  <configuration default=\"false\" name=\"Build Plugin\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\">\n    <ExternalSystemSettings>\n      <option name=\"executionName\" />\n      <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$/improved-factions\" />\n      <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n      <option name=\"scriptParameters\" value=\"\" />\n      <option name=\"taskDescriptions\">\n        <list />\n      </option>\n      <option name=\"taskNames\">\n        <list>\n          <option value=\"build\" />\n        </list>\n      </option>\n      <option name=\"vmOptions\" />\n    </ExternalSystemSettings>\n    <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>\n    <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n    <DebugAllEnabled>false</DebugAllEnabled>\n    <RunAsTest>false</RunAsTest>\n    <method v=\"2\" />\n  </configuration>\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/runConfigurations/Build_Plugin.xml b/.idea/runConfigurations/Build_Plugin.xml
--- a/.idea/runConfigurations/Build_Plugin.xml	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/.idea/runConfigurations/Build_Plugin.xml	(date 1732733905108)
@@ -4,7 +4,7 @@
       <option name="executionName" />
       <option name="externalProjectPath" value="$PROJECT_DIR$/improved-factions" />
       <option name="externalSystemIdString" value="GRADLE" />
-      <option name="scriptParameters" value="" />
+      <option name="scriptParameters" value="--info" />
       <option name="taskDescriptions">
         <list />
       </option>
Index: improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/CommandProcessorProvider.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/CommandProcessorProvider.kt b/improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/CommandProcessorProvider.kt
new file mode 100644
--- /dev/null	(date 1732727208318)
+++ b/improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/CommandProcessorProvider.kt	(date 1732727208318)
@@ -0,0 +1,16 @@
+package io.github.toberocat.improvedfactions.processors
+
+import com.google.devtools.ksp.processing.SymbolProcessor
+import com.google.devtools.ksp.processing.SymbolProcessorEnvironment
+import com.google.devtools.ksp.processing.SymbolProcessorProvider
+import io.github.toberocat.improvedfactions.processors.command.CommandProcessor
+
+class CommandProcessorProvider : SymbolProcessorProvider {
+    override fun create(environment: SymbolProcessorEnvironment): SymbolProcessor {
+        return CommandProcessor(
+            codeGenerator = environment.codeGenerator,
+            logger = environment.logger,
+            options = environment.options
+        )
+    }
+}
Index: improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/command/CommandProcessor.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/command/CommandProcessor.kt b/improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/command/CommandProcessor.kt
new file mode 100644
--- /dev/null	(date 1732728759299)
+++ b/improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/command/CommandProcessor.kt	(date 1732728759299)
@@ -0,0 +1,79 @@
+package io.github.toberocat.improvedfactions.processors.command
+
+import com.google.devtools.ksp.processing.*
+import com.google.devtools.ksp.symbol.KSAnnotated
+import com.google.devtools.ksp.symbol.KSClassDeclaration
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
+import java.io.OutputStream
+
+class CommandProcessor(
+    private val codeGenerator: CodeGenerator,
+    private val logger: KSPLogger,
+    private val options: Map<String, String>,
+) : SymbolProcessor {
+    private val results = mutableMapOf<String, MutableList<CommandMetaData>>()
+
+    override fun process(resolver: Resolver): List<KSAnnotated> {
+        val symbols = resolver.getSymbolsWithAnnotation(CommandMeta::class.qualifiedName!!)
+
+        val annotatedDeclarations = symbols.filterIsInstance<KSClassDeclaration>()
+
+        val visitor = CommandVisitor(codeGenerator, logger)
+        annotatedDeclarations.forEach { it.accept(visitor, Unit) }
+
+        visitor.commandMetaDataList.forEach { meta ->
+            val categoryList = results.getOrPut(meta.category) { mutableListOf() }
+            categoryList.add(meta)
+        }
+
+        return emptyList()
+    }
+
+    override fun finish() {
+        generateWiki(results)
+    }
+
+    private fun generateWiki(commandsByCategory: Map<String, MutableList<CommandMetaData>>) {
+        commandsByCategory.forEach { (category, commands) ->
+            val fileName = "commands_${category.replace(" ", "_").lowercase()}.md"
+            val file: OutputStream = codeGenerator.createNewFile(
+                dependencies = Dependencies.ALL_FILES,
+                packageName = "wiki.commands",
+                fileName = fileName,
+                extensionName = "md"
+            )
+
+            file.bufferedWriter().use { writer ->
+                writer.write("# $category Commands\n\n")
+                commands.forEach { command ->
+                    writer.write("## ${command.qualifiedName}\n\n")
+                    writer.write("**Permission**: `${command.permission}`\n\n")
+                    writer.write("**Description**: ${command.description}\n\n")
+                    writer.write("**Module**: ${command.module}\n\n")
+                    // Add more details as needed
+                    writer.write("---\n\n")
+                }
+            }
+
+            logger.info("Generated wiki file: $fileName")
+        }
+
+        // Generate index file
+        val indexFile: OutputStream = codeGenerator.createNewFile(
+            dependencies = Dependencies.ALL_FILES,
+            packageName = "wiki.commands",
+            fileName = "README",
+            extensionName = "md"
+        )
+
+        indexFile.bufferedWriter().use { writer ->
+            writer.write("# Command Index\n\n")
+            commandsByCategory.keys.sorted().forEach { category ->
+                val fileName = "commands_${category.replace(" ", "_").lowercase()}.md"
+                writer.write("- [$category](commands/$fileName)\n")
+            }
+        }
+
+        logger.info("Generated command index README.md")
+    }
+}
\ No newline at end of file
Index: improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/processor/CommandProcessorProvider.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/processor/CommandProcessorProvider.kt b/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/processor/CommandProcessorProvider.kt
new file mode 100644
--- /dev/null	(date 1732735054221)
+++ b/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/processor/CommandProcessorProvider.kt	(date 1732735054221)
@@ -0,0 +1,11 @@
+package io.github.toberocat.improvedfactions.command.processor
+
+import com.google.devtools.ksp.processing.SymbolProcessor
+import com.google.devtools.ksp.processing.SymbolProcessorEnvironment
+import com.google.devtools.ksp.processing.SymbolProcessorProvider
+
+class CommandProcessorProvider : SymbolProcessorProvider {
+    override fun create(environment: SymbolProcessorEnvironment): SymbolProcessor {
+        return CommandProcessor(environment.codeGenerator, environment.logger, environment.options)
+    }
+}
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ASMSmaliIdeaPluginConfiguration\">\n    <asm skipDebug=\"true\" skipFrames=\"true\" skipCode=\"false\" expandFrames=\"false\" />\n    <groovy codeStyle=\"LEGACY\" />\n  </component>\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\n  <component name=\"FrameworkDetectionExcludesConfiguration\">\n    <file type=\"web\" url=\"file://$PROJECT_DIR$/improved-factions\" />\n  </component>\n  <component name=\"ProjectRootManager\">\n    <output url=\"file://$PROJECT_DIR$/out\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/.idea/misc.xml	(date 1732718092948)
@@ -8,7 +8,7 @@
   <component name="FrameworkDetectionExcludesConfiguration">
     <file type="web" url="file://$PROJECT_DIR$/improved-factions" />
   </component>
-  <component name="ProjectRootManager">
+  <component name="ProjectRootManager" version="2" project-jdk-name="17" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/processor/CommandProcessor.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/processor/CommandProcessor.kt b/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/processor/CommandProcessor.kt
new file mode 100644
--- /dev/null	(date 1732735076317)
+++ b/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/processor/CommandProcessor.kt	(date 1732735076317)
@@ -0,0 +1,28 @@
+package io.github.toberocat.improvedfactions.command.processor
+
+import com.google.devtools.ksp.processing.CodeGenerator
+import com.google.devtools.ksp.processing.KSPLogger
+import com.google.devtools.ksp.processing.Resolver
+import com.google.devtools.ksp.processing.SymbolProcessor
+import com.google.devtools.ksp.symbol.KSAnnotated
+import com.google.devtools.ksp.symbol.KSClassDeclaration
+import io.github.toberocat.improvedfactions.annotations.GeneratedCommandMeta
+import io.github.toberocat.improvedfactions.command.visitors.CommandVisitor
+
+class CommandProcessor(
+    private val codeGenerator: CodeGenerator,
+    private val logger: KSPLogger,
+    private val options: Map<String, String>,
+) : SymbolProcessor {
+
+    override fun process(resolver: Resolver): List<KSAnnotated> {
+        val symbols = resolver.getSymbolsWithAnnotation(GeneratedCommandMeta::class.qualifiedName!!)
+
+        val annotatedDeclarations = symbols.filterIsInstance<KSClassDeclaration>()
+
+        val visitor = CommandVisitor(codeGenerator, logger)
+        annotatedDeclarations.forEach { it.accept(visitor, Unit) }
+
+        return emptyList()
+    }
+}
\ No newline at end of file
Index: improved-factions/documentation-generation/src/main/resources/META-INF/services/com.google.devtools.ksp.processing.SymbolProcessorProvider
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/documentation-generation/src/main/resources/META-INF/services/com.google.devtools.ksp.processing.SymbolProcessorProvider b/improved-factions/documentation-generation/src/main/resources/META-INF/services/com.google.devtools.ksp.processing.SymbolProcessorProvider
new file mode 100644
--- /dev/null	(date 1732727208321)
+++ b/improved-factions/documentation-generation/src/main/resources/META-INF/services/com.google.devtools.ksp.processing.SymbolProcessorProvider	(date 1732727208321)
@@ -0,0 +1,1 @@
+io.github.toberocat.improvedfactions.processors.CommandProcessorProvider
\ No newline at end of file
Index: improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/command/CommandMetaData.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/command/CommandMetaData.kt b/improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/command/CommandMetaData.kt
new file mode 100644
--- /dev/null	(date 1732728519805)
+++ b/improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/command/CommandMetaData.kt	(date 1732728519805)
@@ -0,0 +1,9 @@
+package io.github.toberocat.improvedfactions.processors.command
+
+data class CommandMetaData(
+    val qualifiedName: String,
+    val permission: String,
+    val description: String,
+    val category: String,
+    val module: String
+)
\ No newline at end of file
Index: improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/GeneratedCommandMeta.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/GeneratedCommandMeta.kt b/improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/GeneratedCommandMeta.kt
new file mode 100644
--- /dev/null	(date 1732732072621)
+++ b/improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/GeneratedCommandMeta.kt	(date 1732732072621)
@@ -0,0 +1,11 @@
+package io.github.toberocat.improvedfactions.annotations
+
+
+@Target(AnnotationTarget.CLASS)
+annotation class GeneratedCommandMeta(
+    val label: String,
+    val description: LocalizationKey,
+    val responses: Array<CommandResponse>,
+    val category: LocalizationKey,
+    val module: String,
+)
\ No newline at end of file
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/TestCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/TestCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/TestCommand.kt
new file mode 100644
--- /dev/null	(date 1732738161352)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/TestCommand.kt	(date 1732738161352)
@@ -0,0 +1,28 @@
+package io.github.toberocat.improvedfactions.commands
+
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandResponse
+import io.github.toberocat.improvedfactions.annotations.GeneratedCommandMeta
+import io.github.toberocat.improvedfactions.ranks.FactionRank
+import org.bukkit.OfflinePlayer
+import org.bukkit.entity.Player
+
+@GeneratedCommandMeta(
+    label = "invite",
+    description = "This is a test command.",
+    category = CommandCategory.MEMBER_CATEGORY,
+    module = "core",
+    responses = [
+        CommandResponse("playerInvited"),
+        CommandResponse("missingRequiredArgument"),
+    ]
+)
+open class TestCommand : TestCommandContext() {
+    fun process(sender: Player, invitedPlayer: OfflinePlayer, rank: FactionRank?): CommandProcessResult {
+        if (rank == null) {
+            return missingRequiredArgument()
+        }
+
+        return playerInvited()
+    }
+}
\ No newline at end of file
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/translation/Translation.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.translation\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.utils.toAudience\nimport net.kyori.adventure.text.Component\nimport net.kyori.adventure.text.minimessage.MiniMessage\nimport net.kyori.adventure.text.serializer.ComponentSerializer\nimport net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer\nimport org.bukkit.OfflinePlayer\nimport org.bukkit.entity.Player\nimport java.util.*\n\n\n/**\n * Created: 04.08.2023\n * @author Tobias Madlberger (Tobias)\n */\ntypealias LocalizationKey = String\n\nfun OfflinePlayer.sendLocalized(key: String, placeholders: Map<String, String> = emptyMap()) {\n    player?.sendLocalized(key, placeholders)\n    // ToDo: Make sure players can catch up on messages when they log in\n}\n\nfun Player.sendLocalized(key: String, placeholders: Map<String, String> = emptyMap()) =\n    toAudience().sendMessage(getLocalized(key, placeholders))\n\nfun Player.getLocalized(key: String, placeholders: Map<String, String> = emptyMap()) =\n    getLocaleEnum().localize(key, placeholders)\n\nfun Player.getLocaleEnum(): Locale {\n    val localeParts = locale.split(\"_\")\n    val locale = when (localeParts.size) {\n        1 -> Locale(localeParts[0])\n        2 -> Locale(localeParts[0], localeParts[1])\n        3 -> Locale(localeParts[0], localeParts[1], localeParts[2])\n        else -> Locale.ENGLISH\n    }\n    return locale\n}\n\nfun Player.getUnformattedLocalized(key: String, placeholders: Map<String, String> = emptyMap()) =\n    getLocaleEnum().localizeUnformatted(key, placeholders)\n\nfun Locale.localize(key: LocalizationKey, placeholders: Map<String, String>): Component =\n    MiniMessage.miniMessage().deserialize(localizeUnformatted(key, placeholders))\n\nfun Locale.localizeUnformatted(key: LocalizationKey, placeholders: Map<String, String>): String {\n    val bundle = getBundle()\n    if (!bundle.containsKey(key)) {\n        ImprovedFactionsPlugin.instance.logger.warning(\"Missing $key in the language file for $this\")\n        return key\n    }\n    val localizedString = bundle.getString(key)\n    val mutablePlaceholders = placeholders.toMutableMap()\n    if (bundle.containsKey(\"base.prefix\")) mutablePlaceholders[\"prefix\"] = bundle.getString(\"base.prefix\")\n\n    fun replacePlaceholders(str: String, placeholders: Map<String, String>): String {\n        var result = str\n        var changed = false\n\n        for ((placeholder, value) in placeholders) {\n            val placeholderPattern = Regex(\"\\\\{\\\\s*${Regex.escape(placeholder)}\\\\s*\\\\}\")\n            val replaced = result.replace(\n                placeholderPattern, MiniMessage.miniMessage().serialize(\n                    LegacyComponentSerializer\n                        .legacyAmpersand()\n                        .deserialize(\n                            value.replace(\n                                LegacyComponentSerializer.SECTION_CHAR.toString(),\n                                LegacyComponentSerializer.AMPERSAND_CHAR.toString()\n                            )\n                        )\n                )\n            )\n            if (replaced == result) continue\n            result = replaced\n            changed = true\n        }\n\n        return if (changed) replacePlaceholders(result, placeholders) else result\n    }\n    return replacePlaceholders(localizedString, mutablePlaceholders)\n}\n\nfun Locale.getBundle(): ResourceBundle = ResourceBundle.getBundle(\n    \"languages.messages\", this, ExternalResourceBundleLoader(ImprovedFactionsPlugin.instance.dataFolder.absolutePath)\n)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/translation/Translation.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/translation/Translation.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/translation/Translation.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/translation/Translation.kt	(date 1732738074634)
@@ -2,12 +2,15 @@
 
 import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
 import io.github.toberocat.improvedfactions.utils.toAudience
+import net.kyori.adventure.audience.Audience.toAudience
 import net.kyori.adventure.text.Component
 import net.kyori.adventure.text.minimessage.MiniMessage
 import net.kyori.adventure.text.serializer.ComponentSerializer
 import net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer
 import org.bukkit.OfflinePlayer
+import org.bukkit.command.CommandSender
 import org.bukkit.entity.Player
+import sun.security.util.LocalizedMessage.getLocalized
 import java.util.*
 
 
@@ -17,6 +20,13 @@
  */
 typealias LocalizationKey = String
 
+fun CommandSender.sendLocalized(key: String, placeholders: Map<String, String> = emptyMap()) {
+    when (this) {
+        is Player -> sendLocalized(key, placeholders)
+        else -> sendMessage(Locale.ENGLISH.localizeUnformatted(key, placeholders))
+    }
+}
+
 fun OfflinePlayer.sendLocalized(key: String, placeholders: Map<String, String> = emptyMap()) {
     player?.sendLocalized(key, placeholders)
     // ToDo: Make sure players can catch up on messages when they log in
Index: improved-factions/code-generation/src/main/resources/META-INF/services/com.google.devtools.ksp.processing.SymbolProcessorProvider
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/code-generation/src/main/resources/META-INF/services/com.google.devtools.ksp.processing.SymbolProcessorProvider b/improved-factions/code-generation/src/main/resources/META-INF/services/com.google.devtools.ksp.processing.SymbolProcessorProvider
new file mode 100644
--- /dev/null	(date 1732735054212)
+++ b/improved-factions/code-generation/src/main/resources/META-INF/services/com.google.devtools.ksp.processing.SymbolProcessorProvider	(date 1732735054212)
@@ -0,0 +1,1 @@
+io.github.toberocat.improvedfactions.command.processor.CommandProcessorProvider
\ No newline at end of file
Index: improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/visitors/CommandVisitor.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/visitors/CommandVisitor.kt b/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/visitors/CommandVisitor.kt
new file mode 100644
--- /dev/null	(date 1732737716309)
+++ b/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/visitors/CommandVisitor.kt	(date 1732737716309)
@@ -0,0 +1,103 @@
+package io.github.toberocat.improvedfactions.command.visitors
+
+import com.google.devtools.ksp.processing.CodeGenerator
+import com.google.devtools.ksp.processing.Dependencies
+import com.google.devtools.ksp.processing.KSPLogger
+import com.google.devtools.ksp.symbol.KSAnnotation
+import com.google.devtools.ksp.symbol.KSClassDeclaration
+import com.google.devtools.ksp.symbol.KSFunctionDeclaration
+import com.google.devtools.ksp.symbol.KSVisitorVoid
+import io.github.toberocat.improvedfactions.annotations.CommandResponse
+import io.github.toberocat.improvedfactions.annotations.GeneratedCommandMeta
+import io.github.toberocat.improvedfactions.command.data.CommandData
+import io.github.toberocat.improvedfactions.command.data.CommandProcessFunction
+import io.github.toberocat.improvedfactions.command.data.CommandProcessFunctionParameter
+import io.github.toberocat.improvedfactions.command.generator.CommandCodeGenerator
+import java.io.OutputStream
+
+const val COMMAND_PROCESS_PREFIX = "process"
+
+class CommandVisitor(
+    private val codeGenerator: CodeGenerator,
+    private val logger: KSPLogger,
+) : KSVisitorVoid() {
+
+    override fun visitClassDeclaration(classDeclaration: KSClassDeclaration, data: Unit) {
+        val commandAnnotations = findCommandAnnotations(classDeclaration)
+        val processFunctions = findProcessFunctions(classDeclaration)
+        val args = extractAnnotationArguments(commandAnnotations)
+
+        val commandData = CommandData(
+            targetPackage = classDeclaration.packageName.asString(),
+            targetName = classDeclaration.simpleName.asString(),
+            label = args["label"]?.toString() ?: "NoLabel",
+            module = args["module"]?.toString() ?: "NoModule",
+            responses = parseResponses((args["responses"] as? List<Any>) ?: emptyList()),
+            processFunctions = parseProcessFunctions(processFunctions),
+        )
+
+        logger.info(commandData.toString())
+        val outputStream = createFile(commandData)
+        CommandCodeGenerator(commandData).generateCode(outputStream)
+    }
+
+    private fun createFile(commandData: CommandData): OutputStream {
+        return codeGenerator.createNewFile(
+            dependencies = Dependencies.ALL_FILES,
+            packageName = commandData.targetPackage,
+            fileName = "${commandData.targetName}Generated",
+        )
+    }
+
+    private fun parseResponses(responses: List<Any>): List<CommandResponse> {
+        return responses.map { response ->
+            val responseArgs = extractAnnotationArguments(response as KSAnnotation)
+            CommandResponse(
+                key = responseArgs["key"] as String,
+                responseName = responseArgs["responseName"] as String,
+            )
+        }
+    }
+
+    private fun parseProcessFunctions(functions: List<KSFunctionDeclaration>) =
+        functions.mapNotNull { parseProcessFunction(it) }
+
+    private fun parseProcessFunction(function: KSFunctionDeclaration): CommandProcessFunction? {
+        if (!function.simpleName.asString().contains(COMMAND_PROCESS_PREFIX)) {
+            return null
+        }
+
+        val parameters = function.parameters.map {
+            val ksDeclaration = it.type.resolve()
+            CommandProcessFunctionParameter(
+                simpleName = ksDeclaration.declaration.simpleName.asString(),
+                type = ksDeclaration.declaration.qualifiedName?.asString() ?: "",
+                isRequired = !ksDeclaration.isMarkedNullable,
+                index = function.parameters.indexOf(it) - 1,
+            )
+        }
+        return CommandProcessFunction(
+            senderClass = parameters.first().type,
+            functionName = function.simpleName.asString(),
+            parameters = parameters.drop(1),
+        )
+    }
+
+    private fun extractAnnotationArguments(annotation: KSAnnotation): Map<String?, Any?> {
+        return annotation.arguments.associate { it.name?.asString() to it.value }
+    }
+
+    private fun findCommandAnnotations(classDeclaration: KSClassDeclaration): KSAnnotation {
+        val annotation = classDeclaration.annotations.find {
+            it.shortName.getShortName() == GeneratedCommandMeta::class.simpleName
+        }
+
+        if (annotation == null) {
+            throw IllegalArgumentException("Class ${classDeclaration.simpleName.asString()} is missing ${GeneratedCommandMeta::class.qualifiedName} annotation.")
+        }
+        return annotation
+    }
+
+    private fun findProcessFunctions(classDeclaration: KSClassDeclaration) =
+        classDeclaration.declarations.filterIsInstance<KSFunctionDeclaration>().toList()
+}
\ No newline at end of file
Index: .idea/modules/io.github.toberocat.improved-factions.ImprovedFactions.main.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module version=\"4\">\n  <component name=\"FacetManager\">\n    <facet type=\"minecraft\" name=\"Minecraft\">\n      <configuration>\n        <autoDetectTypes>\n          <platformType>SPIGOT</platformType>\n          <platformType>ADVENTURE</platformType>\n        </autoDetectTypes>\n        <projectReimportVersion>1</projectReimportVersion>\n      </configuration>\n    </facet>\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules/io.github.toberocat.improved-factions.ImprovedFactions.main.iml b/.idea/modules/io.github.toberocat.improved-factions.ImprovedFactions.main.iml
--- a/.idea/modules/io.github.toberocat.improved-factions.ImprovedFactions.main.iml	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/.idea/modules/io.github.toberocat.improved-factions.ImprovedFactions.main.iml	(date 1732725834313)
@@ -11,4 +11,8 @@
       </configuration>
     </facet>
   </component>
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
 </module>
\ No newline at end of file
Index: improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/generator/CommandCodeGenerator.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/generator/CommandCodeGenerator.kt b/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/generator/CommandCodeGenerator.kt
new file mode 100644
--- /dev/null	(date 1732738085908)
+++ b/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/generator/CommandCodeGenerator.kt	(date 1732738085908)
@@ -0,0 +1,100 @@
+package io.github.toberocat.improvedfactions.command.generator
+
+import io.github.toberocat.improvedfactions.annotations.CommandResponse
+import io.github.toberocat.improvedfactions.command.data.CommandData
+import io.github.toberocat.improvedfactions.command.data.CommandProcessFunction
+import io.github.toberocat.improvedfactions.utils.camlCaseToSnakeCase
+import java.io.BufferedWriter
+import java.io.OutputStream
+
+class CommandCodeGenerator(
+    private val commandData: CommandData
+) {
+    fun generateCode(outputStream: OutputStream) {
+        outputStream.bufferedWriter().use { writer ->
+            writer.write("""
+                package ${commandData.targetPackage}
+                
+                import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
+                import io.github.toberocat.improvedfactions.commands.executor.CommandExecutor
+                import org.bukkit.command.CommandSender
+                
+                open class ${commandData.targetName}Processor(
+                    protected val plugin: ImprovedFactionsPlugin,
+                    private val executor: CommandExecutor
+                ) : ${commandData.targetName}(), CommandProcessor {
+                    override val label = "${commandData.label}"
+                    
+                    override fun execute(sender: CommandSender, args: Array<String>): CommandProcessResult? {
+                         return when (sender) {
+                         ${functionCallCases()}
+                            else -> null
+                         }
+                    }
+                    
+            """.trimIndent())
+
+            commandData.processFunctions.forEach { function ->
+                writer.write(generateCallProcessFunction(function))
+            }
+
+            writer.write("}")
+
+            generateCommandContextClass(writer)
+        }
+    }
+
+    private fun generateCommandContextClass(writer: BufferedWriter) {
+        writer.write("""
+            
+            open class ${commandData.targetName}Context {
+        """.trimIndent())
+
+        commandData.responses.forEach { response ->
+            writer.write(generateResponseFunction(response))
+        }
+
+        writer.write("}")
+    }
+
+    private fun generateResponseFunction(response: CommandResponse): String {
+        val key = when(response.key.isBlank()) {
+            false -> response.key
+            true -> "${commandData.localizedCommandLabel}.${response.responseName.camlCaseToSnakeCase("-")}"
+        }
+
+        return """
+            protected fun ${response.responseName}(vararg args: Pair<String, String>): CommandProcessResult { 
+                return CommandProcessResult("$key", mapOf(*args))
+            }
+            
+        """.trimIndent()
+    }
+
+    private fun generateCallProcessFunction(function: CommandProcessFunction): String {
+        return """
+            
+            private fun ${function.functionName}Call(sender: ${function.senderClass}, args: Array<String>): CommandProcessResult? {
+                ${createParameterExtractors(function)}
+                return ${function.functionName}(sender, ${function.parameters.joinToString { it.simpleName }})
+            }
+            
+        """.trimIndent()
+    }
+
+    private fun createParameterExtractors(function: CommandProcessFunction): String {
+        return function.parameters.joinToString("\n") { parameter ->
+            """
+                val ${parameter.simpleName} = executor.getArgumentParser(${parameter.type}::class.java, args[${parameter.index}])
+            """.trimIndent()
+        }
+    }
+
+    private fun functionCallCases(): String {
+        return commandData.processFunctions.joinToString("\n") { function ->
+            """
+                is ${function.senderClass} -> return ${function.functionName}Call(sender, args)
+            """.trimIndent()
+        }
+    }
+}
\ No newline at end of file
Index: .idea/kotlinc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"KotlinJpsPluginSettings\">\n    <option name=\"version\" value=\"2.0.10\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/kotlinc.xml b/.idea/kotlinc.xml
--- a/.idea/kotlinc.xml	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/.idea/kotlinc.xml	(date 1732733925552)
@@ -1,6 +1,16 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="Kotlin2JsCompilerArguments">
+    <option name="moduleKind" value="plain" />
+  </component>
+  <component name="Kotlin2JvmCompilerArguments">
+    <option name="jvmTarget" value="1.8" />
+  </component>
+  <component name="KotlinCommonCompilerArguments">
+    <option name="apiVersion" value="1.9" />
+    <option name="languageVersion" value="1.9" />
+  </component>
   <component name="KotlinJpsPluginSettings">
-    <option name="version" value="2.0.10" />
+    <option name="version" value="2.0.21" />
   </component>
 </project>
\ No newline at end of file
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/CommandProcessor.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/CommandProcessor.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/CommandProcessor.kt
new file mode 100644
--- /dev/null	(date 1732738074631)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/CommandProcessor.kt	(date 1732738074631)
@@ -0,0 +1,9 @@
+package io.github.toberocat.improvedfactions.commands
+
+import org.bukkit.command.CommandSender
+
+interface CommandProcessor {
+    val label: String
+
+    fun execute(sender: CommandSender, args: Array<String>): CommandProcessResult?
+}
\ No newline at end of file
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.chat.commands\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.modules.chat.ChatMode\nimport io.github.toberocat.improvedfactions.modules.chat.ChatModule\nimport io.github.toberocat.improvedfactions.modules.chat.ChatModule.sendFactionChat\nimport io.github.toberocat.improvedfactions.modules.chat.ChatModule.toggleChatMode\nimport io.github.toberocat.improvedfactions.modules.chat.handles.ChatModuleHandle\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.utils.arguments.StringArgument\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = \"chat.commands.chat.description\",\n    module = ChatModule.MODULE_NAME\n)\nclass ChatCommand(\n    private val chatModuleHandle: ChatModuleHandle,\n    private val plugin: ImprovedFactionsPlugin\n) : PlayerSubCommand(\"chat\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n        options.cmdOpt(InFactionOption(true))\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf(\n        StringArgument(\"[message]\", \"chat.commands.arg.chat-message\")\n    )\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        if (args.isNotEmpty()) {\n            player.sendFactionChat(args.joinToString(\" \"))\n            return true\n        }\n\n        val nextMode = player.toggleChatMode()\n        player.sendLocalized(\"chat.commands.chat.toggled-${nextMode.name.lowercase()}\")\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatCommand.kt	(date 1732727682473)
@@ -8,7 +8,7 @@
 import io.github.toberocat.improvedfactions.modules.chat.handles.ChatModuleHandle
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.utils.arguments.StringArgument
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
Index: improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/data/CommandProcessFunction.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/data/CommandProcessFunction.kt b/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/data/CommandProcessFunction.kt
new file mode 100644
--- /dev/null	(date 1732737691171)
+++ b/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/data/CommandProcessFunction.kt	(date 1732737691171)
@@ -0,0 +1,14 @@
+package io.github.toberocat.improvedfactions.command.data
+
+data class CommandProcessFunction(
+    val senderClass: String,
+    val functionName: String,
+    val parameters: List<CommandProcessFunctionParameter>,
+)
+
+data class CommandProcessFunctionParameter(
+    val simpleName: String,
+    val type: String,
+    val index: Int,
+    val isRequired: Boolean,
+)
\ No newline at end of file
Index: improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/data/CommandData.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/data/CommandData.kt b/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/data/CommandData.kt
new file mode 100644
--- /dev/null	(date 1732735486468)
+++ b/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/data/CommandData.kt	(date 1732735486468)
@@ -0,0 +1,15 @@
+package io.github.toberocat.improvedfactions.command.data
+
+import io.github.toberocat.improvedfactions.annotations.CommandResponse
+import io.github.toberocat.improvedfactions.utils.camlCaseToSnakeCase
+
+data class CommandData(
+    val targetPackage: String,
+    val targetName: String,
+    val label: String,
+    val module: String,
+    val responses: List<CommandResponse>,
+    val processFunctions: List<CommandProcessFunction>
+) {
+    val localizedCommandLabel = "$module.${label.camlCaseToSnakeCase(".")}"
+}
\ No newline at end of file
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatSpyCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.chat.commands\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.modules.chat.handles.ChatModuleHandle\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\nimport java.util.*\n\n@CommandMeta(\n    description = \"chat.command.spy.description\",\n    module = \"chat\",\n    category = CommandCategory.GENERAL_CATEGORY\n)\nclass ChatSpyCommand(private val plugin: ImprovedFactionsPlugin,\n                     private val chatHandler: ChatModuleHandle) : PlayerSubCommand(\"spy\") {\n\n    override fun options(): Options = Options.getFromConfig(plugin, label) {options, _ ->\n    }\n\n    override fun arguments(): Array<Argument<*>> = arrayOf()\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        if (chatHandler.isSpying(player.uniqueId)) {\n            chatHandler.unspy(player.uniqueId)\n            player.sendLocalized(\"chat.command.spy.disabled\")\n        } else {\n            chatHandler.spy(player.uniqueId)\n            player.sendLocalized(\"chat.command.spy.enabled\")\n        }\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatSpyCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatSpyCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatSpyCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatSpyCommand.kt	(date 1732727682541)
@@ -3,8 +3,8 @@
 import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
 import io.github.toberocat.improvedfactions.modules.chat.handles.ChatModuleHandle
 import io.github.toberocat.improvedfactions.translation.sendLocalized
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.toberocore.command.PlayerSubCommand
 import io.github.toberocat.toberocore.command.arguments.Argument
 import io.github.toberocat.toberocore.command.options.Options
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/home/commands/HomeSetCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.home.commands\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.modules.home.HomeModule\nimport io.github.toberocat.improvedfactions.modules.home.HomeModule.setHome\nimport io.github.toberocat.improvedfactions.permissions.Permissions\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    category = CommandCategory.MANAGE_CATEGORY,\n    description = \"home.commands.sethome.description\",\n    module = HomeModule.MODULE_NAME\n)\nclass HomeSetCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"sethome\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n        options.cmdOpt(InFactionOption(true))\n            .cmdOpt(FactionPermissionOption(Permissions.SET_HOME))\n    }\n\n    override fun arguments() = emptyArray<Argument<*>>()\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        loggedTransaction { player.factionUser().faction()?.setHome(player.location) }\n            ?: player.sendLocalized(\"home.commands.sethome.failed\")\n        player.sendLocalized(\"home.commands.sethome.success\")\n        return true\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/home/commands/HomeSetCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/home/commands/HomeSetCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/home/commands/HomeSetCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/home/commands/HomeSetCommand.kt	(date 1732727682502)
@@ -7,8 +7,8 @@
 import io.github.toberocat.improvedfactions.permissions.Permissions
 import io.github.toberocat.improvedfactions.translation.sendLocalized
 import io.github.toberocat.improvedfactions.user.factionUser
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/home/commands/TeleportHomeCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.home.commands\n\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.modules.home.HomeModule\nimport io.github.toberocat.improvedfactions.modules.home.HomeModule.teleportToFactionHome\nimport io.github.toberocat.improvedfactions.permissions.Permissions\nimport io.github.toberocat.improvedfactions.translation.sendLocalized\nimport io.github.toberocat.improvedfactions.utils.command.CommandCategory\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption\nimport io.github.toberocat.improvedfactions.utils.options.InFactionOption\nimport io.github.toberocat.toberocore.command.PlayerSubCommand\nimport io.github.toberocat.toberocore.command.arguments.Argument\nimport io.github.toberocat.toberocore.command.options.Options\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    category = CommandCategory.GENERAL_CATEGORY,\n    description = \"home.commands.teleport-home.description\",\n    module = HomeModule.MODULE_NAME\n)\nclass TeleportHomeCommand(private val plugin: ImprovedFactionsPlugin) : PlayerSubCommand(\"home\") {\n    override fun options(): Options = Options.getFromConfig(plugin, label) { options, _ ->\n        options.cmdOpt(InFactionOption(true))\n            .cmdOpt(FactionPermissionOption(Permissions.HOME))\n    }\n\n    override fun arguments() = emptyArray<Argument<*>>()\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val success = player.teleportToFactionHome() ?: false\n        if (!success) {\n            player.sendLocalized(\"home.commands.teleport-home.failed\")\n        }\n\n        return true\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/home/commands/TeleportHomeCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/home/commands/TeleportHomeCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/home/commands/TeleportHomeCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/home/commands/TeleportHomeCommand.kt	(date 1732727682613)
@@ -5,8 +5,8 @@
 import io.github.toberocat.improvedfactions.modules.home.HomeModule.teleportToFactionHome
 import io.github.toberocat.improvedfactions.permissions.Permissions
 import io.github.toberocat.improvedfactions.translation.sendLocalized
-import io.github.toberocat.improvedfactions.utils.command.CommandCategory
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandCategory
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.options.FactionPermissionOption
 import io.github.toberocat.improvedfactions.utils.options.InFactionOption
 import io.github.toberocat.toberocore.command.PlayerSubCommand
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiMembersCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.gui.commands.core\n\nimport io.github.toberocat.guiengine.GuiEngineApi\nimport io.github.toberocat.guiengine.components.container.tab.PagedContainer\nimport io.github.toberocat.guiengine.components.provided.item.SimpleItemComponentBuilder\nimport io.github.toberocat.guiengine.function.GuiFunction\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.commands.member.MEMBERS_COMMAND_CATEGORY\nimport io.github.toberocat.improvedfactions.commands.member.MEMBERS_COMMAND_DESCRIPTION\nimport io.github.toberocat.improvedfactions.commands.member.MembersCommand\nimport io.github.toberocat.improvedfactions.database.DatabaseManager\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = MEMBERS_COMMAND_DESCRIPTION,\n    category = MEMBERS_COMMAND_CATEGORY\n)\nclass GuiMembersCommand(private val guiEngineApi: GuiEngineApi,\n                        plugin: ImprovedFactionsPlugin\n) : MembersCommand(plugin) {\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val context = guiEngineApi.openGui(player, \"member/member-overview-page\")\n        val container = context.findComponentByClass<PagedContainer>() ?: return false\n        DatabaseManager.loggedTransaction {\n            player.factionUser().faction()?.members()?.forEach {\n                val member = it.offlinePlayer()\n                container.addComponent(\n                    SimpleItemComponentBuilder()\n                        .setName(\"§e${member.name}\")\n                        .setLore(\n                            arrayOf(\n                                \"\",\n                                \"§7Status: ${getLastSeen(member)}\",\n                                \"§7Rank: §e${it.rank().name}\"\n                            )\n                        )\n                        .setOwner(it.uniqueId)\n                        .setClickFunctions(listOf(\n                            GuiFunction.anonymous {\n                                guiEngineApi.openGui(\n                                    player, \"member/member-detail-page\", mapOf(\n                                        \"member\" to (member.name ?: \"\")\n                                    )\n                                )\n                            }\n                        ))\n                        .createComponent()\n                )\n            }\n        }\n\n        context.render()\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiMembersCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiMembersCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiMembersCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiMembersCommand.kt	(date 1732727682596)
@@ -10,7 +10,7 @@
 import io.github.toberocat.improvedfactions.commands.member.MembersCommand
 import io.github.toberocat.improvedfactions.database.DatabaseManager
 import io.github.toberocat.improvedfactions.user.factionUser
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import org.bukkit.entity.Player
 
 @CommandMeta(
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiInfoCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.gui.commands.core\n\nimport io.github.toberocat.guiengine.GuiEngineApi\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.commands.INFO_COMMAND_DESCRIPTION\nimport io.github.toberocat.improvedfactions.commands.InfoCommand\nimport io.github.toberocat.improvedfactions.factions.Faction\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = INFO_COMMAND_DESCRIPTION\n)\nclass GuiInfoCommand(private val guiEngineApi: GuiEngineApi,\n                     plugin: ImprovedFactionsPlugin\n) : InfoCommand(plugin) {\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val faction = parseArgs(player, args).get<Faction>(0) ?: return false\n        guiEngineApi.openGui(\n            player, \"faction-detail-page\", mapOf(\n                \"faction\" to faction.name\n            )\n        )\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiInfoCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiInfoCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiInfoCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiInfoCommand.kt	(date 1732730686384)
@@ -2,10 +2,10 @@
 
 import io.github.toberocat.guiengine.GuiEngineApi
 import io.github.toberocat.improvedfactions.ImprovedFactionsPlugin
-import io.github.toberocat.improvedfactions.commands.INFO_COMMAND_DESCRIPTION
-import io.github.toberocat.improvedfactions.commands.InfoCommand
+import io.github.toberocat.improvedfactions.commands.general.INFO_COMMAND_DESCRIPTION
+import io.github.toberocat.improvedfactions.commands.general.InfoCommand
 import io.github.toberocat.improvedfactions.factions.Faction
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import org.bukkit.entity.Player
 
 @CommandMeta(
Index: improved-factions/gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\nkotlin-version = \"2.0.10\"\nspigot-version = \"1.18.1-R0.1-SNAPSHOT\"\nexposed-version = \"0.51.1\"\njackson-version = \"2.16.0\"\nkotlinx-datetime-version = \"0.6.0\"\ntoberocore-version = \"be356f9253\"\nsqlite-jdbc-version = \"3.46.0.0\"\nh2-version = \"2.2.220\"\nspigot-update-checker-version = \"3.0.3\"\nguiengine-version = \"6c00296e4c\"\nadventure-text-minimessages-version = \"4.17.0\"\nadventure-text-serializer-legacy-version = \"4.17.0\"\nkyori-adventure-platform-bukkit-version = \"4.3.3\"\nbase64-itemstack-version = \"1.0.0\"\nbstats-bukkit-version = \"3.0.2\"\nplaceholder-api-version = \"2.11.6\"\ndynmap-api-version = \"3.7-beta-6\"\nmockbukkit-version = \"3.80.0\"\nsnakeyaml-version = \"2.2\"\ngson-version = \"2.11.0\"\nlogback-classic-version = \"1.2.13\"\njunit-jupiter-params-version = \"5.11.0\"\n\n[libraries]\nkotlin-test-junit = { module = \"org.jetbrains.kotlin:kotlin-test-junit5\", version.ref = \"kotlin-version\" }\nkotlin-test = { module = \"org.jetbrains.kotlin:kotlin-test\", version.ref = \"kotlin-version\" }\nkotlin-stdlib = { module = \"org.jetbrains.kotlin:kotlin-stdlib\", version.ref = \"kotlin-version\" }\njunit-jupiter-params = { module = \"org.junit.jupiter:junit-jupiter-params\", version.ref = \"junit-jupiter-params-version\" }\nspigot-api = { module = \"org.spigotmc:spigot-api\", version.ref = \"spigot-version\" }\nexposed-core = { module = \"org.jetbrains.exposed:exposed-core\", version.ref = \"exposed-version\" }\nexposed-jdbc = { module = \"org.jetbrains.exposed:exposed-jdbc\", version.ref = \"exposed-version\" }\nexposed-dao = { module = \"org.jetbrains.exposed:exposed-dao\", version.ref = \"exposed-version\" }\nexposed-kotlin-datetime = { module = \"org.jetbrains.exposed:exposed-kotlin-datetime\", version.ref = \"exposed-version\" }\njackson-core = { module = \"com.fasterxml.jackson.core:jackson-core\", version.ref = \"jackson-version\" }\njackson-databind = { module = \"com.fasterxml.jackson.core:jackson-databind\", version.ref = \"jackson-version\" }\njackson-module-kotlin = { module = \"com.fasterxml.jackson.module:jackson-module-kotlin\", version.ref = \"jackson-version\" }\nkotlinx-datetime-jvm = { module = \"org.jetbrains.kotlinx:kotlinx-datetime-jvm\", version.ref = \"kotlinx-datetime-version\" }\ntoberocore = { module = \"com.github.ToberoCat:ToberoCore\", version.ref = \"toberocore-version\" }\nsqlite-jdbc = { module = \"org.xerial:sqlite-jdbc\", version.ref = \"sqlite-jdbc-version\" }\nh2 = { module = \"com.h2database:h2\", version.ref = \"h2-version\" }\nspigot-update-checker = { module = \"com.jeff_media:SpigotUpdateChecker\", version.ref = \"spigot-update-checker-version\" }\nguiengine = { module = \"com.github.ToberoCat:GuiEngine\", version.ref = \"guiengine-version\" }\nadventure-text-minimessage = { module = \"net.kyori:adventure-text-minimessage\", version.ref = \"adventure-text-minimessages-version\" }\nadventure-text-serializer-legacy = { module = \"net.kyori:adventure-text-serializer-legacy\", version.ref = \"adventure-text-serializer-legacy-version\" }\nkyori-adventure-platform-bukkit = { module = \"net.kyori:adventure-platform-bukkit\", version.ref = \"kyori-adventure-platform-bukkit-version\" }\nbase64-itemstack = { module = \"dev.s7a:base64-itemstack\", version.ref = \"base64-itemstack-version\" }\nbstats-bukkit = { module = \"org.bstats:bstats-bukkit\", version.ref = \"bstats-bukkit-version\" }\nplaceholderapi = { module = \"me.clip:placeholderapi\", version.ref = \"placeholder-api-version\" }\ndynmap-api = { module = \"us.dynmap:DynmapCoreAPI\", version.ref = \"dynmap-api-version\" }\nmockbukkit = { module = \"com.github.seeseemelk:MockBukkit-v1.20\", version.ref = \"mockbukkit-version\" }\nsnakeyaml = { module = \"org.yaml:snakeyaml\", version.ref = \"snakeyaml-version\" }\ngson = { module = \"com.google.code.gson:gson\", version.ref = \"gson-version\" }\nlogback-classic = { module = \"ch.qos.logback:logback-classic\", version.ref = \"logback-classic-version\" }\n[plugins]\nkotlin-jvm = { id = \"org.jetbrains.kotlin.jvm\", version.ref = \"kotlin-version\" }\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/gradle/libs.versions.toml b/improved-factions/gradle/libs.versions.toml
--- a/improved-factions/gradle/libs.versions.toml	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/gradle/libs.versions.toml	(date 1732718690154)
@@ -1,5 +1,6 @@
 [versions]
-kotlin-version = "2.0.10"
+kotlin-version = "2.0.21"
+ksp-version = "2.0.21-1.0.25"
 spigot-version = "1.18.1-R0.1-SNAPSHOT"
 exposed-version = "0.51.1"
 jackson-version = "2.16.0"
@@ -52,5 +53,7 @@
 snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeyaml-version" }
 gson = { module = "com.google.code.gson:gson", version.ref = "gson-version" }
 logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback-classic-version" }
+
 [plugins]
 kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin-version" }
+devtools-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp-version" }
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/power/GuiPowerCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.gui.commands.power\n\nimport io.github.toberocat.guiengine.GuiEngineApi\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.database.DatabaseManager.loggedTransaction\nimport io.github.toberocat.improvedfactions.modules.power.commands.POWER_COMMAND_CATEGORY\nimport io.github.toberocat.improvedfactions.modules.power.commands.POWER_COMMAND_DESCRIPTION\nimport io.github.toberocat.improvedfactions.modules.power.commands.POWER_COMMAND_MODULE\nimport io.github.toberocat.improvedfactions.modules.power.commands.PowerCommand\nimport io.github.toberocat.improvedfactions.modules.power.impl.FactionPowerRaidModuleHandleImpl\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.toberocore.command.exceptions.CommandException\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = POWER_COMMAND_DESCRIPTION,\n    category = POWER_COMMAND_CATEGORY,\n    module = POWER_COMMAND_MODULE\n)\nclass GuiPowerCommand(\n    private val guiEngineApi: GuiEngineApi,\n    plugin: ImprovedFactionsPlugin,\n    powerHandle: FactionPowerRaidModuleHandleImpl\n) :\n    PowerCommand(plugin, powerHandle) {\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        loggedTransaction {\n            val faction = player.factionUser().faction() ?: throw CommandException(\n                \"power.command.power.faction-needed\", emptyMap()\n            )\n            val activeAccumulation = powerHandle.getActivePowerAccumulation(faction)\n            val inactiveAccumulation = powerHandle.getInactivePowerAccumulation(faction)\n            val claimKeep = powerHandle.getClaimMaintenanceCost(faction)\n            guiEngineApi.openGui(\n                player, \"power/overview\", mapOf(\n                    \"power\" to faction.accumulatedPower.toString(),\n                    \"maxPower\" to faction.maxPower.toString(),\n                    \"currently-accumulated\" to stringify(\n                        powerHandle.getPowerAccumulated(\n                            activeAccumulation,\n                            inactiveAccumulation\n                        )\n                    ),\n                    \"active-accumulation\" to stringify(activeAccumulation),\n                    \"inactive-accumulation\" to stringify(inactiveAccumulation),\n                    \"claim-keep\" to stringify(claimKeep),\n                    \"next-claim-cost\" to powerHandle.getNextClaimCost(faction).toString()\n                )\n            )\n        }\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/power/GuiPowerCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/power/GuiPowerCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/power/GuiPowerCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/power/GuiPowerCommand.kt	(date 1732727682450)
@@ -9,7 +9,7 @@
 import io.github.toberocat.improvedfactions.modules.power.commands.PowerCommand
 import io.github.toberocat.improvedfactions.modules.power.impl.FactionPowerRaidModuleHandleImpl
 import io.github.toberocat.improvedfactions.user.factionUser
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.toberocore.command.exceptions.CommandException
 import org.bukkit.entity.Player
 
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiEditPermissionsCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.gui.commands.core\n\nimport io.github.toberocat.guiengine.GuiEngineApi\nimport io.github.toberocat.guiengine.components.container.tab.PagedContainer\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.commands.rank.EDIT_RANK_COMMAND_CATEGORY\nimport io.github.toberocat.improvedfactions.commands.rank.EDIT_RANK_COMMAND_DESCRIPTION\nimport io.github.toberocat.improvedfactions.commands.rank.EditPermissionsCommand\nimport io.github.toberocat.improvedfactions.database.DatabaseManager\nimport io.github.toberocat.improvedfactions.modules.gui.components.permission.FactionPermissionComponentBuilder\nimport io.github.toberocat.improvedfactions.ranks.FactionRank\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = EDIT_RANK_COMMAND_DESCRIPTION,\n    category = EDIT_RANK_COMMAND_CATEGORY\n)\nclass GuiEditPermissionsCommand(private val guiEngineApi: GuiEngineApi,\n                                plugin: ImprovedFactionsPlugin\n) : EditPermissionsCommand(plugin) {\n\n    override fun handle(player: Player, args: Array<out String>): Boolean {\n        val rank = parseArgs(player, args).get<FactionRank>(0) ?: return false\n        val context = guiEngineApi.openGui(\n            player, \"rank/rank-detail\", mapOf(\n                \"rank\" to rank.name\n            )\n        )\n        val container = context.findComponentByClass<PagedContainer>() ?: return false\n        DatabaseManager.loggedTransaction {\n            rank.permissions().forEach {\n                container.addComponent(\n                    FactionPermissionComponentBuilder()\n                        .setPermission(it)\n                        .createComponent()\n                )\n            }\n        }\n\n        context.render()\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiEditPermissionsCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiEditPermissionsCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiEditPermissionsCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiEditPermissionsCommand.kt	(date 1732727682563)
@@ -9,7 +9,7 @@
 import io.github.toberocat.improvedfactions.database.DatabaseManager
 import io.github.toberocat.improvedfactions.modules.gui.components.permission.FactionPermissionComponentBuilder
 import io.github.toberocat.improvedfactions.ranks.FactionRank
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import org.bukkit.entity.Player
 
 @CommandMeta(
Index: improved-factions/src/test/kotlin/io/github/toberocat/improvedfactions/integration/commands/invite/InviteCommandTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/test/kotlin/io/github/toberocat/improvedfactions/integration/commands/invite/InviteCommandTest.kt b/improved-factions/src/test/kotlin/io/github/toberocat/improvedfactions/integration/commands/invite/InviteCommandProcessorTest.kt
rename from improved-factions/src/test/kotlin/io/github/toberocat/improvedfactions/integration/commands/invite/InviteCommandTest.kt
rename to improved-factions/src/test/kotlin/io/github/toberocat/improvedfactions/integration/commands/invite/InviteCommandProcessorTest.kt
--- a/improved-factions/src/test/kotlin/io/github/toberocat/improvedfactions/integration/commands/invite/InviteCommandTest.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/test/kotlin/io/github/toberocat/improvedfactions/integration/commands/invite/InviteCommandProcessorTest.kt	(date 1732738074618)
@@ -9,7 +9,7 @@
 import kotlin.test.assertNotNull
 import kotlin.test.assertTrue
 
-class InviteCommandTest : ImprovedFactionsTest() {
+class InviteCommandProcessorTest : ImprovedFactionsTest() {
 
     private lateinit var player1: PlayerMock
     private lateinit var player2: PlayerMock
Index: improved-factions/src/test/kotlin/io/github/toberocat/improvedfactions/integration/commands/home/HomeCommandTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/test/kotlin/io/github/toberocat/improvedfactions/integration/commands/home/HomeCommandTest.kt b/improved-factions/src/test/kotlin/io/github/toberocat/improvedfactions/integration/commands/home/HomeCommandProcessorTest.kt
rename from improved-factions/src/test/kotlin/io/github/toberocat/improvedfactions/integration/commands/home/HomeCommandTest.kt
rename to improved-factions/src/test/kotlin/io/github/toberocat/improvedfactions/integration/commands/home/HomeCommandProcessorTest.kt
--- a/improved-factions/src/test/kotlin/io/github/toberocat/improvedfactions/integration/commands/home/HomeCommandTest.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/test/kotlin/io/github/toberocat/improvedfactions/integration/commands/home/HomeCommandProcessorTest.kt	(date 1732738074641)
@@ -10,7 +10,7 @@
 import org.junit.jupiter.params.provider.ValueSource
 import kotlin.test.assertTrue
 
-class HomeCommandTest : ImprovedFactionsTest() {
+class HomeCommandProcessorTest : ImprovedFactionsTest() {
 
     private lateinit var player1: PlayerMock
     private lateinit var player2: PlayerMock
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiListInvitesCommand.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.gui.commands.core\n\nimport io.github.toberocat.guiengine.GuiEngineApi\nimport io.github.toberocat.guiengine.components.container.tab.PagedContainer\nimport io.github.toberocat.guiengine.components.provided.item.SimpleItemComponent\nimport io.github.toberocat.guiengine.components.provided.paged.PagedComponent\nimport io.github.toberocat.guiengine.event.spigot.GuiCloseEvent\nimport io.github.toberocat.guiengine.function.GuiFunction\nimport io.github.toberocat.guiengine.render.RenderPriority\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.commands.invite.INVITES_COMMAND_CATEGORY\nimport io.github.toberocat.improvedfactions.commands.invite.INVITES_COMMAND_DESCRIPTION\nimport io.github.toberocat.improvedfactions.commands.invite.ListInvitesCommand\nimport io.github.toberocat.improvedfactions.database.DatabaseManager\nimport io.github.toberocat.improvedfactions.factions.Faction\nimport io.github.toberocat.improvedfactions.invites.FactionInvite\nimport io.github.toberocat.improvedfactions.invites.FactionInvites\nimport io.github.toberocat.improvedfactions.ranks.FactionRank\nimport io.github.toberocat.improvedfactions.user.FactionUser\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport io.github.toberocat.improvedfactions.utils.compute\nimport io.github.toberocat.toberocore.command.exceptions.CommandException\nimport io.github.toberocat.toberocore.util.ItemUtils\nimport org.bukkit.Bukkit\nimport org.bukkit.Material\nimport org.bukkit.entity.Player\nimport org.bukkit.inventory.ItemStack\nimport java.util.*\n\n@CommandMeta(\n    description = INVITES_COMMAND_DESCRIPTION,\n    category = INVITES_COMMAND_CATEGORY\n)\nclass GuiListInvitesCommand(\n    private val guiEngineApi: GuiEngineApi,\n    private val plugin: ImprovedFactionsPlugin\n) : ListInvitesCommand(plugin) {\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val context = guiEngineApi.openGui(player, \"invites\")\n        val paged = context.findComponentByClass<PagedComponent>()\n            ?: throw CommandException(\"base.gui.exceptions.missing-container\", emptyMap())\n\n        val invitedId = player.factionUser().id.value\n        val taskId = Bukkit.getScheduler().runTaskTimer(plugin, Runnable {\n            populateContainer(player, invitedId, paged)\n            context.render()\n        }, 0, 20L).taskId\n\n        context.listen(GuiCloseEvent::class.java) { Bukkit.getScheduler().cancelTask(taskId) }\n        return true\n    }\n\n    private fun populateContainer(player: Player, invited: Int, container: PagedContainer) {\n        container.clearContainer()\n        DatabaseManager.loggedTransaction {\n            FactionInvite.find { FactionInvites.invitedId eq invited }.forEach { invite ->\n                container.addComponent(createComponent(Faction.findById(invite.factionId), invite, player))\n            }\n        }\n    }\n\n    private fun createComponent(\n        faction: Faction?, invite: FactionInvite, player: Player\n    ): SimpleItemComponent {\n        val icon = faction?.icon ?: ItemStack(Material.OAK_SIGN)\n        ItemUtils.editMeta(icon) {\n            val lore = it.lore ?: mutableListOf()\n            lore.addAll(arrayOf(\"\",\n                \"§7Expires in: §e${invite.expiresInFormatted()}\",\n                \"§7Joining as: §e${FactionRank.findById(invite.rankId)?.name ?: \"§cNot found\"}\",\n                \"§7Invited by: §e${\n                    FactionUser.findById(invite.inviterId)\n                        ?.compute { Bukkit.getPlayer(it.uniqueId)?.name } ?: \"§c${invite.inviterId}\"\n                }\"))\n            it.lore = lore\n        }\n        return SimpleItemComponent(\n            0, 0, RenderPriority.NORMAL, UUID.randomUUID().toString(),\n            listOf(GuiFunction.anonymous {\n                it.api.openGui(\n                    player, \"invite-detail-page\", mapOf(\n                        \"invite\" to invite.id.toString(), \"faction\" to (faction?.name ?: \"§cDeleted\")\n                    )\n                )\n            }), emptyList(), emptyList(), icon, false\n        )\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiListInvitesCommand.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiListInvitesCommand.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiListInvitesCommand.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiListInvitesCommand.kt	(date 1732727682634)
@@ -18,7 +18,7 @@
 import io.github.toberocat.improvedfactions.ranks.FactionRank
 import io.github.toberocat.improvedfactions.user.FactionUser
 import io.github.toberocat.improvedfactions.user.factionUser
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import io.github.toberocat.improvedfactions.utils.compute
 import io.github.toberocat.toberocore.command.exceptions.CommandException
 import io.github.toberocat.toberocore.util.ItemUtils
Index: improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiRankCommandRoute.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.toberocat.improvedfactions.modules.gui.commands.core\n\nimport io.github.toberocat.guiengine.GuiEngineApi\nimport io.github.toberocat.guiengine.components.container.tab.PagedContainer\nimport io.github.toberocat.guiengine.function.GuiFunction\nimport io.github.toberocat.improvedfactions.ImprovedFactionsPlugin\nimport io.github.toberocat.improvedfactions.commands.rank.CreateRankCommand\nimport io.github.toberocat.improvedfactions.commands.rank.RANK_COMMAND_CATEGORY\nimport io.github.toberocat.improvedfactions.commands.rank.RANK_COMMAND_DESCRIPTION\nimport io.github.toberocat.improvedfactions.commands.rank.RankCommandRoute\nimport io.github.toberocat.improvedfactions.database.DatabaseManager\nimport io.github.toberocat.improvedfactions.modules.gui.actions.GuiEngineCommandMapperAction\nimport io.github.toberocat.improvedfactions.modules.gui.components.rank.FactionRankComponentBuilder\nimport io.github.toberocat.improvedfactions.ranks.listRanks\nimport io.github.toberocat.improvedfactions.user.factionUser\nimport io.github.toberocat.improvedfactions.utils.command.CommandMeta\nimport org.bukkit.Bukkit\nimport org.bukkit.entity.Player\n\n@CommandMeta(\n    description = RANK_COMMAND_DESCRIPTION,\n    category = RANK_COMMAND_CATEGORY\n)\nclass GuiRankCommandRoute(\n    private val guiEngineApi: GuiEngineApi,\n    plugin: ImprovedFactionsPlugin\n) : RankCommandRoute(plugin) {\n\n    init {\n        addChild(GuiEditPermissionsCommand(guiEngineApi, plugin))\n    }\n\n    override fun handle(player: Player, args: Array<String>): Boolean {\n        val context = guiEngineApi.openGui(player, \"rank/rank-overview\")\n        val container = context.findComponentByClass<PagedContainer>()\n            ?: return false\n        DatabaseManager.loggedTransaction {\n            val user = player.factionUser()\n            user.faction()\n                ?.listRanks()\n                ?.filter { user.canManage(it) }\n                ?.forEach {\n                    container.addComponent(\n                        FactionRankComponentBuilder()\n                            .setRank(it)\n                            .setClickFunctions(listOf(GuiFunction.anonymousSync { _ ->\n                                Bukkit.dispatchCommand(\n                                    player,\n                                    \"factions rank edit ${it.name}\"\n                                )\n                            }))\n                            .createComponent()\n                    )\n                }\n        }\n        context.render()\n        return true\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiRankCommandRoute.kt b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiRankCommandRoute.kt
--- a/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiRankCommandRoute.kt	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiRankCommandRoute.kt	(date 1732727682621)
@@ -13,7 +13,7 @@
 import io.github.toberocat.improvedfactions.modules.gui.components.rank.FactionRankComponentBuilder
 import io.github.toberocat.improvedfactions.ranks.listRanks
 import io.github.toberocat.improvedfactions.user.factionUser
-import io.github.toberocat.improvedfactions.utils.command.CommandMeta
+import io.github.toberocat.improvedfactions.annotations.CommandMeta
 import org.bukkit.Bukkit
 import org.bukkit.entity.Player
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"ad9c7d4c-34f8-4c4a-9806-e72e98556779\" name=\"Changes\" comment=\"Added config option to hide wilderness title\">\n      <change afterPath=\"$PROJECT_DIR$/.idea/dataSources.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/RelationType.kt\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/RelationsModule.kt\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AlliesCommand.kt\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AllyAcceptCommand.kt\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AllyCommand.kt\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/EnemiesCommand.kt\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/PeaceCommand.kt\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/SendPower.kt\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/WarCommand.kt\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/database/FactionAllyInvite.kt\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/database/FactionAllyInvites.kt\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/database/FactionRelation.kt\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/database/FactionRelations.kt\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/handles/DummyHandles.kt\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/handles/RelationsModuleHandle.kt\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/impl/RelationsModuleHandleImpl.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.github/workflows/nightly-builds.yml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.github/workflows/nightly-builds.yml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/gradle.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/gradle.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/claims/clustering/detector/ClaimClusterDetector.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/claims/clustering/detector/ClaimClusterDetector.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/InfoCommand.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/InfoCommand.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/factions/Faction.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/factions/Faction.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/ModuleManager.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/ModuleManager.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/base/BaseModule.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/base/BaseModule.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/ChatModule.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/ChatModule.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/claimparticle/ClaimParticleModule.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/claimparticle/ClaimParticleModule.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/dynmap/DynmapModule.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/dynmap/DynmapModule.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/GuiModule.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/GuiModule.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/home/HomeModule.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/home/HomeModule.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/PowerRaidsModule.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/PowerRaidsModule.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/wilderness/WildernessModule.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/wilderness/WildernessModule.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/permissions/FactionPermissionHandler.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/permissions/FactionPermissionHandler.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/utils/command/CommandMeta.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/utils/command/CommandMeta.kt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/improved-factions/src/main/resources/config.yml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/improved-factions/src/main/resources/config.yml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/improved-factions/src/main/resources/languages/messages_en.properties\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/improved-factions/src/main/resources/languages/messages_en.properties\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ExternalProjectsData\">\n    <projectState path=\"$PROJECT_DIR$/improved-factions\">\n      <ProjectState />\n    </projectState>\n  </component>\n  <component name=\"ExternalProjectsManager\">\n    <system id=\"GRADLE\">\n      <state>\n        <task path=\"$PROJECT_DIR$/improved-factions\">\n          <activation />\n        </task>\n        <projects_view>\n          <tree_state>\n            <expand>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"ImprovedFactions\" type=\"f1a62948:ProjectNode\" />\n              </path>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"ImprovedFactions\" type=\"f1a62948:ProjectNode\" />\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\n              </path>\n              <path>\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\n                <item name=\"ImprovedFactions\" type=\"f1a62948:ProjectNode\" />\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\n                <item name=\"verification\" type=\"c8890929:TasksNode$1\" />\n              </path>\n            </expand>\n            <select />\n          </tree_state>\n        </projects_view>\n      </state>\n    </system>\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Kotlin Interface\" />\n        <option value=\"Kotlin Object\" />\n        <option value=\"Kotlin Enum\" />\n        <option value=\"Kotlin Class\" />\n        <option value=\"IF Command\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"wilderness-title-disable\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"ROOT_SYNC\" value=\"DONT_SYNC\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;ToberoCat&quot;\n  }\n}</component>\n  <component name=\"GithubProjectSettings\">\n    <option name=\"branchProtectionPatterns\">\n      <list>\n        <option value=\"main\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/ToberoCat/ImprovedFactions&quot;,\n    &quot;accountId&quot;: &quot;4d680c3f-ea1a-4edc-a6b9-348f20b21afb&quot;\n  },\n  &quot;recentNewPullRequestHead&quot;: {\n    &quot;server&quot;: {\n      &quot;useHttp&quot;: false,\n      &quot;host&quot;: &quot;github.com&quot;,\n      &quot;port&quot;: null,\n      &quot;suffix&quot;: null\n    },\n    &quot;owner&quot;: &quot;ToberoCat&quot;,\n    &quot;repository&quot;: &quot;ImprovedFactions&quot;\n  }\n}</component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;customColor&quot;: &quot;&quot;,\n  &quot;associatedIndex&quot;: 6\n}</component>\n  <component name=\"ProjectId\" id=\"2ln8LXTJEKgmpQZ8v9bYLdFx6df\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Docker.docker-compose.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,\n    &quot;Gradle.Build Plugin.executor&quot;: &quot;Run&quot;,\n    &quot;Gradle.Download Sources.executor&quot;: &quot;Run&quot;,\n    &quot;Gradle.HomeCommandTest.executor&quot;: &quot;Run&quot;,\n    &quot;Gradle.Test Plugin.executor&quot;: &quot;Run&quot;,\n    &quot;Gradle.TitleTest.Test title on enter.executor&quot;: &quot;Debug&quot;,\n    &quot;Gradle.improved-factions [build].executor&quot;: &quot;Run&quot;,\n    &quot;Gradle.improved-factions [test].executor&quot;: &quot;Run&quot;,\n    &quot;Remote JVM Debug.Debug Server.executor&quot;: &quot;Debug&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/media/tobias/Data/Development/Minecraft/Spigot/Projects&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;fileTemplates&quot;,\n    &quot;settings.editor.splitter.proportion&quot;: &quot;0.25428858&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RunManager\" selected=\"Gradle.Build Plugin\">\n    <configuration name=\"TitleTest.Test title on enter\" type=\"GradleRunConfiguration\" factoryName=\"Gradle\" temporary=\"true\">\n      <ExternalSystemSettings>\n        <option name=\"executionName\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$/improved-factions\" />\n        <option name=\"externalSystemIdString\" value=\"GRADLE\" />\n        <option name=\"scriptParameters\" value=\"\" />\n        <option name=\"taskDescriptions\">\n          <list />\n        </option>\n        <option name=\"taskNames\">\n          <list>\n            <option value=\":test\" />\n            <option value=\"--tests\" />\n            <option value=\"&quot;io.github.toberocat.improvedfactions.integration.listeners.TitleTest.Test title on enter&quot;\" />\n          </list>\n        </option>\n        <option name=\"vmOptions\" />\n      </ExternalSystemSettings>\n      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>\n      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>\n      <DebugAllEnabled>false</DebugAllEnabled>\n      <RunAsTest>true</RunAsTest>\n      <method v=\"2\" />\n    </configuration>\n    <configuration default=\"true\" type=\"docker-deploy\" factoryName=\"docker-compose.yml\" temporary=\"true\">\n      <deployment type=\"docker-compose.yml\">\n        <settings />\n      </deployment>\n      <method v=\"2\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"Docker.Start Server\" />\n      <item itemvalue=\"Gradle.Build Plugin\" />\n      <item itemvalue=\"Gradle.Test Plugin\" />\n      <item itemvalue=\"Gradle.TitleTest.Test title on enter\" />\n      <item itemvalue=\"Remote JVM Debug.Debug Server\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Gradle.TitleTest.Test title on enter\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-jdk-9823dce3aa75-b114ca120d71-intellij.indexing.shared.core-IU-242.21829.142\" />\n        <option value=\"bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-IU-242.21829.142\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"ad9c7d4c-34f8-4c4a-9806-e72e98556779\" name=\"Changes\" comment=\"\" />\n      <created>1725804426022</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1725804426022</updated>\n      <workItem from=\"1725804428962\" duration=\"2666000\" />\n      <workItem from=\"1725898664176\" duration=\"7290000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Migrated to gradle instead of maven\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1725804599277</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1725804599277</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Migrated to gradle\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1725806598434</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1725806598434</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Added Test Stage\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1725806636119</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1725806636120</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Added more admin commands\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1725811224105</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1725811224105</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Fchat Logs to console\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1725811712785</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1725811712785</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Chat spy command\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1725812216646</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1725812216646</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Added config option to hide wilderness title\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1725812498150</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1725812498150</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"8\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <ignored-roots>\n      <path value=\"$PROJECT_DIR$/improved-factions\" />\n    </ignored-roots>\n    <MESSAGE value=\"Migrated to gradle instead of maven\" />\n    <MESSAGE value=\"Migrated to gradle\" />\n    <MESSAGE value=\"Added Test Stage\" />\n    <MESSAGE value=\"Added more admin commands\" />\n    <MESSAGE value=\"Fchat Logs to console\" />\n    <MESSAGE value=\"Chat spy command\" />\n    <MESSAGE value=\"Added config option to hide wilderness title\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Added config option to hide wilderness title\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"kotlin-line\">\n          <url>file://$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/ImprovedFactionsPlugin.kt</url>\n          <line>71</line>\n          <option name=\"timeStamp\" value=\"5\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\n    <expand />\n    <select />\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/ImprovedFactions$Test_Plugin.ic\" NAME=\"Test Plugin Coverage Results\" MODIFIED=\"1725806623300\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/.idea/workspace.xml	(date 1732736958651)
@@ -5,42 +5,112 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="ad9c7d4c-34f8-4c4a-9806-e72e98556779" name="Changes" comment="Added config option to hide wilderness title">
-      <change afterPath="$PROJECT_DIR$/.idea/dataSources.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/RelationType.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/RelationsModule.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AlliesCommand.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AllyAcceptCommand.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AllyCommand.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/EnemiesCommand.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/PeaceCommand.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/SendPower.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/WarCommand.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/database/FactionAllyInvite.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/database/FactionAllyInvites.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/database/FactionRelation.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/database/FactionRelations.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/handles/DummyHandles.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/handles/RelationsModuleHandle.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/impl/RelationsModuleHandleImpl.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.github/workflows/nightly-builds.yml" beforeDir="false" afterPath="$PROJECT_DIR$/.github/workflows/nightly-builds.yml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/CommandResponse.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/GeneratedCommandMeta.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/ResponseType.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/data/CommandData.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/data/CommandProcessFunction.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/generator/CommandCodeGenerator.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/processor/CommandProcessor.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/processor/CommandProcessorProvider.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command/visitors/CommandVisitor.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/utils/Utils.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/code-generation/src/main/resources/META-INF/services/com.google.devtools.ksp.processing.SymbolProcessorProvider" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/CommandProcessorProvider.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/command/CommandMetaData.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/command/CommandProcessor.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/command/CommandVisitor.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/documentation-generation/src/main/resources/META-INF/services/com.google.devtools.ksp.processing.SymbolProcessorProvider" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/Command.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/CommandProcessResult.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/TestCommand.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/arguments/ArgumentParser.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/executor/CommandExecutor.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/dataSources.local.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/gradle.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/gradle.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/kotlinc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/kotlinc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/modules/io.github.toberocat.improved-factions.ImprovedFactions.main.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules/io.github.toberocat.improved-factions.ImprovedFactions.main.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/runConfigurations/Build_Plugin.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/runConfigurations/Build_Plugin.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_09_24,_16_59_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_09_24__16_59__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_08_09_24,_17_14_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_08_09_24__17_14__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase_[Changes]1/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_rebase__Changes_1.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/claims/clustering/detector/ClaimClusterDetector.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/claims/clustering/detector/ClaimClusterDetector.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/InfoCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/InfoCommand.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/factions/Faction.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/factions/Faction.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/ModuleManager.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/ModuleManager.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/base/BaseModule.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/base/BaseModule.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/ChatModule.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/ChatModule.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/claimparticle/ClaimParticleModule.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/claimparticle/ClaimParticleModule.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/dynmap/DynmapModule.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/dynmap/DynmapModule.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/GuiModule.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/GuiModule.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/home/HomeModule.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/home/HomeModule.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/PowerRaidsModule.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/PowerRaidsModule.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/wilderness/WildernessModule.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/wilderness/WildernessModule.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/permissions/FactionPermissionHandler.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/permissions/FactionPermissionHandler.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/utils/command/CommandMeta.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/utils/command/CommandMeta.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/resources/config.yml" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/resources/config.yml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/resources/languages/messages_en.properties" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/resources/languages/messages_en.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/build.gradle.kts" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/build.gradle.kts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/gradle/libs.versions.toml" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/gradle/libs.versions.toml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/settings.gradle.kts" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/settings.gradle.kts" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/ImprovedFactionsPlugin.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/ImprovedFactionsPlugin.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/FactionCommandExecutor.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/executor/FactionCommandExecutor.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/GenerateWikiSourcesCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/general/GenerateWikiSourcesCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/HelpCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/general/HelpCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/InfoCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/general/InfoCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/ListFactionsCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/general/ListFactionsCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/ByPassCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/ByPassCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/ReloadCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/ReloadCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceClaimCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceClaimCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceCommandRoute.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceCommandRoute.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceInfoCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceInfoCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceJoinCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceJoinCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceLeaveCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceLeaveCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceUnclaimCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/force/ForceUnclaimCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneClaimCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneClaimCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneCommandRoute.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneCommandRoute.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneUnclaimCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/admin/zone/ZoneUnclaimCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/ClaimCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/ClaimCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/FactionMap.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/FactionMap.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/UnclaimCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/claim/UnclaimCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteAcceptCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteAcceptCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteDiscardCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/InviteDiscardCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/ListInvitesCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/invite/ListInvitesCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/CreateCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/CreateCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/DeleteCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/DeleteCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/IconCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/IconCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/JoinTypeCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/JoinTypeCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/RenameCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/manage/RenameCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/BanCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/BanCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/JoinCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/JoinCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/KickCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/KickCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/LeaveCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/LeaveCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/MembersCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/MembersCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/TransferOwnershipCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/TransferOwnershipCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/UnBanCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/member/UnBanCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/AssignRankCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/AssignRankCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/CreateRankCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/CreateRankCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/DefaultRankCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/DefaultRankCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/DeleteRankCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/DeleteRankCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/EditPermissionsCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/EditPermissionsCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/RankCommandRoute.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/RankCommandRoute.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/SetPermissionCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/rank/SetPermissionCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatSpyCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/chat/commands/ChatSpyCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiEditPermissionsCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiEditPermissionsCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiInfoCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiInfoCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiListInvitesCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiListInvitesCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiMembersCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiMembersCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiRankCommandRoute.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/core/GuiRankCommandRoute.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/power/GuiPowerCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/gui/commands/power/GuiPowerCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/home/commands/HomeSetCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/home/commands/HomeSetCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/home/commands/TeleportHomeCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/home/commands/TeleportHomeCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerAddCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerAddCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerSetCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/PowerSetCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/SiegeCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/power/commands/SiegeCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AlliesCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AlliesCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AllyAcceptCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AllyAcceptCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AllyCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/AllyCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/EnemiesCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/EnemiesCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/PeaceCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/PeaceCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/SendPower.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/SendPower.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/WarCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/relations/commands/WarCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/wilderness/commands/WildernessCommand.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/modules/wilderness/commands/WildernessCommand.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/utils/Extensions.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/utils/Extensions.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/utils/command/CommandMeta.kt" beforeDir="false" afterPath="$PROJECT_DIR$/improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations/CommandMeta.kt" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -86,11 +156,12 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
-        <option value="Kotlin Interface" />
         <option value="Kotlin Object" />
+        <option value="IF Command" />
+        <option value="Kotlin Annotation" />
         <option value="Kotlin Enum" />
+        <option value="Kotlin Interface" />
         <option value="Kotlin Class" />
-        <option value="IF Command" />
       </list>
     </option>
   </component>
@@ -142,32 +213,53 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Docker.docker-compose.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
-    &quot;Gradle.Build Plugin.executor&quot;: &quot;Run&quot;,
-    &quot;Gradle.Download Sources.executor&quot;: &quot;Run&quot;,
-    &quot;Gradle.HomeCommandTest.executor&quot;: &quot;Run&quot;,
-    &quot;Gradle.Test Plugin.executor&quot;: &quot;Run&quot;,
-    &quot;Gradle.TitleTest.Test title on enter.executor&quot;: &quot;Debug&quot;,
-    &quot;Gradle.improved-factions [build].executor&quot;: &quot;Run&quot;,
-    &quot;Gradle.improved-factions [test].executor&quot;: &quot;Run&quot;,
-    &quot;Remote JVM Debug.Debug Server.executor&quot;: &quot;Debug&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
-    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;/media/tobias/Data/Development/Minecraft/Spigot/Projects&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;fileTemplates&quot;,
-    &quot;settings.editor.splitter.proportion&quot;: &quot;0.25428858&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
+    "Gradle.Build Plugin.executor": "Run",
+    "Gradle.Build improved-factions.executor": "Run",
+    "Gradle.Download Sources.executor": "Run",
+    "Gradle.HomeCommandTest.executor": "Run",
+    "Gradle.Test Plugin.executor": "Run",
+    "Gradle.TitleTest.Test title on enter.executor": "Debug",
+    "Gradle.improved-factions [build].executor": "Run",
+    "Gradle.improved-factions [test].executor": "Run",
+    "JUnit.Whole project.executor": "Run",
+    "Remote JVM Debug.Debug Server.executor": "Debug",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "git-widget-placeholder": "main",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "/home/tobias/Downloads/ImprovedFactions/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "project.structure.last.edited": "Modules",
+    "project.structure.proportion": "0.0",
+    "project.structure.side.proportion": "0.0",
+    "settings.editor.selected.configurable": "project.kotlinCompiler",
+    "settings.editor.splitter.proportion": "0.25428858",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
+  <component name="RecentsManager">
+    <key name="CopyFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/command" />
+      <recent name="$PROJECT_DIR$/improved-factions/annotations/src/main/kotlin/io/github/toberocat/improvedfactions/annotations" />
+    </key>
+    <key name="MoveFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/commands/general" />
+      <recent name="$PROJECT_DIR$/improved-factions/documentation-generation/src/main/kotlin/io/github/toberocat/improvedfactions/processors/command" />
+    </key>
+    <key name="MoveKotlinTopLevelDeclarationsDialog.RECENTS_KEY">
+      <recent name="io.github.toberocat.improvedfactions.command.data" />
+      <recent name="io.github.toberocat.improvedfactions.command.generator.visitors" />
+      <recent name="io.github.toberocat.improvedfactions.commands.executor" />
+      <recent name="io.github.toberocat.improvedfactions.command.processor" />
+    </key>
+  </component>
   <component name="RunManager" selected="Gradle.Build Plugin">
     <configuration name="TitleTest.Test title on enter" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
       <ExternalSystemSettings>
@@ -192,6 +284,16 @@
       <DebugAllEnabled>false</DebugAllEnabled>
       <RunAsTest>true</RunAsTest>
       <method v="2" />
+    </configuration>
+    <configuration name="Whole project" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
+      <option name="PACKAGE_NAME" value="" />
+      <option name="TEST_OBJECT" value="package" />
+      <option name="TEST_SEARCH_SCOPE">
+        <value defaultName="wholeProject" />
+      </option>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
     </configuration>
     <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
       <deployment type="docker-compose.yml">
@@ -204,10 +306,12 @@
       <item itemvalue="Gradle.Build Plugin" />
       <item itemvalue="Gradle.Test Plugin" />
       <item itemvalue="Gradle.TitleTest.Test title on enter" />
+      <item itemvalue="JUnit.Whole project" />
       <item itemvalue="Remote JVM Debug.Debug Server" />
     </list>
     <recent_temporary>
       <list>
+        <item itemvalue="JUnit.Whole project" />
         <item itemvalue="Gradle.TitleTest.Test title on enter" />
       </list>
     </recent_temporary>
@@ -215,8 +319,8 @@
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
-        <option value="bundled-jdk-9823dce3aa75-b114ca120d71-intellij.indexing.shared.core-IU-242.21829.142" />
-        <option value="bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-IU-242.21829.142" />
+        <option value="bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.23726.103" />
+        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.23726.103" />
       </set>
     </attachedChunks>
   </component>
@@ -230,6 +334,8 @@
       <updated>1725804426022</updated>
       <workItem from="1725804428962" duration="2666000" />
       <workItem from="1725898664176" duration="7290000" />
+      <workItem from="1732717896047" duration="947000" />
+      <workItem from="1732725638616" duration="11318000" />
     </task>
     <task id="LOCAL-00001" summary="Migrated to gradle instead of maven">
       <option name="closed" value="true" />
@@ -322,7 +428,7 @@
       <breakpoints>
         <line-breakpoint enabled="true" type="kotlin-line">
           <url>file://$PROJECT_DIR$/improved-factions/src/main/kotlin/io/github/toberocat/improvedfactions/ImprovedFactionsPlugin.kt</url>
-          <line>71</line>
+          <line>69</line>
           <option name="timeStamp" value="5" />
         </line-breakpoint>
       </breakpoints>
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n  <component name=\"GradleSettings\">\n    <option name=\"linkedExternalProjectsSettings\">\n      <GradleProjectSettings>\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$/improved-factions\" />\n        <option name=\"gradleJvm\" value=\"temurin-22\" />\n        <option name=\"modules\">\n          <set>\n            <option value=\"$PROJECT_DIR$/improved-factions\" />\n          </set>\n        </option>\n      </GradleProjectSettings>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/.idea/gradle.xml	(date 1732728975903)
@@ -9,6 +9,10 @@
         <option name="modules">
           <set>
             <option value="$PROJECT_DIR$/improved-factions" />
+            <option value="$PROJECT_DIR$/improved-factions/annotations" />
+            <option value="$PROJECT_DIR$/improved-factions/code-generation" />
+            <option value="$PROJECT_DIR$/improved-factions/documentation-generation" />
+            <option value="$PROJECT_DIR$/improved-factions/improved-factions" />
           </set>
         </option>
       </GradleProjectSettings>
Index: improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/utils/Utils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/utils/Utils.kt b/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/utils/Utils.kt
new file mode 100644
--- /dev/null	(date 1732734510373)
+++ b/improved-factions/code-generation/src/main/kotlin/io/github/toberocat/improvedfactions/utils/Utils.kt	(date 1732734510373)
@@ -0,0 +1,3 @@
+package io.github.toberocat.improvedfactions.utils
+
+fun String.camlCaseToSnakeCase(separator: String = "_") = replace(Regex("([a-z])([A-Z]+)"), "$1${separator}$2").lowercase()
Index: .idea/dataSources.local.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"dataSourceStorageLocal\" created-in=\"IU-242.21829.142\">\n    <data-source name=\"database\" uuid=\"ad5fcd62-f833-4a7a-b3fd-c80c3a741371\">\n      <database-info product=\"SQLite\" version=\"3.45.1\" jdbc-version=\"4.2\" driver-name=\"SQLite JDBC\" driver-version=\"3.45.1.0\" dbms=\"SQLITE\" exact-version=\"3.45.1\" exact-driver-version=\"3.45\">\n        <identifier-quote-string>&quot;</identifier-quote-string>\n      </database-info>\n      <case-sensitivity plain-identifiers=\"mixed\" quoted-identifiers=\"mixed\" />\n      <auth-provider>no-auth</auth-provider>\n      <schema-mapping>\n        <introspection-scope>\n          <node kind=\"schema\" qname=\"@\" />\n        </introspection-scope>\n      </schema-mapping>\n    </data-source>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources.local.xml b/.idea/dataSources.local.xml
--- a/.idea/dataSources.local.xml	(revision bc4bf4edbf96d126bc83b3e80df6b209486ec547)
+++ b/.idea/dataSources.local.xml	(date 1732718747427)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="dataSourceStorageLocal" created-in="IU-242.21829.142">
+  <component name="dataSourceStorageLocal" created-in="IU-242.23726.103">
     <data-source name="database" uuid="ad5fcd62-f833-4a7a-b3fd-c80c3a741371">
       <database-info product="SQLite" version="3.45.1" jdbc-version="4.2" driver-name="SQLite JDBC" driver-version="3.45.1.0" dbms="SQLITE" exact-version="3.45.1" exact-driver-version="3.45">
         <identifier-quote-string>&quot;</identifier-quote-string>
